## CONFIGURATION ==============================================================

# name=kcfa-pta-dlog

.include "V.dom"
.include "C.dom"
.include "F.dom"

.bddvarorder F0_V0xV1_C0xC1xC2

## INPUT RELATIONS ============================================================

# Program facts - reference-type variables
cfl_cs_alloc(c:C,l:V,o:C) input
cfl_cs_assign(c:C,l:V,r:V) input
cfl_cs_loadInst(c:C,l:V,b:V,f:F) input
cfl_cs_loadStat(c:C,l:V,f:F) input
cfl_cs_storeInst(c:C,b:V,f:F,r:V) input
cfl_cs_storeStat(c:C,f:F,r:V) input
cfl_cs_assignInterproc(c:C,u:V,d:C,v:V) input
TypeFilter(v:V,o:C) input

## INTERMEDIATE RELATIONS =====================================================

# Points-to analysis facts
cs_statFldPt(f:F,obj:C)

## OUTPUT RELATIONS ===========================================================

cs_pt(varc:C,var:V,obj:C) output
cs_instFldPt(base:C,f:F,obj:C) output

## RULES ======================================================================

# Points-to information

cs_pt(ca,a,o)         :- cfl_cs_alloc(ca,a,o).
cs_pt(cb,b,o)         :- cfl_cs_assign(cb,b,a), cs_pt(cb,a,o), TypeFilter(b,o).
cs_pt(cb,b,o)         :- cfl_cs_assignInterproc(cb,b,ca,a), cs_pt(ca,a,o), TypeFilter(b,o).
#cs_pt(cb,b,o)         :- cfl_cs_assign(cb,b,a), cs_pt(cb,a,o).
#cs_pt(cb,b,o)         :- cfl_cs_assignInterproc(cb,b,ca,a), cs_pt(ca,a,o).

cs_instFldPt(o1,f,o2) :- cs_pt(ca,a,o2), cfl_cs_storeInst(ca,p,f,a), cs_pt(ca,p,o1).
cs_pt(ca,a,o2)        :- cfl_cs_loadInst(ca,a,p,f), cs_pt(ca,p,o1), cs_instFldPt(o1,f,o2).

cs_statFldPt(f,o)     :- cs_pt(ca,a,o), cfl_cs_storeStat(ca,f,a).
cs_pt(ca,a,o)         :- cs_statFldPt(f,o), cfl_cs_loadStat(ca,a,f).
