# Field-sensitive, k-CFA-based, heap-flow-based, taint-flow-based taint
# analysis.

# Derived from Chord analysis formulation
# Additional rule splitting optimizations:
# - Inline InstFldPt in 3rd rule of FlowsTo
# - Coarsen the rule for InstFldPt
#   (all of its remaining uses don't care about its specific index)
# - Group 3rd rule of FlowsTo as:
#   FlowsTo ( (cs_refStore[f] _FlowsTo) (FlowsTo cs_refLoad[f]))
# - Reuse symbol for "cs_refStore[f] _FlowsTo" in InstFldPt
#   (had to use it in reverse, and with *)
# - Inline Src2ObjPrimFld everywhere (and remove it from the grammar)
#   (had to reason about the use of indices when inlining)
# - Remove duplicate rule "Src2Sink :: Src2Obj Obj2Sink"
# - Group 3rd rule of Src2Prim as:
#   Src2Prim ( (cs_primStore[f] _FlowsTo) (FlowsTo cs_primLoad[f]) )
# - Reuse symbol for "cs_primStore[f] _FlowsTo" in 3rd rule of Src2Sink
# - Reuse symbol for "FlowsTo cs_primLoad[f]" in 4th rule of Src2Prim
#   (had to use it with *)

# Handles:
# - [X] Points-to information
# - [X] Taint flow
#   - [X] Reference-type
#   - [X] Primitive-type
# - [X] Passthroughs
#   - [X] ref-to-ref
#   - [X] prim-to-prim
#   - [X] ref-to-prim
#   - [X] prim-to-ref
# - [-] Nested object tainting (ref, prim)
#   - [X] models tainting existing objects (arbitrarily deeply)
#   - [ ] models allocating (and arbitrarily sub-tainting) new objects
# - [X] Nested object escaping (ref, prim)
# - [ ] Nested passthrough taint (ref, prim)
# - [X] Non-full passthrough variants
# - ...

# Points-to rules
FlowsTo :: cs_refAlloc
         | FlowsTo cs_refAssign
         | FlowsTo R3
R1[f] :: cs_refStore[f] _FlowsTo
R2[f] :: FlowsTo cs_refLoad[f]
R3 :: R1[f] R2[f]
InstFldPt :: _R1[*] _FlowsTo

# Basic taint propagation rules
Src2Obj :: cs_srcRefFlow _FlowsTo
Src2Prim :: cs_srcPrimFlow
          | Src2Prim cs_primAssign
          | Src2Prim R6
	  | Src2Obj R5[*]
R4[f] :: cs_primStore[f] _FlowsTo
R5[f] :: FlowsTo cs_primLoad[f]
R6 :: R4[f] R5[f]
Obj2Sink :: FlowsTo cs_refSinkFlow
Src2Sink :: Src2Obj Obj2Sink
          | Src2Prim cs_primSinkFlow

# Passthrough handling
Src2Ref :: Src2Obj FlowsTo
Src2Obj :: Src2Ref cs_refRefFlow _FlowsTo
         | Src2Prim cs_primRefFlow _FlowsTo
Src2Prim :: Src2Prim cs_primPrimFlow
          | Src2Ref cs_refPrimFlow

# Nested taint rules
# o tainted => o.* tainted
Src2Obj :: Src2Obj InstFldPt
# o escapes => o.* escapes
Obj2Sink :: _InstFldPt Obj2Sink
Src2Sink :: Src2Prim R4[*] Obj2Sink
