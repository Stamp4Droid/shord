# TODO:
# - Convert to proper RG format.
# - The matching of storePrim and loadPrim doesn't happen recursively, so we
#   could just copy the rule for all fields.

MoveRef :: asgnRef
         | statStoreRef statLoadRef
         | paramRef[*]
         | retRef[*]

# Points-to rules
# (derived by regularizing the RSM for Alias)
Rev :: -
     | Rev _MoveRef
     | Rev _loadRef[*]
     | Alias storeRef[*]
     | Alias _storeRef[*]

Alias :: Rev _new new
       | Alias MoveRef
       | Alias loadRef[*]

# Passthrough entry
Ref2Ref :: ref2Ref
	 | arrStoreRef Alias Ref2Ref
Ref2Prim :: ref2Prim
	  | arrStoreRef Alias Ref2Prim

# Label flow
LabelRefIn :: label2Ref
	    | LabelRefIn Alias loadRef[*]
XferRefOut :: Label2Ref Alias Ref2Ref
	    | Label2Prim arrStorePrim Alias Ref2Ref
	    | Label2Prim prim2Ref
	    | XferRefOut Alias arrLoadRef
Label2Ref :: LabelRefIn
	   | XferRefOut

Label2Prim :: label2Prim
            | Label2Prim asgnPrim
            | Label2Prim paramPrim[*]
            | Label2Prim retPrim[*]
            | Label2Prim statStorePrim statLoadPrim
            | Label2Prim storePrim[*] Alias loadPrim[*]
	    | LabelRefIn Alias loadPrim[*]
	    | XferRefOut Alias arrLoadPrim
	    | Label2Ref Alias Ref2Prim
	    | Label2Prim arrStorePrim Alias Ref2Prim
	    | Label2Prim prim2Prim

# Escape flow
Ref2Sink :: ref2Sink
	  | ref2SinkByRef Alias _Label2Ref sinkLabel
	  | ref2SinkByPrim _Label2Prim sinkLabel
	  | storeRef[*] Alias Ref2Sink
Prim2Sink :: prim2Sink
	   | prim2SinkByRef Alias _Label2Ref sinkLabel
	   | prim2SinkByPrim _Label2Prim sinkLabel

# Complete flow
Src2Sink :: srcLabel Label2Ref Alias Ref2Sink
	  | srcLabel Label2Prim storePrim[*] Alias Ref2Sink
	  | srcLabel Label2Prim Prim2Sink
.paths Src2Sink 1
