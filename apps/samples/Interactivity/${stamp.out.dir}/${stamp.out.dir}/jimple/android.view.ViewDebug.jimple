public class android.view.ViewDebug extends java.lang.Object
{
    public static final boolean TRACE_HIERARCHY;
    public static final boolean TRACE_RECYCLER;

    public void <init>()
    {
        android.view.ViewDebug r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.view.ViewDebug;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    public static transient void trace(android.view.View, android.view.ViewDebug$RecyclerTraceType, int[])
    {
        android.view.View r0;
        android.view.ViewDebug$RecyclerTraceType r1;
        int[] r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: android.view.View;
        r1 := @parameter1: android.view.ViewDebug$RecyclerTraceType;
        r2 := @parameter2: int[];
        $r3 = new java.lang.RuntimeException;
        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r3;
    }

    public static void startRecyclerTracing(java.lang.String, android.view.View)
    {
        java.lang.String r0;
        android.view.View r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: android.view.View;
        $r2 = new java.lang.RuntimeException;
        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r2;
    }

    public static void stopRecyclerTracing()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;
        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r0;
    }

    public static void trace(android.view.View, android.view.ViewDebug$HierarchyTraceType)
    {
        android.view.View r0;
        android.view.ViewDebug$HierarchyTraceType r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: android.view.View;
        r1 := @parameter1: android.view.ViewDebug$HierarchyTraceType;
        $r2 = new java.lang.RuntimeException;
        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r2;
    }

    public static void startHierarchyTracing(java.lang.String, android.view.View)
    {
        java.lang.String r0;
        android.view.View r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: android.view.View;
        $r2 = new java.lang.RuntimeException;
        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r2;
    }

    public static void stopHierarchyTracing()
    {
        java.lang.RuntimeException $r0;

        $r0 = new java.lang.RuntimeException;
        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r0;
    }

    public static void dumpCapturedView(java.lang.String, java.lang.Object)
    {
        java.lang.String r0;
        java.lang.Object r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.Object;
        $r2 = new java.lang.RuntimeException;
        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r2;
    }
}
