public class java.io.FileInputStream extends java.io.InputStream implements java.io.Closeable
{

    public int available() throws java.io.IOException
    {
        java.io.FileInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FileInputStream;
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    public void close() throws java.io.IOException
    {
        java.io.FileInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FileInputStream;
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    protected void finalize() throws java.io.IOException
    {
        java.io.FileInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FileInputStream;
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    public java.nio.channels.FileChannel getChannel()
    {
        java.io.FileInputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FileInputStream;
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.FileInputStream r0;
        long l0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.FileInputStream;
        l0 := @parameter0: long;
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    public void <init>(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.FileInputStream r0;
        java.io.File r1;

        r0 := @this: java.io.FileInputStream;
        r1 := @parameter0: java.io.File;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        return;
    }

    public void <init>(java.io.FileDescriptor)
    {
        java.io.FileInputStream r0;
        java.io.FileDescriptor r1;

        r0 := @this: java.io.FileInputStream;
        r1 := @parameter0: java.io.FileDescriptor;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        return;
    }

    public void <init>(java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.FileInputStream r0;
        java.lang.String r1;

        r0 := @this: java.io.FileInputStream;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<java.io.InputStream: void <init>()>();
        return;
    }

    private byte taintByte()
    {
        java.io.FileInputStream r0;

        r0 := @this: java.io.FileInputStream;
        return 0;
    }

    public int read() throws java.io.IOException
    {
        java.io.FileInputStream r0;

        r0 := @this: java.io.FileInputStream;
        return 0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.io.FileInputStream r0;
        byte[] r1;
        int i0, i1;
        byte $b2;

        r0 := @this: java.io.FileInputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        $b2 = specialinvoke r0.<java.io.FileInputStream: byte taintByte()>();
        r1[0] = $b2;
        return 0;
    }

    public final java.io.FileDescriptor getFD() throws java.io.IOException
    {
        java.io.FileInputStream r0;
        java.io.FileDescriptor $r1;

        r0 := @this: java.io.FileInputStream;
        $r1 = new java.io.FileDescriptor;
        specialinvoke $r1.<java.io.FileDescriptor: void <init>()>();
        return $r1;
    }
}
