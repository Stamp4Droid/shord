Chord run initiated at: Jan 31, 2014 10:59:11 AM
java.vendor: Oracle Corporation
java.version: 1.7.0_51
os.arch: amd64
os.name: Linux
os.version: 3.11.0-14-generic
java.class.path: /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar
chord.max.heap: 4096m
chord.max.stack: null
chord.jvmargs: null
chord.main.dir: null
chord.work.dir: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder
chord.main.class: edu.stanford.stamp.harness.Main
chord.class.path: /home/obastani/Documents/projects/stamp/stamptest/DarpaApps/1A_SMSReminder/bin/SmsReminderActivity-debug.apk:/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/stamp-driver
chord.src.path: null
chord.run.ids: 0
chord.runtime.jvmargs: -ea -Xmx1024m
chord.scope.kind: rta
chord.reflect.kind: none
chord.ch.kind: static
chord.ssa: phi
chord.std.scope.exclude: 
chord.ext.scope.exclude: 
chord.scope.exclude: 
chord.std.check.exclude: 
chord.ext.check.exclude: 
chord.check.exclude: 
chord.build.scope: false
chord.run.analyses: inject-annot,base-java,annot-java,contexts-java,context-label-java,pre-dlog,typefilter-dlog,pt-dlog,taint-lim-dlog,jimpleprinter,post-dlog,post-java,dynfeatures-java
chord.print.all.classes: false
chord.print.classes: 
chord.print.rels: 
chord.print.project: false
chord.print.results: true
chord.save.maps: true
chord.verbose: 2
chord.classic: true
chord.std.java.analysis.path: null
chord.ext.java.analysis.path: null
chord.java.analysis.path: /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/scanner/stamp.scanner.jar
chord.std.dlog.analysis.path: null
chord.ext.dlog.analysis.path: null
chord.dlog.analysis.path: /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar
chord.use.jvmti: false
chord.instr.kind: offline
chord.trace.kind: full
chord.trace.block.size: 4096
chord.dynamic.haltonerr: true
chord.dynamic.timeout: -1
chord.max.cons.size: 50000000
chord.reuse.scope: false
chord.reuse.rels: false
chord.reuse.traces: false
chord.use.buddy: false
chord.bddbddb.max.heap: 4096m
Using '/home/obastani/Documents/projects/stamp/shord' as android.jar
Warning: java.lang.ref.Finalizer is a phantom class!
WARN: TaskParser: Ignoring non-existent entry '/home/obastani/Documents/projects/stamp/shord/scanner/stamp.scanner.jar' in path 'chord.java.analysis.path'.
WARN: TrgtParser: Relation 'VT' declared with different domain orders 'T0_V0' and 'V0_T0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/typefilter.dlog' respectively.
WARN: TrgtParser: Relation 'IinvkPrimArg' declared with different domain orders 'I0_U0_Z0' and 'Z0_I0_U0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'InLabelArg' declared with different domain orders 'Z0_M0_L0' and 'L0_Z0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'InLabelArg' declared with different domain orders 'Z0_M0_L0' and 'L0_M0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'InLabelArg' declared with different domain orders 'Z0_M0_L0' and 'L0_Z0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-annot.dlog' respectively.
WARN: TrgtParser: Relation 'paramPrim' declared with different domain orders 'U0xU1_I0' and 'I0_U0xU1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'StoreStat' declared with different domain orders 'F0_V0' and 'V0_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-ph-pt.dlog' respectively.
WARN: TrgtParser: Relation 'StoreStat' declared with different domain orders 'F0_V0' and 'V0_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog' respectively.
WARN: TrgtParser: Relation 'chaIM' declared with different domain orders 'I0_M0' and 'I0xM0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'chaIM' declared with different domain orders 'I0_M0' and 'M0_I0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'param' declared with different domain orders 'V0xV1_I0' and 'I0_V0xV1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-partial-pt.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'IinvkPrimRet' declared with different domain orders 'I0_U0_Z0' and 'Z0_I0_U0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'OutLabelRet' declared with different domain orders 'L0_M0' and 'M0_L0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-annot.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'MmethPrimRet' declared with different domain orders 'M0_U0_Z0' and 'Z0_M0_U0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'MmethPrimRet' declared with different domain orders 'M0_U0_Z0' and 'Z0_M0_U0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-annot.dlog' respectively.
WARN: TrgtParser: Relation 'MmethPrimRet' declared with different domain orders 'M0_U0_Z0' and 'Z0_M0_U0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'MmethPrimRet' declared with different domain orders 'M0_U0_Z0' and 'Z0_M0_U0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-stub.dlog' respectively.
WARN: TrgtParser: Relation 'return' declared with different domain orders 'V0xV1_I0' and 'I0_V0xV1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'IinvkArg' declared with different domain orders 'Z0_I0_V0' and 'I0_V0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'MmethPrimArg' declared with different domain orders 'Z0_M0_U0' and 'M0_U0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'labelPrim' declared with different domain orders 'CL0_C0_U0' and 'C0_U0_CL0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'ArgArgFlow' declared with different domain orders 'Z0xZ1_M0' and 'M0_Z0_Z1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-annot.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'Load' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-partial-pt-active.dlog' respectively.
WARN: TrgtParser: Relation 'Load' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-ph-pt.dlog' respectively.
WARN: TrgtParser: Relation 'Load' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog' respectively.
WARN: TrgtParser: Relation 'Load' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-partial-pt.dlog' respectively.
WARN: TrgtParser: Relation 'StorePrim' declared with different domain orders 'U0_V0_F0' and 'V0_U0_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'StorePrim' declared with different domain orders 'U0_V0_F0' and 'V0_U0_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-init.dlog' respectively.
WARN: TrgtParser: Relation 'LoadPrim' declared with different domain orders 'V0_U0_F0' and 'U0_V0_F0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-init.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'MmethArg' declared with different domain orders 'Z0_M0_V0' and 'M0_V0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'IinvkRet' declared with different domain orders 'I0_V0_Z0' and 'Z0_I0_V0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'LoadStat' declared with different domain orders 'V0_F0' and 'F0_V0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'CCL' declared with different domain orders 'CL0_C0' and 'C0_CL0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' and 'stamp.analyses.ContextLabelAnalysis' respectively.
WARN: TrgtParser: Relation 'Store' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-ph-pt.dlog' respectively.
WARN: TrgtParser: Relation 'Store' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-taint-active.dlog' respectively.
WARN: TrgtParser: Relation 'Store' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-partial-pt.dlog' respectively.
WARN: TrgtParser: Relation 'Store' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog' respectively.
WARN: TrgtParser: Relation 'Store' declared with different domain orders 'F0_V0xV1' and 'V0xV1_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-partial-pt-active.dlog' respectively.
WARN: TrgtParser: Relation 'typeFilter' declared with different domain orders 'C0_V0' and 'V0_C0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-partial-pt.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/typefilter.dlog' respectively.
WARN: TrgtParser: Relation 'ArgRetTransfer' declared with different domain orders 'Z0_M0' and 'M0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-annot.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'HTFilter' declared with different domain orders 'H0_T0' and 'T0_H0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/typefilter.dlog' respectively.
WARN: TrgtParser: Relation 'returnPrim' declared with different domain orders 'I0_U0xU1' and 'U0xU1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-init.dlog' respectively.
WARN: TrgtParser: Relation 'returnPrim' declared with different domain orders 'I0_U0xU1' and 'U0xU1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'MmethRet' declared with different domain orders 'Z0_M0_V0' and 'M0_V0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-stub.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'OutLabelArg' declared with different domain orders 'L0_M0_Z0' and 'L0_Z0_M0' in 'stamp.analyses.AnnotationReader' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'OutLabelArg' declared with different domain orders 'L0_M0_Z0' and 'L0_Z0_M0' in 'stamp.analyses.AnnotationReader' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-annot.dlog' respectively.
WARN: TrgtParser: Relation 'OutLabelArg' declared with different domain orders 'L0_M0_Z0' and 'Z0_M0_L0' in 'stamp.analyses.AnnotationReader' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'labelRef' declared with different domain orders 'CL0_C0_V0' and 'C0_V0_CL0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'CH' declared with different domain orders 'C0_H0' and 'H0_C0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-ph-pt.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/typefilter.dlog' respectively.
WARN: TrgtParser: Relation 'ArgArgTransfer' declared with different domain orders 'Z0xZ1_M0' and 'M0_Z0_Z1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'InLabelRet' declared with different domain orders 'L0_M0' and 'M0_L0' in 'stamp.analyses.AnnotationReader' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'CM' declared with different domain orders 'M0_C0' and 'C0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog' and 'shord.analyses.ContextsAnalysis' respectively.
WARNING: 'annot-java' not declared as produced name of any task

WARNING: 'PtFull' declared as produced name of multiple tasks:
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-partial-pt.dlog'
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-normal-pt.dlog'

WARNING: 'facts-dumper-java' not declared as produced name of any task

WARNING: 'fpt' declared as produced name of multiple tasks:
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-ph-pt.dlog'
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog'

WARNING: 'inject-annot' not declared as produced name of any task

WARNING: 'dynfeatures-java' not declared as produced name of any task

WARNING: 'jimpleprinter' not declared as produced name of any task

WARNING: 'jcflsolver' not declared as produced name of any task

WARNING: 'relationprinter' not declared as produced name of any task

WARNING: 'post-java' not declared as produced name of any task

WARNING: 'context-label-java' not declared as produced name of any task

WARNING: 'cfl-solver-runner-java' not declared as produced name of any task

WARNING: 'paths-printer-java' not declared as produced name of any task

WARNING: 'base-java' not declared as produced name of any task

WARNING: 'contexts-java' not declared as produced name of any task

WARNING: 'FptFull' declared as produced name of multiple tasks:
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-partial-pt.dlog'
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-normal-pt.dlog'

WARNING: 'pt' declared as produced name of multiple tasks:
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/cfl-ph-pt.dlog'
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog'

WARNING: 'dat-rel-parser-java' not declared as produced name of any task

ENTER: inject-annot at Fri Jan 31 10:59:13 PST 2014
LEAVE: inject-annot
Exclusive time: 00:00:03:636 hh:mm:ss:ms
Inclusive time: 00:00:03:636 hh:mm:ss:ms
ENTER: base-java at Fri Jan 31 10:59:17 PST 2014
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
SAVING dom M size: 13968
SAVING rel Stub size: 6914
SAVING rel Framework size: 11242
SAVING dom F size: 3975
SAVING dom T size: 1577
untyped $r1: bottom_type in <org.darpa.smsreminder.SmsAlarmReceiver: void <init>()>
LC: <org.darpa.smsreminder.SmsAlarmReceiver: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.SettingsActivity: void <init>()>
LC: <org.darpa.smsreminder.SettingsActivity: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.AlarmViewer: void <init>()>
LC: <org.darpa.smsreminder.AlarmViewer: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.SmsReminderActivity: void <init>()>
LC: <org.darpa.smsreminder.SmsReminderActivity: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.AlarmDetails: void <init>()>
LC: <org.darpa.smsreminder.AlarmDetails: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.SmsReceiver: void <init>()>
LC: <org.darpa.smsreminder.SmsReceiver: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.content.Loader$ForceLoadContentObserver: void onChange(boolean)>
LC: <android.support.v4.content.Loader$ForceLoadContentObserver: void onChange(boolean)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.widget.CursorAdapter$ChangeObserver: void onChange(boolean)>
LC: <android.support.v4.widget.CursorAdapter$ChangeObserver: void onChange(boolean)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)>
LC: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)> t = 11 p = 3 n = 7 b = 0 u = 1
Unclassified: 
$r2 
untyped $r4: bottom_type in <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)>
LC: <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)> t = 12 p = 2 n = 9 b = 0 u = 1
Unclassified: 
$r4 
untyped $r2: bottom_type in <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)>
LC: <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.content.ModernAsyncTask: void <clinit>()>
untyped $r5: bottom_type in <android.support.v4.content.ModernAsyncTask: void <clinit>()>
LC: <android.support.v4.content.ModernAsyncTask: void <clinit>()> t = 15 p = 4 n = 9 b = 0 u = 2
Unclassified: 
$r1 $r5 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask: void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object)>
LC: <android.support.v4.content.ModernAsyncTask: void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.content.LocalBroadcastManager: void <clinit>()>
LC: <android.support.v4.content.LocalBroadcastManager: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.LocalBroadcastManager: void access$000(android.support.v4.content.LocalBroadcastManager)>
LC: <android.support.v4.content.LocalBroadcastManager: void access$000(android.support.v4.content.LocalBroadcastManager)> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()>
LC: <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.app.FragmentManagerImpl$4: void run()>
LC: <android.support.v4.app.FragmentManagerImpl$4: void run()> t = 9 p = 2 n = 6 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <android.support.v4.app.FragmentManagerImpl$2: void run()>
LC: <android.support.v4.app.FragmentManagerImpl$2: void run()> t = 9 p = 2 n = 6 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.app.FragmentManagerImpl$1: void run()>
LC: <android.support.v4.app.FragmentManagerImpl$1: void run()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.app.ListFragment$1: void run()>
LC: <android.support.v4.app.ListFragment$1: void run()> t = 6 p = 0 n = 5 b = 0 u = 1
Unclassified: 
$r3 
untyped $r4: bottom_type in <android.support.v4.app.FragmentManagerImpl$3: void run()>
LC: <android.support.v4.app.FragmentManagerImpl$3: void run()> t = 9 p = 2 n = 6 b = 0 u = 1
Unclassified: 
$r4 
untyped $r0: bottom_type in <android.support.v4.app.FragmentManagerImpl: void <clinit>()>
LC: <android.support.v4.app.FragmentManagerImpl: void <clinit>()> t = 10 p = 5 n = 4 b = 0 u = 1
Unclassified: 
$r0 
untyped $r1: bottom_type in <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()>
LC: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <org.darpa.smsreminder.AlarmContent: void <clinit>()>
LC: <org.darpa.smsreminder.AlarmContent: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r0 
untyped $r2: bottom_type in <android.support.v4.app.FragmentActivity: void onResume()>
LC: <android.support.v4.app.FragmentActivity: void onResume()> t = 6 p = 2 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.FragmentActivity: void onPostResume()>
LC: <android.support.v4.app.FragmentActivity: void onPostResume()> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.FragmentActivity: void onStop()>
LC: <android.support.v4.app.FragmentActivity: void onStop()> t = 6 p = 2 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.FragmentActivity: void onDestroy()>
LC: <android.support.v4.app.FragmentActivity: void onDestroy()> t = 6 p = 1 n = 4 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
LC: <android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.app.FragmentActivity: void onLowMemory()>
LC: <android.support.v4.app.FragmentActivity: void onLowMemory()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>
LC: <android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r0: bottom_type in <org.darpa.smsreminder.SettingsOptions: void <clinit>()>
LC: <org.darpa.smsreminder.SettingsOptions: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r0 
untyped $r1: bottom_type in <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()>
LC: <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r1 
untyped $r5: bottom_type in <org.darpa.smsreminder.SmsReminderActivity$2: void onClick(android.view.View)>
LC: <org.darpa.smsreminder.SmsReminderActivity$2: void onClick(android.view.View)> t = 7 p = 0 n = 6 b = 0 u = 1
Unclassified: 
$r5 
untyped $r2: bottom_type in <org.darpa.smsreminder.SettingsActivity: android.widget.CheckBox access$100(org.darpa.smsreminder.SettingsActivity)>
LC: <org.darpa.smsreminder.SettingsActivity: android.widget.CheckBox access$100(org.darpa.smsreminder.SettingsActivity)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.SettingsActivity: android.widget.EditText access$000(org.darpa.smsreminder.SettingsActivity)>
LC: <org.darpa.smsreminder.SettingsActivity: android.widget.EditText access$000(org.darpa.smsreminder.SettingsActivity)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <org.darpa.smsreminder.AlarmDetails: int access$000(org.darpa.smsreminder.AlarmDetails)>
LC: <org.darpa.smsreminder.AlarmDetails: int access$000(org.darpa.smsreminder.AlarmDetails)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: void onSizeChanged(int,int,int,int)>
LC: <android.support.v4.view.ViewPager: void onSizeChanged(int,int,int,int)> t = 8 p = 6 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: void onAttachedToWindow()>
LC: <android.support.v4.view.ViewPager: void onAttachedToWindow()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <android.support.v4.view.ViewPager: void <clinit>()>
LC: <android.support.v4.view.ViewPager: void <clinit>()> t = 7 p = 3 n = 3 b = 0 u = 1
Unclassified: 
$r0 
untyped $r2: bottom_type in <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>
LC: <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r0: bottom_type in <android.support.v4.view.MotionEventCompat: void <clinit>()>
LC: <android.support.v4.view.MotionEventCompat: void <clinit>()> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r0 
untyped $r0: bottom_type in <android.support.v4.view.VelocityTrackerCompat: void <clinit>()>
LC: <android.support.v4.view.VelocityTrackerCompat: void <clinit>()> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r0 
untyped $r2: bottom_type in <android.support.v4.app.DialogFragment: void onCancel(android.content.DialogInterface)>
LC: <android.support.v4.app.DialogFragment: void onCancel(android.content.DialogInterface)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.DialogFragment: void onDismiss(android.content.DialogInterface)>
LC: <android.support.v4.app.DialogFragment: void onDismiss(android.content.DialogInterface)> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
untyped $r6: bottom_type in <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
untyped $r14: bottom_type in <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
LC: <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)> t = 120 p = 16 n = 101 b = 0 u = 3
Unclassified: 
$r2 $r6 $r14 
untyped $r3: bottom_type in <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
LC: <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> t = 22 p = 3 n = 18 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <org.darpa.smsreminder.AlarmViewer$2: void onNothingSelected(android.widget.AdapterView)>
LC: <org.darpa.smsreminder.AlarmViewer$2: void onNothingSelected(android.widget.AdapterView)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
LC: <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> t = 16 p = 3 n = 12 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <android.support.v4.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
untyped $r7: bottom_type in <android.support.v4.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
untyped $r8: bottom_type in <android.support.v4.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
LC: <android.support.v4.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> t = 14 p = 4 n = 7 b = 0 u = 3
Unclassified: 
$r3 $r7 $r8 
untyped $r1: bottom_type in <android.support.v4.widget.CursorAdapter: java.lang.Object getItem(int)>
LC: <android.support.v4.widget.CursorAdapter: java.lang.Object getItem(int)> t = 7 p = 2 n = 4 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void onContentChanged()>
LC: <android.support.v4.content.Loader: void onContentChanged()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentActivity: void doReallyStop(boolean)>
LC: <android.support.v4.app.FragmentActivity: void doReallyStop(boolean)> t = 7 p = 4 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.FragmentActivity: void onResumeFragments()>
LC: <android.support.v4.app.FragmentActivity: void onResumeFragments()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask: void onProgressUpdate(java.lang.Object[])>
LC: <android.support.v4.content.ModernAsyncTask: void onProgressUpdate(java.lang.Object[])> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask$1: void <init>()>
LC: <android.support.v4.content.ModernAsyncTask$1: void <init>()> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>(android.support.v4.content.ModernAsyncTask$1)>
LC: <android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>(android.support.v4.content.ModernAsyncTask$1)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask$Status: void <clinit>()>
LC: <android.support.v4.content.ModernAsyncTask$Status: void <clinit>()> t = 15 p = 4 n = 10 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
untyped $r3: bottom_type in <android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
untyped $r4: bottom_type in <android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
LC: <android.support.v4.content.AsyncTaskLoader: void executePendingTask()> t = 32 p = 15 n = 14 b = 0 u = 3
Unclassified: 
$r1 $r3 $r4 
untyped $r3: bottom_type in <android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)>
LC: <android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)> t = 6 p = 0 n = 5 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void onActivityResult(int,int,android.content.Intent)>
LC: <android.support.v4.app.Fragment: void onActivityResult(int,int,android.content.Intent)> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity)>
LC: <android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity)> t = 5 p = 0 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void dispatchCreate()>
LC: <android.support.v4.app.FragmentManagerImpl: void dispatchCreate()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <org.darpa.smsreminder.AlarmDetails$1: void <init>(org.darpa.smsreminder.AlarmDetails)>
LC: <org.darpa.smsreminder.AlarmDetails$1: void <init>(org.darpa.smsreminder.AlarmDetails)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.AlarmContent: java.util.List getAlarms()>
LC: <org.darpa.smsreminder.AlarmContent: java.util.List getAlarms()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.AlarmViewer$1: void <init>(org.darpa.smsreminder.AlarmViewer)>
LC: <org.darpa.smsreminder.AlarmViewer$1: void <init>(org.darpa.smsreminder.AlarmViewer)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.AlarmViewer$2: void <init>(org.darpa.smsreminder.AlarmViewer)>
LC: <org.darpa.smsreminder.AlarmViewer$2: void <init>(org.darpa.smsreminder.AlarmViewer)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <org.darpa.smsreminder.SettingsOptions: boolean repeatOn()>
LC: <org.darpa.smsreminder.SettingsOptions: boolean repeatOn()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.SettingsOptions: int repeatDelay()>
LC: <org.darpa.smsreminder.SettingsOptions: int repeatDelay()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <org.darpa.smsreminder.SettingsActivity$1: void <init>(org.darpa.smsreminder.SettingsActivity)>
LC: <org.darpa.smsreminder.SettingsActivity$1: void <init>(org.darpa.smsreminder.SettingsActivity)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.AlarmContent: void setAlarmContext(android.content.Context)>
LC: <org.darpa.smsreminder.AlarmContent: void setAlarmContext(android.content.Context)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.SettingsOptions: void setContext(android.content.Context)>
LC: <org.darpa.smsreminder.SettingsOptions: void setContext(android.content.Context)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.SmsReminderActivity$1: void <init>(org.darpa.smsreminder.SmsReminderActivity)>
LC: <org.darpa.smsreminder.SmsReminderActivity$1: void <init>(org.darpa.smsreminder.SmsReminderActivity)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.SmsReminderActivity$2: void <init>(org.darpa.smsreminder.SmsReminderActivity)>
LC: <org.darpa.smsreminder.SmsReminderActivity$2: void <init>(org.darpa.smsreminder.SmsReminderActivity)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()>
LC: <android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()>
LC: <android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void dispatchStart()>
LC: <android.support.v4.app.FragmentManagerImpl: void dispatchStart()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.util.SparseArrayCompat: int size()>
LC: <android.support.v4.util.SparseArrayCompat: int size()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)>
LC: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> t = 6 p = 2 n = 3 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.util.SparseArrayCompat: void <clinit>()>
LC: <android.support.v4.util.SparseArrayCompat: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <android.support.v4.app.LoaderManagerImpl: void <clinit>()>
LC: <android.support.v4.app.LoaderManagerImpl: void <clinit>()> t = 2 p = 1 n = 0 b = 0 u = 1
Unclassified: 
$r0 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void dispatchPause()>
LC: <android.support.v4.app.FragmentManagerImpl: void dispatchPause()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void dispatchStop()>
LC: <android.support.v4.app.FragmentManagerImpl: void dispatchStop()> t = 5 p = 3 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()>
LC: <android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()> t = 6 p = 3 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerState: void <clinit>()>
LC: <android.support.v4.app.FragmentManagerState: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.BackStackState: void <clinit>()>
LC: <android.support.v4.app.BackStackState: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentState: void <clinit>()>
LC: <android.support.v4.app.FragmentState: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()>
LC: <android.support.v4.app.FragmentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.util.SparseArrayCompat: void removeAt(int)>
LC: <android.support.v4.util.SparseArrayCompat: void removeAt(int)> t = 9 p = 2 n = 6 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.app.FragmentActivity$NonConfigurationInstances: void <init>()>
LC: <android.support.v4.app.FragmentActivity$NonConfigurationInstances: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <org.darpa.smsreminder.SmsReminderActivity: void launchSettingsActivity()>
LC: <org.darpa.smsreminder.SmsReminderActivity: void launchSettingsActivity()> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <org.darpa.smsreminder.SettingsOptions: void <init>()>
LC: <org.darpa.smsreminder.SettingsOptions: void <init>()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: int getCurrentItem()>
LC: <android.support.v4.view.ViewPager: int getCurrentItem()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: void setCurrentItem(int)>
LC: <android.support.v4.view.ViewPager: void setCurrentItem(int)> t = 6 p = 4 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.SettingsOptions: void setRepeatDelay(int)>
LC: <org.darpa.smsreminder.SettingsOptions: void setRepeatDelay(int)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.SettingsOptions: void setRepeatOn(boolean)>
LC: <org.darpa.smsreminder.SettingsOptions: void setRepeatOn(boolean)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: void populate()>
LC: <android.support.v4.view.ViewPager: void populate()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: void endDrag()>
LC: <android.support.v4.view.ViewPager: void endDrag()> t = 6 p = 1 n = 4 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: void setScrollState(int)>
LC: <android.support.v4.view.ViewPager: void setScrollState(int)> t = 6 p = 2 n = 3 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>
LC: <android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>
LC: <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)> t = 6 p = 4 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <android.support.v4.widget.EdgeEffectCompat: void <clinit>()>
LC: <android.support.v4.widget.EdgeEffectCompat: void <clinit>()> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r0 
untyped $r2: bottom_type in <android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>
LC: <android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>
LC: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)>
LC: <android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager$1: void <init>()>
LC: <android.support.v4.view.ViewPager$1: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager$2: void <init>()>
LC: <android.support.v4.view.ViewPager$2: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewCompat$JBViewCompatImpl: void <init>()>
LC: <android.support.v4.view.ViewCompat$JBViewCompatImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewCompat$ICSViewCompatImpl: void <init>()>
LC: <android.support.v4.view.ViewCompat$ICSViewCompatImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewCompat$HCViewCompatImpl: void <init>()>
LC: <android.support.v4.view.ViewCompat$HCViewCompatImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewCompat$GBViewCompatImpl: void <init>()>
LC: <android.support.v4.view.ViewCompat$GBViewCompatImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void <init>()>
LC: <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)>
LC: <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)>
LC: <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)> t = 7 p = 2 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
LC: <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.view.ViewCompat$JBViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
LC: <android.support.v4.view.ViewCompat$JBViewCompatImpl: void postInvalidateOnAnimation(android.view.View)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.view.ViewCompatJB: void postInvalidateOnAnimation(android.view.View)>
LC: <android.support.v4.view.ViewCompatJB: void postInvalidateOnAnimation(android.view.View)> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: void <init>()>
LC: <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: void <init>()>
LC: <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: void <init>()>
LC: <android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: void <init>()>
LC: <android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()>
LC: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.AlarmContent$AlarmItem: long time_millis()>
LC: <org.darpa.smsreminder.AlarmContent$AlarmItem: long time_millis()> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)>
LC: <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)> t = 10 p = 3 n = 6 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <org.darpa.smsreminder.AlarmContent$AlarmItem: void setReminder(boolean)>
LC: <org.darpa.smsreminder.AlarmContent$AlarmItem: void setReminder(boolean)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
untyped $r4: bottom_type in <android.support.v4.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
LC: <android.support.v4.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> t = 7 p = 2 n = 3 b = 0 u = 2
Unclassified: 
$r3 $r4 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void forceLoad()>
LC: <android.support.v4.content.Loader: void forceLoad()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentActivity: void onReallyStop()>
LC: <android.support.v4.app.FragmentActivity: void onReallyStop()> t = 9 p = 3 n = 5 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void dispatchResume()>
LC: <android.support.v4.app.FragmentManagerImpl: void dispatchResume()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>()>
LC: <android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask: void onCancelled(java.lang.Object)>
LC: <android.support.v4.content.ModernAsyncTask: void onCancelled(java.lang.Object)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask: void onPostExecute(java.lang.Object)>
LC: <android.support.v4.content.ModernAsyncTask: void onPostExecute(java.lang.Object)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r4: bottom_type in <android.support.v4.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)>
LC: <android.support.v4.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)> t = 7 p = 0 n = 6 b = 0 u = 1
Unclassified: 
$r4 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)>
LC: <android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.BackStackRecord: java.lang.String getName()>
LC: <android.support.v4.app.BackStackRecord: java.lang.String getName()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r0: bottom_type in <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)>
LC: <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)> t = 3 p = 2 n = 0 b = 0 u = 1
Unclassified: 
$r0 
untyped $r4: bottom_type in <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)>
LC: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)> t = 11 p = 6 n = 4 b = 0 u = 1
Unclassified: 
$r4 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: boolean isInBackStack()>
LC: <android.support.v4.app.Fragment: boolean isInBackStack()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void onHiddenChanged(boolean)>
LC: <android.support.v4.app.Fragment: void onHiddenChanged(boolean)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
untyped $r4: bottom_type in <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
LC: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)> t = 8 p = 3 n = 3 b = 0 u = 2
Unclassified: 
$r3 $r4 
untyped $r4: bottom_type in <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
LC: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)> t = 22 p = 15 n = 6 b = 0 u = 1
Unclassified: 
$r4 
untyped $r0: bottom_type in <android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
LC: <android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)> t = 4 p = 3 n = 0 b = 0 u = 1
Unclassified: 
$r0 
untyped $r1: bottom_type in <android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()>
LC: <android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()> t = 5 p = 3 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)>
LC: <android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void <clinit>()>
LC: <android.support.v4.app.Fragment: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)>
LC: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> t = 5 p = 3 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.util.SparseArrayCompat: void <init>()>
LC: <android.support.v4.util.SparseArrayCompat: void <init>()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.app.LoaderManagerImpl: void <init>(android.support.v4.app.FragmentActivity,boolean)>
LC: <android.support.v4.app.LoaderManagerImpl: void <init>(android.support.v4.app.FragmentActivity,boolean)> t = 6 p = 1 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.app.LoaderManagerImpl: void updateActivity(android.support.v4.app.FragmentActivity)>
LC: <android.support.v4.app.LoaderManagerImpl: void updateActivity(android.support.v4.app.FragmentActivity)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.util.SparseArrayCompat: int binarySearch(int[],int,int,int)>
LC: <android.support.v4.util.SparseArrayCompat: int binarySearch(int[],int,int,int)> t = 15 p = 13 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <android.support.v4.util.SparseArrayCompat: int idealByteArraySize(int)>
LC: <android.support.v4.util.SparseArrayCompat: int idealByteArraySize(int)> t = 8 p = 7 n = 0 b = 0 u = 1
Unclassified: 
$r0 
untyped $r5: bottom_type in <android.support.v4.util.SparseArrayCompat: void gc()>
LC: <android.support.v4.util.SparseArrayCompat: void gc()> t = 11 p = 5 n = 5 b = 0 u = 1
Unclassified: 
$r5 
untyped $r2: bottom_type in <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()>
LC: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()> t = 8 p = 4 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.util.SparseArrayCompat: void clear()>
LC: <android.support.v4.util.SparseArrayCompat: void clear()> t = 9 p = 5 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.util.LogWriter: void <init>(java.lang.String)>
LC: <android.support.v4.util.LogWriter: void <init>(java.lang.String)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerState: void <init>()>
LC: <android.support.v4.app.FragmentManagerState: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerState$1: void <init>()>
LC: <android.support.v4.app.FragmentManagerState$1: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.BackStackState$1: void <init>()>
LC: <android.support.v4.app.BackStackState$1: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.FragmentState$1: void <init>()>
LC: <android.support.v4.app.FragmentState$1: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>
LC: <android.support.v4.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void onLowMemory()>
LC: <android.support.v4.app.Fragment: void onLowMemory()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
LC: <android.support.v4.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void onDestroyOptionsMenu()>
LC: <android.support.v4.app.Fragment: void onDestroyOptionsMenu()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>
LC: <android.support.v4.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>
LC: <android.support.v4.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>
LC: <android.support.v4.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>
LC: <android.support.v4.app.Fragment: void onOptionsMenuClosed(android.view.Menu)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r5: bottom_type in <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
untyped $r7: bottom_type in <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
LC: <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)> t = 30 p = 9 n = 19 b = 0 u = 2
Unclassified: 
$r5 $r7 
untyped $r1: bottom_type in <android.support.v4.view.PagerAdapter: float getPageWidth(int)>
LC: <android.support.v4.view.PagerAdapter: float getPageWidth(int)> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrollStateChanged(int)>
LC: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrollStateChanged(int)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)>
LC: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)>
LC: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onRelease(java.lang.Object)>
LC: <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onRelease(java.lang.Object)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void <init>()>
LC: <android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void <init>()>
LC: <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
LC: <android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
LC: <android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.view.PagerTitleStrip: void requestLayout()>
LC: <android.support.v4.view.PagerTitleStrip: void requestLayout()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>
untyped $r2: bottom_type in <android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>
LC: <android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()> t = 4 p = 1 n = 1 b = 0 u = 2
Unclassified: 
$r1 $r2 
untyped $r1: bottom_type in <android.support.v4.view.ViewCompat$HCViewCompatImpl: long getFrameTime()>
LC: <android.support.v4.view.ViewCompat$HCViewCompatImpl: long getFrameTime()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <android.support.v4.view.ViewCompatHC: long getFrameTime()>
LC: <android.support.v4.view.ViewCompatHC: long getFrameTime()> t = 3 p = 2 n = 0 b = 0 u = 1
Unclassified: 
$r0 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()>
LC: <android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()>
LC: <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)>
LC: <android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <org.darpa.smsreminder.SmsAlarmReceiver$1: void <init>(org.darpa.smsreminder.SmsAlarmReceiver)>
LC: <org.darpa.smsreminder.SmsAlarmReceiver$1: void <init>(org.darpa.smsreminder.SmsAlarmReceiver)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.darpa.smsreminder.SmsAlarmReceiver$2: void <init>(org.darpa.smsreminder.SmsAlarmReceiver)>
LC: <org.darpa.smsreminder.SmsAlarmReceiver$2: void <init>(org.darpa.smsreminder.SmsAlarmReceiver)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>
LC: <android.support.v4.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void onForceLoad()>
LC: <android.support.v4.content.Loader: void onForceLoad()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.content.AsyncTaskLoader: void onForceLoad()>
LC: <android.support.v4.content.AsyncTaskLoader: void onForceLoad()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()>
LC: <android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)>
LC: <android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)> t = 14 p = 9 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.content.ModernAsyncTask: void onCancelled()>
LC: <android.support.v4.content.ModernAsyncTask: void onCancelled()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.content.AsyncTaskLoader$LoadTask: void onCancelled()>
LC: <android.support.v4.content.AsyncTaskLoader$LoadTask: void onCancelled()> t = 7 p = 0 n = 6 b = 0 u = 1
Unclassified: 
$r3 
untyped $r4: bottom_type in <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
LC: <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)> t = 10 p = 4 n = 5 b = 0 u = 1
Unclassified: 
$r4 
untyped $r1: bottom_type in <android.support.v4.content.ModernAsyncTask: void onPreExecute()>
LC: <android.support.v4.content.ModernAsyncTask: void onPreExecute()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void onAttach(android.app.Activity)>
LC: <android.support.v4.app.Fragment: void onAttach(android.app.Activity)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.DialogFragment: void onAttach(android.app.Activity)>
LC: <android.support.v4.app.DialogFragment: void onAttach(android.app.Activity)> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void onCreate(android.os.Bundle)>
LC: <android.support.v4.app.Fragment: void onCreate(android.os.Bundle)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r4: bottom_type in <android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
LC: <android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> t = 6 p = 0 n = 5 b = 0 u = 1
Unclassified: 
$r4 
untyped $r3: bottom_type in <android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
LC: <android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <android.support.v4.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
LC: <android.support.v4.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)>
LC: <android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.app.Fragment: void restoreViewState()>
LC: <android.support.v4.app.Fragment: void restoreViewState()> t = 6 p = 0 n = 5 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void performStart()>
LC: <android.support.v4.app.Fragment: void performStart()> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void onResume()>
LC: <android.support.v4.app.Fragment: void onResume()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void onPause()>
LC: <android.support.v4.app.Fragment: void onPause()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void performStop()>
LC: <android.support.v4.app.Fragment: void performStop()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void performDestroyView()>
LC: <android.support.v4.app.Fragment: void performDestroyView()> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void onDetach()>
LC: <android.support.v4.app.Fragment: void onDetach()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.DialogFragment: void onDetach()>
LC: <android.support.v4.app.DialogFragment: void onDetach()> t = 5 p = 3 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)>
LC: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)>
LC: <android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)>
LC: <android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)>
LC: <android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)>
LC: <android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)> t = 6 p = 3 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean isReminder()>
LC: <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean isReminder()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.BackStackRecord: void <init>(android.support.v4.app.FragmentManagerImpl)>
LC: <android.support.v4.app.BackStackRecord: void <init>(android.support.v4.app.FragmentManagerImpl)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.app.BackStackRecord: void addOp(android.support.v4.app.BackStackRecord$Op)>
LC: <android.support.v4.app.BackStackRecord: void addOp(android.support.v4.app.BackStackRecord$Op)> t = 12 p = 6 n = 5 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.app.BackStackRecord$Op: void <init>()>
LC: <android.support.v4.app.BackStackRecord$Op: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
LC: <android.support.v4.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.app.LoaderManager: void <init>()>
LC: <android.support.v4.app.LoaderManager: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r4: bottom_type in <android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)>
LC: <android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)> t = 7 p = 1 n = 5 b = 0 u = 1
Unclassified: 
$r4 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void startLoading()>
LC: <android.support.v4.content.Loader: void startLoading()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r4: bottom_type in <android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)>
LC: <android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)> t = 10 p = 0 n = 9 b = 0 u = 1
Unclassified: 
$r4 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void reset()>
LC: <android.support.v4.content.Loader: void reset()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
LC: <android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>
LC: <android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
LC: <android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)>
LC: <android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>
LC: <android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)>
LC: <android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onPull(java.lang.Object,float)>
LC: <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onPull(java.lang.Object,float)> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.widget.EdgeEffectCompatIcs: boolean onPull(java.lang.Object,float)>
LC: <android.support.v4.widget.EdgeEffectCompatIcs: boolean onPull(java.lang.Object,float)> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>
untyped $r2: bottom_type in <android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>
LC: <android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)> t = 14 p = 11 n = 1 b = 0 u = 2
Unclassified: 
$r1 $r2 
untyped $r2: bottom_type in <android.support.v4.app.FragmentManagerImpl$4: void <init>(android.support.v4.app.FragmentManagerImpl,int,int)>
LC: <android.support.v4.app.FragmentManagerImpl$4: void <init>(android.support.v4.app.FragmentManagerImpl,int,int)> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.content.AsyncTaskLoader$LoadTask: void <init>(android.support.v4.content.AsyncTaskLoader)>
LC: <android.support.v4.content.AsyncTaskLoader$LoadTask: void <init>(android.support.v4.content.AsyncTaskLoader)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r4: bottom_type in <android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
LC: <android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)> t = 8 p = 2 n = 5 b = 0 u = 1
Unclassified: 
$r4 
untyped $r1: bottom_type in <android.support.v4.content.Loader: boolean isAbandoned()>
LC: <android.support.v4.content.Loader: boolean isAbandoned()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>
LC: <android.support.v4.content.AsyncTaskLoader: void onCanceled(java.lang.Object)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.content.CursorLoader: void onCanceled(java.lang.Object)>
LC: <android.support.v4.content.CursorLoader: void onCanceled(java.lang.Object)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.content.Loader: void deliverResult(java.lang.Object)>
LC: <android.support.v4.content.Loader: void deliverResult(java.lang.Object)> t = 5 p = 0 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.content.CursorLoader: void deliverResult(java.lang.Object)>
LC: <android.support.v4.content.CursorLoader: void deliverResult(java.lang.Object)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void initState()>
LC: <android.support.v4.app.Fragment: void initState()> t = 11 p = 8 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.Fragment: android.view.View getView()>
LC: <android.support.v4.app.Fragment: android.view.View getView()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <android.support.v4.app.DialogFragment: void onStart()>
LC: <android.support.v4.app.DialogFragment: void onStart()> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void onStop()>
LC: <android.support.v4.app.Fragment: void onStop()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.DialogFragment: void onStop()>
LC: <android.support.v4.app.DialogFragment: void onStop()> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.app.Fragment: void onDestroyView()>
LC: <android.support.v4.app.Fragment: void onDestroyView()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.app.DialogFragment: void onDestroyView()>
LC: <android.support.v4.app.DialogFragment: void onDestroyView()> t = 6 p = 1 n = 4 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.app.ListFragment: void onDestroyView()>
LC: <android.support.v4.app.ListFragment: void onDestroyView()> t = 6 p = 1 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.app.FragmentTransaction: void <init>()>
LC: <android.support.v4.app.FragmentTransaction: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void onStartLoading()>
LC: <android.support.v4.content.Loader: void onStartLoading()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void stopLoading()>
LC: <android.support.v4.content.Loader: void stopLoading()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void onReset()>
LC: <android.support.v4.content.Loader: void onReset()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <android.support.v4.view.PagerAdapter: void startUpdate(android.view.View)>
LC: <android.support.v4.view.PagerAdapter: void startUpdate(android.view.View)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager$ItemInfo: void <init>()>
LC: <android.support.v4.view.ViewPager$ItemInfo: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)>
LC: <android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <android.support.v4.view.PagerAdapter: void finishUpdate(android.view.View)>
LC: <android.support.v4.view.PagerAdapter: void finishUpdate(android.view.View)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r5: bottom_type in <android.support.v4.view.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)>
LC: <android.support.v4.view.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)> t = 7 p = 1 n = 5 b = 0 u = 1
Unclassified: 
$r5 
untyped $r1: bottom_type in <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)>
LC: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)> t = 9 p = 6 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)>
LC: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)> t = 5 p = 3 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <android.support.v4.content.ModernAsyncTask: void <init>()>
LC: <android.support.v4.content.ModernAsyncTask: void <init>()> t = 7 p = 0 n = 6 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.util.SparseArrayCompat: void remove(int)>
LC: <android.support.v4.util.SparseArrayCompat: void remove(int)> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.app.DialogFragment: int getTheme()>
LC: <android.support.v4.app.DialogFragment: int getTheme()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.Loader: boolean takeContentChanged()>
LC: <android.support.v4.content.Loader: boolean takeContentChanged()> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.Loader: void onStopLoading()>
LC: <android.support.v4.content.Loader: void onStopLoading()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.CursorLoader: void onStopLoading()>
LC: <android.support.v4.content.CursorLoader: void onStopLoading()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.util.SparseArrayCompat: int keyAt(int)>
LC: <android.support.v4.util.SparseArrayCompat: int keyAt(int)> t = 6 p = 3 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r4: bottom_type in <android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)>
LC: <android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)> t = 6 p = 1 n = 4 b = 0 u = 1
Unclassified: 
$r4 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask$2: void <init>(android.support.v4.content.ModernAsyncTask)>
LC: <android.support.v4.content.ModernAsyncTask$2: void <init>(android.support.v4.content.ModernAsyncTask)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <android.support.v4.content.ModernAsyncTask$3: void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)>
LC: <android.support.v4.content.ModernAsyncTask$3: void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)>
LC: <android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)> t = 6 p = 2 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <android.support.v4.content.Loader: boolean isReset()>
LC: <android.support.v4.content.Loader: boolean isReset()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <android.support.v4.content.Loader: boolean isStarted()>
LC: <android.support.v4.content.Loader: boolean isStarted()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r6: bottom_type in <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
LC: <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> t = 18 p = 5 n = 12 b = 0 u = 1
Unclassified: 
$r6 
untyped $r2: bottom_type in <android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>(android.support.v4.content.ModernAsyncTask$1)>
LC: <android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>(android.support.v4.content.ModernAsyncTask$1)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r6: bottom_type in <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
untyped $r7: bottom_type in <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
LC: <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> t = 28 p = 9 n = 17 b = 0 u = 2
Unclassified: 
$r6 $r7 
untyped $r1: bottom_type in <android.support.v4.util.TimeUtils: void <clinit>()>
LC: <android.support.v4.util.TimeUtils: void <clinit>()> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
untyped $r1: bottom_type in <android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
untyped $r3: bottom_type in <android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
untyped $r4: bottom_type in <android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
LC: <android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)> t = 12 p = 6 n = 2 b = 0 u = 4
Unclassified: 
$r0 $r1 $r3 $r4 
untyped $r0: bottom_type in <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>
untyped $r2: bottom_type in <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>
LC: <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)> t = 5 p = 2 n = 1 b = 0 u = 2
Unclassified: 
$r0 $r2 
untyped $r0: bottom_type in <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
LC: <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)> t = 11 p = 5 n = 5 b = 0 u = 1
Unclassified: 
$r0 
untyped $r0: bottom_type in <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
untyped $r1: bottom_type in <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
LC: <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)> t = 127 p = 118 n = 7 b = 0 u = 2
Unclassified: 
$r0 $r1 
untyped $r1: bottom_type in <android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)>
LC: <android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)> t = 23 p = 21 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)>
LC: <android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)> t = 10 p = 9 n = 0 b = 0 u = 1
Unclassified: 
$r0 
untyped $r1: bottom_type in <android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>()>
LC: <android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
SAVING dom H size: 887
SAVING dom Z size: 17
SAVING dom V size: 8941
SAVING dom I size: 3752
SAVING dom U size: 4480
SAVING rel Alloc size: 887
SAVING rel Assign size: 3373
SAVING rel Load size: 1372
SAVING rel Store size: 270
SAVING rel LoadStat size: 85
SAVING rel StoreStat size: 56
SAVING rel MmethArg size: 1699
SAVING rel MmethRet size: 203
SAVING rel IinvkRet size: 883
SAVING rel IinvkArg size: 5023
SAVING rel VT size: 8941
SAVING rel HT size: 887
SAVING rel HTFilter size: 5518
SAVING rel MI size: 3752
SAVING rel MH size: 887
SAVING rel MV size: 8941
SAVING rel MU size: 4480
SAVING rel AssignPrim size: 2414
SAVING rel LoadPrim size: 695
SAVING rel StorePrim size: 342
SAVING rel LoadStatPrim size: 72
SAVING rel StoreStatPrim size: 3
SAVING rel MmethPrimArg size: 504
SAVING rel MmethPrimRet size: 237
SAVING rel IinvkPrimRet size: 512
SAVING rel IinvkPrimArg size: 1080
<org.darpa.smsreminder.AlarmContent$AlarmItem: void setReminder(boolean)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
<org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
<org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
<org.darpa.smsreminder.AlarmContent: java.util.List getAlarms()> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
<org.darpa.smsreminder.AlarmContent$AlarmItem: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
<org.darpa.smsreminder.AlarmViewer$2: void <init>(org.darpa.smsreminder.AlarmViewer)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ERROR BUILDING DYNCG
java.lang.RuntimeException: oops <org.darpa.smsreminder.AlarmViewer$1: void <init>(org.darpa.smsreminder.AlarmViewer)>	At: <org.darpa.smsreminder.AlarmDetails$1: void onClick(android.view.View)>:40,
	at soot.Scene.signatureToClass(Scene.java:497)
	at soot.Scene.grabMethod(Scene.java:528)
	at soot.Scene.getMethod(Scene.java:552)
	at shord.analyses.PAGBuilder.populateCallgraph(PAGBuilder.java:766)
	at shord.analyses.PAGBuilder.populateRelations(PAGBuilder.java:960)
	at shord.analyses.PAGBuilder.run(PAGBuilder.java:984)
	at shord.project.ClassicProject.runTask(ClassicProject.java:398)
	at shord.project.ClassicProject.runTask(ClassicProject.java:419)
	at shord.project.ClassicProject.run(ClassicProject.java:112)
	at shord.project.Main.run(Main.java:84)
	at shord.project.Main.main(Main.java:55)
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.darpa.smsreminder.SettingsActivity: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.darpa.smsreminder.AlarmViewer: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.darpa.smsreminder.SmsReminderActivity: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.darpa.smsreminder.AlarmDetails: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.darpa.smsreminder.SmsReceiver: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.ContentResolver$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$5: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$11: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$6: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$10: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$7: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$8: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$12: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$9: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Activity$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Activity$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Activity$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Activity$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Application$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$6: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$5: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$7: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Fragment$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$5: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.location.LocationManager$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.location.LocationManager$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Service$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.AdapterView$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.AdapterView$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.AdapterView$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.AdapterView$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <java.lang.Thread: void sleep(long)> -> <android.os.Handler$5: void run()>
ignoring: <android.telephony.TelephonyManager: java.lang.String access$000(android.telephony.TelephonyManager)> -> <android.telephony.TelephonyManager$1: void run()>
ignoring: <android.location.LocationManager: java.lang.String access$100(android.location.LocationManager)> -> <android.location.LocationManager$2: void run()>
ignoring: <android.location.LocationManager: android.location.Location access$000(android.location.LocationManager)> -> <android.location.LocationManager$1: void run()>
ignoring: <java.util.ArrayList: void <init>()> -> <edu.stanford.stamp.harness.ApplicationDriver: void <clinit>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void <init>()> -> <edu.stanford.stamp.harness.ApplicationDriver: void <clinit>()>
ignoring: <android.app.Service: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.app.Service: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.app.Service: void <init>()>
ignoring: <android.app.Activity: void <init>()> -> <org.darpa.smsreminder.SettingsActivity: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.app.Activity: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.app.Activity: void <init>()>
ignoring: <android.app.Activity: void <init>()> -> <org.darpa.smsreminder.AlarmViewer: void <init>()>
ignoring: <android.app.Activity: void <init>()> -> <org.darpa.smsreminder.SmsReminderActivity: void <init>()>
ignoring: <android.app.Activity: void <init>()> -> <org.darpa.smsreminder.AlarmDetails: void <init>()>
ignoring: <android.content.BroadcastReceiver: void <init>()> -> <org.darpa.smsreminder.SmsReceiver: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.content.BroadcastReceiver: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.content.BroadcastReceiver: void <init>()>
ignoring: <android.content.Loader$ForceLoadContentObserver: void onChange(boolean)> -> <android.content.ContentResolver$1: void run()>
ignoring: <android.support.v4.content.Loader$ForceLoadContentObserver: void onChange(boolean)> -> <android.content.ContentResolver$1: void run()>
ignoring: <android.support.v4.widget.CursorAdapter$ChangeObserver: void onChange(boolean)> -> <android.content.ContentResolver$1: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$5: void run()>
ignoring: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)> -> <android.os.Handler$5: void run()>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)> -> <android.os.Handler$5: void run()>
ignoring: <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)> -> <android.os.Handler$5: void run()>
ignoring: <android.support.v4.content.ModernAsyncTask: void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object)> -> <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)>
ignoring: <android.support.v4.content.LocalBroadcastManager: void access$000(android.support.v4.content.LocalBroadcastManager)> -> <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)>
ignoring: <java.util.concurrent.FutureTask: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.support.v4.app.ListFragment$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.support.v4.app.BackStackRecord: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Service$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$6: void run()>
ignoring: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)> -> <android.os.Handler$6: void run()>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)> -> <android.os.Handler$6: void run()>
ignoring: <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)> -> <android.os.Handler$6: void run()>
ignoring: <java.util.concurrent.FutureTask: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.support.v4.app.ListFragment$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.support.v4.app.BackStackRecord: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Service$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$7: void run()>
ignoring: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)> -> <android.os.Handler$7: void run()>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)> -> <android.os.Handler$7: void run()>
ignoring: <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)> -> <android.os.Handler$7: void run()>
ignoring: <java.util.concurrent.FutureTask: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.support.v4.app.ListFragment$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.support.v4.app.BackStackRecord: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Service$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <java.util.concurrent.FutureTask: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.support.v4.app.ListFragment$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.support.v4.app.BackStackRecord: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Service$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <java.util.concurrent.FutureTask: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.support.v4.app.ListFragment$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.support.v4.app.BackStackRecord: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Service$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$2: void run()>
ignoring: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)> -> <android.os.Handler$2: void run()>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)> -> <android.os.Handler$2: void run()>
ignoring: <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)> -> <android.os.Handler$2: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)> -> <android.os.Handler$1: void run()>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)> -> <android.os.Handler$1: void run()>
ignoring: <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)> -> <android.os.Handler$1: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$4: void run()>
ignoring: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)> -> <android.os.Handler$4: void run()>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)> -> <android.os.Handler$4: void run()>
ignoring: <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)> -> <android.os.Handler$4: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$3: void run()>
ignoring: <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)> -> <android.os.Handler$3: void run()>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)> -> <android.os.Handler$3: void run()>
ignoring: <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)> -> <android.os.Handler$3: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.util.concurrent.FutureTask: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.support.v4.app.ListFragment$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.support.v4.app.BackStackRecord: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$6: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$5: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$7: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Service$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Activity$3: void run()>
ignoring: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$3: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$3: void run()>
ignoring: <android.util.Log: int w(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.util.Log: int w(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Activity$2: void run()>
ignoring: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$2: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$2: void run()>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onStart()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onStart()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onRestart()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onPause()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onPause()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onResume()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onResume()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onPostResume()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onPostResume()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onStop()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onStop()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onDestroy()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onDestroy()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onRestoreInstanceState(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onPostCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onNewIntent(android.content.Intent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onUserLeaveHint()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: java.lang.CharSequence onCreateDescription()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onLowMemory()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onLowMemory()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onBackPressed()> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onBackPressed()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onUserInteraction()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onContentChanged()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onWindowFocusChanged(boolean)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onAttachedToWindow()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onDetachedFromWindow()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onMenuOpened(int,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onPanelClosed(int,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.AlarmDetails: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.AlarmViewer: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.SettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.SmsReminderActivity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.SmsReminderActivity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onOptionsMenuClosed(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: android.view.View onCreatePanelView(int)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onSearchRequested()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onActionModeStarted(android.view.ActionMode)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onActionModeFinished(android.view.ActionMode)> -> <android.app.Activity$1: void run()>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Application: void onCreate()> -> <android.app.Application$1: void run()>
ignoring: <android.app.Application: void onLowMemory()> -> <android.app.Application$1: void run()>
ignoring: <android.app.Application: void onTerminate()> -> <android.app.Application$1: void run()>
ignoring: <android.app.Application: void onTrimMemory(int)> -> <android.app.Application$1: void run()>
ignoring: <android.support.v4.view.PagerTabStrip$1: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.darpa.smsreminder.AlarmDetails$1: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <android.support.v4.view.PagerTabStrip$2: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.darpa.smsreminder.SmsReminderActivity$2: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.darpa.smsreminder.SettingsActivity: android.widget.CheckBox access$100(org.darpa.smsreminder.SettingsActivity)> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <java.lang.Integer: java.lang.Integer decode(java.lang.String)> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <org.darpa.smsreminder.SettingsActivity: android.widget.EditText access$000(org.darpa.smsreminder.SettingsActivity)> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.lang.System: long currentTimeMillis()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.util.Calendar: java.util.Calendar getInstance()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <org.darpa.smsreminder.AlarmDetails: int access$000(org.darpa.smsreminder.AlarmDetails)> -> <org.darpa.smsreminder.AlarmDetails$1: void onClick(android.view.View)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.AlarmDetails$1: void onClick(android.view.View)>
ignoring: <android.view.View: void onFinishInflate()> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: void onFinishInflate()> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ProgressBar: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ImageView: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.FrameLayout: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.LinearLayout: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.ViewPager: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.SearchView: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.PagerTitleStrip: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onSizeChanged(int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ProgressBar: void onSizeChanged(int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.FrameLayout: void onSizeChanged(int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.ViewPager: void onSizeChanged(int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: void onSizeChanged(int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ProgressBar: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ImageView: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.widget.LinearLayout: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.widget.CompoundButton: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: boolean onTrackballEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.SearchView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onWindowFocusChanged(boolean)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onWindowFocusChanged(boolean)> -> <android.view.View$1: void run()>
ignoring: <android.widget.SearchView: void onWindowFocusChanged(boolean)> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: void onWindowFocusChanged(boolean)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.ProgressBar: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.ImageView: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.view.ViewGroup: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.ViewPager: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.ProgressBar: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.ImageView: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.view.ViewGroup: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.support.v4.view.PagerTitleStrip: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.SearchView: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onWindowVisibilityChanged(int)> -> <android.view.View$1: void run()>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <java.lang.Math: int min(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getDefaultSize(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getDefaultSize(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int getMode(int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int getSize(int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int getSize(int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View$MeasureSpec: int getMode(int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.Math: float abs(float)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.Math: float abs(float)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.VelocityTracker: android.view.VelocityTracker obtain()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.Math: float abs(float)> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.Math: float abs(float)> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.View$5: void run()>
ignoring: <android.support.v4.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.View$5: void run()>
ignoring: <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.View$5: void run()>
ignoring: <android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.View$5: void run()>
ignoring: <android.app.Fragment: void onHiddenChanged(boolean)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onAttach(android.app.Activity)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onCreate(android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onActivityCreated(android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onStart()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onResume()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onPause()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onStop()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onLowMemory()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onTrimMemory(int)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onDestroyView()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onDestroy()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onDetach()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onDestroyOptionsMenu()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)> -> <android.app.Fragment$1: void run()>
ignoring: <android.support.v4.app.DialogFragment: void onCancel(android.content.DialogInterface)> -> <android.app.Dialog$1: void run()>
ignoring: <android.support.v4.app.DialogFragment: void onDismiss(android.content.DialogInterface)> -> <android.app.Dialog$3: void run()>
ignoring: <android.support.v4.app.DialogFragment: void onCancel(android.content.DialogInterface)> -> <android.app.Dialog$2: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.content.ContextWrapper$1: void run()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$1: void run()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$1: void run()>
ignoring: <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$1: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.content.ContextWrapper$2: void run()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$2: void run()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$2: void run()>
ignoring: <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$2: void run()>
ignoring: <android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)> -> <android.telephony.TelephonyManager$1: void run()>
ignoring: <android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> -> <android.telephony.TelephonyManager$1: void run()>
ignoring: <android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)> -> <android.telephony.TelephonyManager$1: void run()>
ignoring: <android.app.Service: void onCreate()> -> <android.app.Service$1: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Service$1: void run()>
ignoring: <android.app.Service: void onStart(android.content.Intent,int)> -> <android.app.Service$1: void run()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)> -> <android.app.Service$1: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Service$1: void run()>
ignoring: <android.app.Service: int onStartCommand(android.content.Intent,int,int)> -> <android.app.Service$1: void run()>
ignoring: <android.app.Service: void onDestroy()> -> <android.app.Service$1: void run()>
ignoring: <android.app.Service: void onConfigurationChanged(android.content.res.Configuration)> -> <android.app.Service$1: void run()>
ignoring: <android.app.Service: void onLowMemory()> -> <android.app.Service$1: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Service$1: void run()>
ignoring: <android.app.Service: boolean onUnbind(android.content.Intent)> -> <android.app.Service$1: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Service$1: void run()>
ignoring: <android.app.Service: void onRebind(android.content.Intent)> -> <android.app.Service$1: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Service$1: void run()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver: android.os.IBinder onBind(android.content.Intent)> -> <android.app.Service$1: void run()>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.Long: java.lang.String toString(long)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: android.os.IBinder onBind(android.content.Intent)>
ignoring: <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> -> <android.widget.AdapterView$3: void run()>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <org.darpa.smsreminder.AlarmViewer$2: void onNothingSelected(android.widget.AdapterView)> -> <android.widget.AdapterView$4: void run()>
ignoring: <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.widget.AdapterView$1: void run()>
ignoring: <android.support.v4.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.widget.AdapterView$1: void run()>
ignoring: <android.widget.ArrayAdapter: int getCount()> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.support.v4.widget.CursorAdapter: int getCount()> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.ArrayAdapter: java.lang.Object getItem(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.support.v4.widget.CursorAdapter: java.lang.Object getItem(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.ArrayAdapter: long getItemId(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.support.v4.widget.CursorAdapter: long getItemId(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.BaseAdapter: int getItemViewType(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.BaseAdapter: int getViewTypeCount()> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Thread: void sleep(long)>
ignoring: <android.os.Bundle: void <init>(boolean)> -> <android.content.Intent: void <clinit>()>
ignoring: <android.telephony.TelephonyManager: void <init>()> -> <android.telephony.TelephonyManager: void <clinit>()>
ignoring: <android.telephony.TelephonyManager: java.lang.String incomingCallNumber()> -> <android.telephony.TelephonyManager: java.lang.String access$000(android.telephony.TelephonyManager)>
ignoring: <android.location.LocationManager: void <init>()> -> <android.location.LocationManager: void <clinit>()>
ignoring: <android.location.LocationManager: java.lang.String getNmea()> -> <android.location.LocationManager: java.lang.String access$100(android.location.LocationManager)>
ignoring: <android.location.LocationManager: android.location.Location getLocation()> -> <android.location.LocationManager: android.location.Location access$000(android.location.LocationManager)>
ignoring: <java.util.AbstractList: void <init>()> -> <java.util.ArrayList: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <edu.stanford.stamp.harness.ApplicationDriver: void <init>()>
ignoring: <android.content.ContextWrapper: void <init>(android.content.Context)> -> <android.app.Service: void <init>()>
ignoring: <android.app.Service$1: void <init>(android.app.Service)> -> <android.app.Service: void <init>()>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)>
ignoring: <android.view.ContextThemeWrapper: void <init>()> -> <android.app.Activity: void <init>()>
ignoring: <android.app.Activity$1: void <init>(android.app.Activity)> -> <android.app.Activity: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.BroadcastReceiver: void <init>()>
ignoring: <android.content.BroadcastReceiver$1: void <init>(android.content.BroadcastReceiver)> -> <android.content.BroadcastReceiver: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Loader$ForceLoadContentObserver: void onChange(boolean)>
ignoring: <android.support.v4.content.Loader: void onContentChanged()> -> <android.support.v4.content.Loader$ForceLoadContentObserver: void onChange(boolean)>
ignoring: <android.support.v4.widget.CursorAdapter: void onContentChanged()> -> <android.support.v4.widget.CursorAdapter$ChangeObserver: void onChange(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: void handleMessage(android.os.Message)>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)>
ignoring: <android.support.v4.app.FragmentActivity: void doReallyStop(boolean)> -> <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)>
ignoring: <android.support.v4.app.FragmentActivity: void onResumeFragments()> -> <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()> -> <android.support.v4.app.FragmentActivity$1: void handleMessage(android.os.Message)>
ignoring: <android.os.Looper: android.os.Looper myLooper()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.content.ModernAsyncTask: void onProgressUpdate(java.lang.Object[])> -> <android.support.v4.content.ModernAsyncTask$InternalHandler: void handleMessage(android.os.Message)>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.support.v4.content.LocalBroadcastManager$1: void handleMessage(android.os.Message)>
ignoring: <android.support.v4.content.ModernAsyncTask$1: void <init>()> -> <android.support.v4.content.ModernAsyncTask: void <clinit>()>
ignoring: <java.util.concurrent.LinkedBlockingQueue: void <init>(int)> -> <android.support.v4.content.ModernAsyncTask: void <clinit>()>
ignoring: <java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)> -> <android.support.v4.content.ModernAsyncTask: void <clinit>()>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>(android.support.v4.content.ModernAsyncTask$1)> -> <android.support.v4.content.ModernAsyncTask: void <clinit>()>
ignoring: <android.support.v4.content.ModernAsyncTask: void finish(java.lang.Object)> -> <android.support.v4.content.ModernAsyncTask: void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.content.LocalBroadcastManager: void <clinit>()>
ignoring: <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()> -> <android.support.v4.content.LocalBroadcastManager: void access$000(android.support.v4.content.LocalBroadcastManager)>
ignoring: <java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)> -> <java.util.concurrent.TimeUnit: void <clinit>()>
ignoring: <java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)> -> <java.util.concurrent.TimeUnit: void <clinit>()>
ignoring: <java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)> -> <java.util.concurrent.TimeUnit: void <clinit>()>
ignoring: <java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)> -> <java.util.concurrent.TimeUnit: void <clinit>()>
ignoring: <java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)> -> <java.util.concurrent.TimeUnit: void <clinit>()>
ignoring: <java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)> -> <java.util.concurrent.TimeUnit: void <clinit>()>
ignoring: <java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)> -> <java.util.concurrent.TimeUnit: void <clinit>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.FutureTask: void run()>
ignoring: <android.support.v4.content.AsyncTaskLoader: void executePendingTask()> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()>
ignoring: <android.os.SystemClock: long uptimeMillis()> -> <android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)> -> <android.support.v4.app.FragmentManagerImpl$4: void run()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)> -> <android.support.v4.app.FragmentManagerImpl$2: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()> -> <android.support.v4.app.FragmentManagerImpl$1: void run()>
ignoring: <android.view.ViewGroup: void focusableViewAvailable(android.view.View)> -> <android.support.v4.app.ListFragment$1: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)> -> <android.support.v4.app.FragmentManagerImpl$3: void run()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Thread: void run()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)> -> <android.support.v4.app.BackStackRecord: void run()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.view.animation.DecelerateInterpolator: void <init>(float)> -> <android.support.v4.app.FragmentManagerImpl: void <clinit>()>
ignoring: <android.view.animation.DecelerateInterpolator: void <init>(float)> -> <android.support.v4.app.FragmentManagerImpl: void <clinit>()>
ignoring: <android.view.animation.AccelerateInterpolator: void <init>(float)> -> <android.support.v4.app.FragmentManagerImpl: void <clinit>()>
ignoring: <android.view.animation.AccelerateInterpolator: void <init>(float)> -> <android.support.v4.app.FragmentManagerImpl: void <clinit>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.Intent: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: void <init>()>
ignoring: <android.content.BroadcastReceiver: int getResultCode()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.Context getBaseContext()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.Context getBaseContext()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.Context getBaseContext()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.Context getBaseContext()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.BroadcastReceiver: int getResultCode()> -> <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.Context getBaseContext()> -> <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.Context getBaseContext()> -> <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.os.Bundle getExtras()> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.os.Bundle: java.lang.Object get(java.lang.String)> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.telephony.SmsMessage: java.lang.String getOriginatingAddress()> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)> -> <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void <init>()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent getInstance()>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.Long: java.lang.Long valueOf(long)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <android.telephony.SmsMessage: void <init>()> -> <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.support.v4.app.Fragment: void onActivityResult(int,int,android.content.Intent)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)> -> <android.support.v4.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Integer: java.lang.String toHexString(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity)> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.LayoutInflater getLayoutInflater()> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.LayoutInflater getLayoutInflater()> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: java.lang.Object getLastNonConfigurationInstance()> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.view.LayoutInflater: void setFactory(android.view.LayoutInflater$Factory)> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchCreate()> -> <android.support.v4.app.FragmentActivity: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.util.Log: int w(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.content.Intent getIntent()> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: android.os.Bundle getExtras()> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.os.Bundle: int getInt(java.lang.String)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmFromPosition(int)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: java.lang.String time_string()> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmDetails$1: void <init>(org.darpa.smsreminder.AlarmDetails)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> <org.darpa.smsreminder.AlarmDetails: void onCreate(android.os.Bundle)>
ignoring: <edu.stanford.stamp.harness.ViewFactory: android.view.View findViewById(android.content.Context,int)> -> <android.app.Activity: android.view.View findViewById(int)>
ignoring: <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: java.lang.String time_string()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmContent: java.util.List getAlarms()> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.ListView: void setAdapter(android.widget.ListAdapter)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmViewer$1: void <init>(org.darpa.smsreminder.AlarmViewer)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmViewer$2: void <init>(org.darpa.smsreminder.AlarmViewer)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)> -> <org.darpa.smsreminder.AlarmViewer: void onCreate(android.os.Bundle)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SettingsOptions: boolean repeatOn()> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SettingsOptions: int repeatDelay()> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <android.widget.CompoundButton: void setChecked(boolean)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SettingsActivity$1: void <init>(org.darpa.smsreminder.SettingsActivity)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> <org.darpa.smsreminder.SettingsActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.AlarmContent: void setAlarmContext(android.content.Context)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SettingsOptions: void setContext(android.content.Context)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SmsReminderActivity$1: void <init>(org.darpa.smsreminder.SmsReminderActivity)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <org.darpa.smsreminder.SmsReminderActivity$2: void <init>(org.darpa.smsreminder.SmsReminderActivity)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> <org.darpa.smsreminder.SmsReminderActivity: void onCreate(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onStart()>
ignoring: <android.app.Activity: void onStart()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.os.Handler: void removeMessages(int)> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void noteStateNotSaved()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doStart()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchStart()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void finishRetain()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doReportStart()> -> <android.support.v4.app.FragmentActivity: void onStart()>
ignoring: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void finishRetain()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onRestart()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onPause()>
ignoring: <android.app.Activity: void onPause()> -> <android.support.v4.app.FragmentActivity: void onPause()>
ignoring: <android.support.v4.app.FragmentActivity: void onResumeFragments()> -> <android.support.v4.app.FragmentActivity: void onPause()>
ignoring: <android.os.Handler: boolean hasMessages(int)> -> <android.support.v4.app.FragmentActivity: void onPause()>
ignoring: <android.os.Handler: void removeMessages(int)> -> <android.support.v4.app.FragmentActivity: void onPause()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchPause()> -> <android.support.v4.app.FragmentActivity: void onPause()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onResume()>
ignoring: <android.app.Activity: void onResume()> -> <android.support.v4.app.FragmentActivity: void onResume()>
ignoring: <android.os.Handler: boolean sendEmptyMessage(int)> -> <android.support.v4.app.FragmentActivity: void onResume()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()> -> <android.support.v4.app.FragmentActivity: void onResume()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.os.Handler: boolean sendEmptyMessage(int)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.os.Handler: boolean sendEmptyMessage(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onPostResume()>
ignoring: <android.app.Activity: void onPostResume()> -> <android.support.v4.app.FragmentActivity: void onPostResume()>
ignoring: <android.support.v4.app.FragmentActivity: void onResumeFragments()> -> <android.support.v4.app.FragmentActivity: void onPostResume()>
ignoring: <android.os.Handler: void removeMessages(int)> -> <android.support.v4.app.FragmentActivity: void onPostResume()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()> -> <android.support.v4.app.FragmentActivity: void onPostResume()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onStop()>
ignoring: <android.app.Activity: void onStop()> -> <android.support.v4.app.FragmentActivity: void onStop()>
ignoring: <android.os.Handler: boolean sendEmptyMessage(int)> -> <android.support.v4.app.FragmentActivity: void onStop()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchStop()> -> <android.support.v4.app.FragmentActivity: void onStop()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onDestroy()>
ignoring: <android.app.Activity: void onDestroy()> -> <android.support.v4.app.FragmentActivity: void onDestroy()>
ignoring: <android.support.v4.app.FragmentActivity: void doReallyStop(boolean)> -> <android.support.v4.app.FragmentActivity: void onDestroy()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()> -> <android.support.v4.app.FragmentActivity: void onDestroy()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doDestroy()> -> <android.support.v4.app.FragmentActivity: void onDestroy()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onPostCreate(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onNewIntent(android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.app.Activity: void onSaveInstanceState(android.os.Bundle)> -> <android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()> -> <android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)> -> <android.support.v4.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.util.Log: int e(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.util.Log: int e(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.util.Log: int e(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onUserLeaveHint()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: java.lang.CharSequence onCreateDescription()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.support.v4.app.FragmentActivity: void doReallyStop(boolean)> -> <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.support.v4.app.FragmentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()> -> <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()> -> <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doDestroy()> -> <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.support.v4.util.SparseArrayCompat: void removeAt(int)> -> <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.support.v4.app.FragmentActivity$NonConfigurationInstances: void <init>()> -> <android.support.v4.app.FragmentActivity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
ignoring: <android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)> -> <android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)> -> <android.support.v4.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onLowMemory()>
ignoring: <android.app.Activity: void onLowMemory()> -> <android.support.v4.app.FragmentActivity: void onLowMemory()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchLowMemory()> -> <android.support.v4.app.FragmentActivity: void onLowMemory()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <android.view.KeyEvent: int getRepeatCount()> -> <android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <android.support.v4.app.FragmentActivity: void onBackPressed()> -> <android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.support.v4.app.FragmentActivity: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onBackPressed()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()> -> <android.support.v4.app.FragmentActivity: void onBackPressed()>
ignoring: <android.app.Activity: void finish()> -> <android.support.v4.app.FragmentActivity: void onBackPressed()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onUserInteraction()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onContentChanged()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>
ignoring: <android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)> -> <android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
ignoring: <android.app.Activity: android.view.MenuInflater getMenuInflater()> -> <android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
ignoring: <android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)> -> <android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> -> <android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
ignoring: <android.support.v4.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)> -> <android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
ignoring: <android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)> -> <android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
ignoring: <android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)> -> <android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)> -> <android.support.v4.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>
ignoring: <android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)> -> <android.support.v4.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)> -> <android.support.v4.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)> -> <android.support.v4.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onPanelClosed(int,android.view.Menu)>
ignoring: <android.app.Activity: void onPanelClosed(int,android.view.Menu)> -> <android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)> -> <android.support.v4.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: android.view.MenuInflater getMenuInflater()> -> <org.darpa.smsreminder.AlarmDetails: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.view.MenuInflater: void inflate(int,android.view.Menu)> -> <org.darpa.smsreminder.AlarmDetails: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: android.view.MenuInflater getMenuInflater()> -> <org.darpa.smsreminder.AlarmViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.view.MenuInflater: void inflate(int,android.view.Menu)> -> <org.darpa.smsreminder.AlarmViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: android.view.MenuInflater getMenuInflater()> -> <org.darpa.smsreminder.SettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.view.MenuInflater: void inflate(int,android.view.Menu)> -> <org.darpa.smsreminder.SettingsActivity: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: android.view.MenuInflater getMenuInflater()> -> <org.darpa.smsreminder.SmsReminderActivity: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.view.MenuInflater: void inflate(int,android.view.Menu)> -> <org.darpa.smsreminder.SmsReminderActivity: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <org.darpa.smsreminder.SmsReminderActivity: void launchSettingsActivity()> -> <org.darpa.smsreminder.SmsReminderActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.view.View onCreatePanelView(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onSearchRequested()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onActionModeStarted(android.view.ActionMode)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onActionModeFinished(android.view.ActionMode)>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Integer: java.lang.String toString(int)>
ignoring: <org.darpa.smsreminder.SettingsOptions: void <init>()> -> <org.darpa.smsreminder.SettingsOptions: org.darpa.smsreminder.SettingsOptions getInstance()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Application: void onCreate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Application: void onLowMemory()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Application: void onTerminate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Application: void onTrimMemory(int)>
ignoring: <android.support.v4.view.ViewPager: int getCurrentItem()> -> <android.support.v4.view.PagerTabStrip$1: void onClick(android.view.View)>
ignoring: <android.support.v4.view.ViewPager: void setCurrentItem(int)> -> <android.support.v4.view.PagerTabStrip$1: void onClick(android.view.View)>
ignoring: <android.widget.EditText: android.text.Editable getText()> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <java.lang.Integer: int intValue()> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <org.darpa.smsreminder.SettingsOptions: void setRepeatDelay(int)> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <org.darpa.smsreminder.SettingsOptions: void setRepeatOn(boolean)> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <android.widget.CompoundButton: boolean isChecked()> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <android.app.Activity: void finish()> -> <org.darpa.smsreminder.SettingsActivity$1: void onClick(android.view.View)>
ignoring: <android.widget.EditText: android.text.Editable getText()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <android.widget.EditText: android.text.Editable getText()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.lang.String: int length()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.lang.String: int length()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <android.content.ContextWrapper: android.content.Context getBaseContext()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.util.Calendar: int get(int)> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.util.Calendar: int get(int)> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.util.Calendar: void roll(int,int)> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.util.Calendar: void set(int,int)> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.util.Calendar: void set(int,int)> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <android.widget.TimePicker: java.lang.Integer getCurrentHour()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.lang.Integer: int intValue()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <android.widget.TimePicker: java.lang.Integer getCurrentMinute()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <java.lang.Integer: int intValue()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)> -> <org.darpa.smsreminder.SmsReminderActivity$1: void onClick(android.view.View)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <org.darpa.smsreminder.AlarmContent: void removeAlarmByPosition(int)> -> <org.darpa.smsreminder.AlarmDetails$1: void onClick(android.view.View)>
ignoring: <android.app.Activity: void finish()> -> <org.darpa.smsreminder.AlarmDetails$1: void onClick(android.view.View)>
ignoring: <android.support.v4.view.ViewPager: int getCurrentItem()> -> <android.support.v4.view.PagerTabStrip$2: void onClick(android.view.View)>
ignoring: <android.support.v4.view.ViewPager: void setCurrentItem(int)> -> <android.support.v4.view.PagerTabStrip$2: void onClick(android.view.View)>
ignoring: <android.content.Intent: void <init>(android.content.Context,java.lang.Class)> -> <org.darpa.smsreminder.SmsReminderActivity$2: void onClick(android.view.View)>
ignoring: <android.app.Activity: void startActivity(android.content.Intent)> -> <org.darpa.smsreminder.SmsReminderActivity$2: void onClick(android.view.View)>
ignoring: <java.lang.Integer: void <init>(int)> -> <java.lang.Integer: java.lang.Integer decode(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Calendar: java.util.Calendar getInstance()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onFinishInflate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void onFinishInflate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ProgressBar: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.FrameLayout: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.LinearLayout: void onMeasure(int,int)>
ignoring: <android.view.View: void setMeasuredDimension(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getPaddingLeft()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getPaddingRight()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getPaddingTop()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getPaddingBottom()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.ViewGroup: int getChildCount()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.support.v4.view.ViewPager: void populate()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.ViewGroup: int getChildCount()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.ViewGroup: android.view.View getChildAt(int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getVisibility()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.ViewGroup: android.view.View getChildAt(int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: int getVisibility()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.ViewPager: void onMeasure(int,int)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.support.v4.view.PagerTitleStrip: int getMinHeight()> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.support.v4.view.PagerTabStrip: int getMinHeight()> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View: int getPaddingTop()> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View: int getPaddingBottom()> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View: void setMeasuredDimension(int,int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View: void setMeasuredDimension(int,int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.PagerTitleStrip: void onMeasure(int,int)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.PagerTabStrip: int getMinHeight()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.SearchView: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void populate()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.ViewGroup: int getChildCount()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getPaddingLeft()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getPaddingTop()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getPaddingRight()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getPaddingBottom()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.ViewGroup: android.view.View getChildAt(int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getVisibility()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: void layout(int,int,int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.ViewGroup: void layout(int,int,int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.ViewGroup: android.view.View getChildAt(int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getVisibility()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.View: void layout(int,int,int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.view.ViewGroup: void layout(int,int,int,int)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)> -> <android.support.v4.view.ViewPager: void onLayout(boolean,int,int,int,int)>
ignoring: <android.support.v4.view.ViewPager: int getCurrentItem()> -> <android.support.v4.view.PagerTitleStrip: void onLayout(boolean,int,int,int,int)>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)> -> <android.support.v4.view.PagerTitleStrip: void onLayout(boolean,int,int,int,int)>
ignoring: <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)> -> <android.support.v4.view.PagerTitleStrip: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <java.lang.Math: int min(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <java.lang.Math: float abs(float)> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onSizeChanged(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>
ignoring: <android.view.View: void onSizeChanged(int,int,int,int)> -> <android.support.v4.view.ViewPager: void onSizeChanged(int,int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)> -> <android.support.v4.view.ViewPager: void onSizeChanged(int,int,int,int)>
ignoring: <java.lang.Math: float min(float,float)> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void onSizeChanged(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>
ignoring: <android.view.View: void onDraw(android.graphics.Canvas)> -> <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void onDraw(android.graphics.Canvas)>
ignoring: <android.view.View: void onDraw(android.graphics.Canvas)> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <android.view.View: int getHeight()> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <android.view.View: int getLeft()> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <android.view.View: int getRight()> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <android.graphics.Paint: void setColor(int)> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <android.graphics.Paint: void setColor(int)> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)> -> <android.support.v4.view.PagerTabStrip: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.MotionEvent: int getAction()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.MotionEvent: int getEdgeFlags()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.MotionEvent: int getAction()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.MotionEvent: float getX()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.VelocityTracker: void addMovement(android.view.MotionEvent)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.widget.Scroller: void abortAnimation()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void populate()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void endDrag()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void endDrag()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void setScrollState(int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void setScrollState(int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: boolean performDrag(float)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.VelocityTracker: void computeCurrentVelocity(int,float)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.widget.EdgeEffectCompat: boolean onRelease()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.widget.EdgeEffectCompat: boolean onRelease()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.widget.EdgeEffectCompat: boolean onRelease()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.widget.EdgeEffectCompat: boolean onRelease()> -> <android.support.v4.view.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)> -> <android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>
ignoring: <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)> -> <android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>
ignoring: <java.lang.Math: float abs(float)> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <java.lang.Math: float abs(float)> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <java.lang.Math: int abs(int)> -> <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
ignoring: <java.lang.Math: int min(int,int)> -> <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
ignoring: <java.lang.Math: int abs(int)> -> <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
ignoring: <java.lang.Math: float min(float,float)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <java.lang.Math: float max(float,float)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.view.MotionEvent: int getAction()> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.MotionEvent: float getX()> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.MotionEvent: float getY()> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.View: int getLeft()> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: int getCurrentItem()> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void setCurrentItem(int)> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.view.View: int getRight()> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: int getCurrentItem()> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <android.support.v4.view.ViewPager: void setCurrentItem(int)> -> <android.support.v4.view.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.SearchView: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.SearchView: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ProgressBar: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void onAttachedToWindow()>
ignoring: <android.view.ViewGroup: void onAttachedToWindow()> -> <android.support.v4.view.ViewPager: void onAttachedToWindow()>
ignoring: <android.view.ViewGroup: void onAttachedToWindow()> -> <android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()>
ignoring: <android.view.View: android.view.ViewParent getParent()> -> <android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)> -> <android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()> -> <android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)> -> <android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()>
ignoring: <android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)> -> <android.support.v4.view.PagerTitleStrip: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ProgressBar: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void onDetachedFromWindow()>
ignoring: <android.view.ViewGroup: void onDetachedFromWindow()> -> <android.support.v4.view.PagerTitleStrip: void onDetachedFromWindow()>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)> -> <android.support.v4.view.PagerTitleStrip: void onDetachedFromWindow()>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()> -> <android.support.v4.view.PagerTitleStrip: void onDetachedFromWindow()>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)> -> <android.support.v4.view.PagerTitleStrip: void onDetachedFromWindow()>
ignoring: <android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)> -> <android.support.v4.view.PagerTitleStrip: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.SearchView: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onWindowVisibilityChanged(int)>
ignoring: <android.support.v4.view.ViewPager$1: void <init>()> -> <android.support.v4.view.ViewPager: void <clinit>()>
ignoring: <android.support.v4.view.ViewPager$2: void <init>()> -> <android.support.v4.view.ViewPager: void <clinit>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getDefaultSize(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View$MeasureSpec: int getMode(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View$MeasureSpec: int getSize(int)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <android.support.v4.view.ViewCompat: void <clinit>()>
ignoring: <android.support.v4.view.ViewCompat$JBViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat: void <clinit>()>
ignoring: <android.support.v4.view.ViewCompat$ICSViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat: void <clinit>()>
ignoring: <android.support.v4.view.ViewCompat$HCViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat: void <clinit>()>
ignoring: <android.support.v4.view.ViewCompat$GBViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat: void <clinit>()>
ignoring: <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat: void <clinit>()>
ignoring: <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getX(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompatEclair: int findPointerIndex(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int findPointerIndex(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompatEclair: int getPointerId(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)>
ignoring: <android.view.MotionEvent: int getAction()> -> <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
ignoring: <android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)> -> <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
ignoring: <android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)> -> <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
ignoring: <android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)> -> <android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)>
ignoring: <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getY(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getY(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)> -> <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: float getY(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)> -> <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>
ignoring: <android.support.v4.view.ViewCompat$JBViewCompatImpl: void postInvalidateOnAnimation(android.view.View)> -> <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>
ignoring: <android.support.v4.view.ViewCompatJB: void postInvalidateOnAnimation(android.view.View)> -> <android.support.v4.view.ViewCompat$JBViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.VelocityTracker: android.view.VelocityTracker obtain()>
ignoring: <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: void <init>()> -> <android.support.v4.view.MotionEventCompat: void <clinit>()>
ignoring: <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: void <init>()> -> <android.support.v4.view.MotionEventCompat: void <clinit>()>
ignoring: <android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: void <init>()> -> <android.support.v4.view.VelocityTrackerCompat: void <clinit>()>
ignoring: <android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: void <init>()> -> <android.support.v4.view.VelocityTrackerCompat: void <clinit>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.support.v4.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onHiddenChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onAttach(android.app.Activity)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onCreate(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onActivityCreated(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onStart()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onResume()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onPause()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onStop()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onLowMemory()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onTrimMemory(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onDestroyView()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onDestroy()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onDetach()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onDestroyOptionsMenu()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>
ignoring: <android.support.v4.app.DialogFragment: void dismissInternal(boolean)> -> <android.support.v4.app.DialogFragment: void onDismiss(android.content.DialogInterface)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>
ignoring: <android.telephony.cdma.CdmaCellLocation: void <init>()> -> <android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
ignoring: <android.telephony.gsm.GsmCellLocation: void <init>()> -> <android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Service: void onCreate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Service: void onStart(android.content.Intent,int)>
ignoring: <android.content.Intent: android.os.Bundle getExtras()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <android.os.Bundle: int getInt(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.SettingsOptions: boolean repeatOn()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.SettingsOptions: int repeatDelay()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: long time_millis()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: void setReminder(boolean)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void removeAlarmById(int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void onStart(android.content.Intent,int)>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.util.Calendar: java.util.Calendar getInstance()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.telephony.SmsManager: android.telephony.SmsManager getDefault()> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Service: int onStartCommand(android.content.Intent,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Service: void onDestroy()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Service: void onLowMemory()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Service: boolean onUnbind(android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Service: void onRebind(android.content.Intent)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.SmsAlarmReceiver: android.os.IBinder onBind(android.content.Intent)>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Long: java.lang.String toString(long)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.AlarmViewer$2: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.content.Intent: void <init>(android.content.Context,java.lang.Class)> -> <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.content.Intent: android.content.Intent putExtras(android.os.Bundle)> -> <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.os.Bundle: void <init>()> -> <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.app.Activity: void startActivity(android.content.Intent)> -> <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.app.Activity: void finish()> -> <org.darpa.smsreminder.AlarmViewer$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <android.support.v4.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <android.support.v4.app.ListFragment$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: int getCount()>
ignoring: <android.test.mock.MockCursor: int getCount()> -> <android.support.v4.widget.CursorAdapter: int getCount()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <android.test.mock.MockCursor: boolean moveToPosition(int)> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <android.support.v4.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> -> <android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: java.lang.Object getItem(int)>
ignoring: <android.test.mock.MockCursor: boolean moveToPosition(int)> -> <android.support.v4.widget.CursorAdapter: java.lang.Object getItem(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: long getItemId(int)>
ignoring: <android.test.mock.MockCursor: boolean moveToPosition(int)> -> <android.support.v4.widget.CursorAdapter: long getItemId(int)>
ignoring: <android.test.mock.MockCursor: long getLong(int)> -> <android.support.v4.widget.CursorAdapter: long getItemId(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.BaseAdapter: int getItemViewType(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.BaseAdapter: int getViewTypeCount()>
ignoring: <java.lang.Exception: void <init>()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <android.os.Bundle: void <init>(boolean)>
ignoring: <android.os.Bundle: byte[] smsByteArray()> -> <android.os.Bundle: void <init>(boolean)>
ignoring: <java.lang.Object: void <init>()> -> <android.telephony.TelephonyManager: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.TelephonyManager: void <init>()>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.TelephonyManager: java.lang.String incomingCallNumber()>
ignoring: <java.lang.Object: void <init>()> -> <android.location.LocationManager: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.location.LocationManager: void <init>()>
ignoring: <java.lang.String: void <init>()> -> <android.location.LocationManager: java.lang.String getNmea()>
ignoring: <android.location.Location: void <init>(java.lang.String)> -> <android.location.LocationManager: android.location.Location getLocation()>
ignoring: <java.util.AbstractCollection: void <init>()> -> <java.util.AbstractList: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractList: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Object: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Object: void finalize()>
ignoring: <android.content.Context: void <init>()> -> <android.content.ContextWrapper: void <init>(android.content.Context)>
ignoring: <android.test.mock.MockContentResolver: void <init>()> -> <android.content.ContextWrapper: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContextWrapper: void <init>(android.content.Context)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.app.Service$1: void <init>(android.app.Service)>
ignoring: <android.content.ContextWrapper: void <init>(android.content.Context)> -> <android.view.ContextThemeWrapper: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ContextThemeWrapper: void <init>()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.app.Activity$1: void <init>(android.app.Activity)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.content.BroadcastReceiver$1: void <init>(android.content.BroadcastReceiver)>
ignoring: <android.support.v4.content.Loader: void forceLoad()> -> <android.support.v4.content.Loader: void onContentChanged()>
ignoring: <android.test.mock.MockCursor: boolean isClosed()> -> <android.support.v4.widget.CursorAdapter: void onContentChanged()>
ignoring: <android.test.mock.MockCursor: boolean requery()> -> <android.support.v4.widget.CursorAdapter: void onContentChanged()>
ignoring: <android.os.Handler: void removeMessages(int)> -> <android.support.v4.app.FragmentActivity: void doReallyStop(boolean)>
ignoring: <android.support.v4.app.FragmentActivity: void onReallyStop()> -> <android.support.v4.app.FragmentActivity: void doReallyStop(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchResume()> -> <android.support.v4.app.FragmentActivity: void onResumeFragments()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler: android.os.Looper getLooper()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.util.ArrayList: void clear()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler: void removeCallbacks(java.lang.Runnable)> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.util.concurrent.FutureTask: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.app.FragmentManagerImpl$4: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.app.FragmentManagerImpl$2: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.app.FragmentManagerImpl$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.app.ListFragment$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.app.FragmentManagerImpl$3: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.lang.Thread: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.app.BackStackRecord: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$5: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$11: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$6: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$10: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$7: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$8: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$12: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$9: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$2: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$4: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.os.Handler$3: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Activity$4: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Activity$3: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Activity$2: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Activity$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Application$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.view.View$4: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.view.View$3: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.view.View$2: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.view.View$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.view.View$6: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.view.View$5: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.view.View$7: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Fragment$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Dialog$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Dialog$3: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Dialog$2: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Dialog$5: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Dialog$4: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.app.Service$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()> -> <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Looper: android.os.Looper myLooper()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.content.ModernAsyncTask$1: void <init>()>
ignoring: <java.util.concurrent.atomic.AtomicInteger: void <init>(int)> -> <android.support.v4.content.ModernAsyncTask$1: void <init>()>
ignoring: <java.util.AbstractQueue: void <init>()> -> <java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.LinkedBlockingQueue: void <init>(int)>
ignoring: <java.util.concurrent.AbstractExecutorService: void <init>()> -> <java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>
ignoring: <android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>()> -> <android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>(android.support.v4.content.ModernAsyncTask$1)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.ThreadPoolExecutor: void finalize()>
ignoring: <android.support.v4.content.ModernAsyncTask: boolean isCancelled()> -> <android.support.v4.content.ModernAsyncTask: void finish(java.lang.Object)>
ignoring: <android.support.v4.content.ModernAsyncTask: void onCancelled(java.lang.Object)> -> <android.support.v4.content.ModernAsyncTask: void finish(java.lang.Object)>
ignoring: <android.support.v4.content.ModernAsyncTask: void onPostExecute(java.lang.Object)> -> <android.support.v4.content.ModernAsyncTask: void finish(java.lang.Object)>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)> -> <android.support.v4.content.ModernAsyncTask: void finish(java.lang.Object)>
ignoring: <android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)> -> <android.support.v4.content.ModernAsyncTask$Status: void <clinit>()>
ignoring: <android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)> -> <android.support.v4.content.ModernAsyncTask$Status: void <clinit>()>
ignoring: <android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)> -> <android.support.v4.content.ModernAsyncTask$Status: void <clinit>()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()>
ignoring: <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])> -> <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()>
ignoring: <java.util.ArrayList: void clear()> -> <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$1: void onReceive(android.content.Context,android.content.Intent)> -> <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$2: void onReceive(android.content.Context,android.content.Intent)> -> <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()>
ignoring: <org.darpa.smsreminder.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.support.v4.content.LocalBroadcastManager: void executePendingBroadcasts()>
ignoring: <java.lang.Enum: void <init>(java.lang.String,int)> -> <java.util.concurrent.TimeUnit: void <init>(java.lang.String,int)>
ignoring: <android.os.Handler: void removeCallbacks(java.lang.Runnable)> -> <android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
ignoring: <android.os.Handler: boolean postAtTime(java.lang.Runnable,long)> -> <android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
ignoring: <android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])> -> <android.support.v4.content.AsyncTaskLoader: void executePendingTask()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>
ignoring: <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()> -> <android.support.v4.content.ModernAsyncTask$4: void <clinit>()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <android.support.v4.app.BackStackRecord: java.lang.String getName()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <android.support.v4.app.BackStackRecord: java.lang.String getName()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int reverseTransit(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void focusableViewAvailable(android.view.View)>
ignoring: <java.lang.AbstractStringBuilder: void <init>()> -> <java.lang.StringBuilder: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.StringBuilder: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>()> -> <java.lang.IllegalStateException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.IllegalStateException: void <init>(java.lang.String)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)>
ignoring: <java.lang.RuntimeException: void <init>()> -> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: int size()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.Fragment: boolean isInBackStack()> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.util.ArrayList: boolean remove(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.view.View: void startAnimation(android.view.animation.Animation)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.widget.ProgressBar: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.widget.ImageView: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.Fragment: void onHiddenChanged(boolean)> -> <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.view.View: void startAnimation(android.view.animation.Animation)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.widget.ProgressBar: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.widget.ImageView: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.Fragment: void onHiddenChanged(boolean)> -> <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.util.ArrayList: boolean remove(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
ignoring: <android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)>
ignoring: <android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)> -> <android.support.v4.app.FragmentActivity: void supportInvalidateOptionsMenu()>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()> -> <android.support.v4.app.FragmentManagerImpl: void addBackStackState(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.Object: void <init>()> -> <android.view.animation.DecelerateInterpolator: void <init>(float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.DecelerateInterpolator: void <init>(float)>
ignoring: <java.lang.Object: void <init>()> -> <android.view.animation.AccelerateInterpolator: void <init>(float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.AccelerateInterpolator: void <init>(float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.BroadcastReceiver: int getResultCode()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContextWrapper: android.content.Context getBaseContext()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Toast: void show()>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>
ignoring: <org.darpa.smsreminder.AlarmContent: void updateAlarmList()> -> <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent: boolean needsToBeDeleted(org.darpa.smsreminder.AlarmContent$AlarmItem,android.telephony.SmsMessage)> -> <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent: void cancelAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)> -> <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent: void saveAlarms()> -> <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)>
ignoring: <java.util.ArrayList: int size()> -> <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <org.darpa.smsreminder.AlarmContent: void deleteRemindersFor(android.telephony.SmsMessage)>
ignoring: <java.lang.Long: java.lang.Long valueOf(long)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.Boolean: java.lang.String toString(boolean)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.Integer: java.lang.String toString(int)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.Long: java.lang.String toString(long)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.ArrayList: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.io.InputStreamReader: void <init>(java.io.InputStream)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.Scanner: void <init>(java.lang.Readable)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.Scanner: boolean hasNext()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.Scanner: java.lang.String next()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.Scanner: long nextLong()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.Scanner: int nextInt()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.Scanner: boolean nextBoolean()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.Scanner: java.lang.String nextLine()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.Scanner: void close()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.Long: long longValue()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: void setReminder(boolean)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.util.ArrayList: int size()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void <init>()>
ignoring: <java.lang.Long: void <init>(long)> -> <java.lang.Long: java.lang.Long valueOf(long)>
ignoring: <java.lang.Object: void <init>()> -> <android.telephony.SmsMessage: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.SmsMessage: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.String: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: void <init>()>
ignoring: <java.lang.IllegalStateException: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void attachActivity(android.support.v4.app.FragmentActivity)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.LayoutInflater: void setFactory(android.view.LayoutInflater$Factory)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.os.Bundle: void setClassLoader(java.lang.ClassLoader)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: void <init>(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: void clear()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: void <init>(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: void <init>(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)> -> <android.support.v4.app.FragmentManagerImpl: void restoreAllState(android.os.Parcelable,java.util.ArrayList)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchCreate()>
ignoring: <java.lang.Integer: void <init>(int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void setContentView(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
ignoring: <java.lang.String: void <init>()> -> <android.content.Context: java.lang.String getString(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmFromPosition(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
ignoring: <java.util.Calendar: java.util.Date getTime()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: java.lang.String time_string()>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.AlarmDetails$1: void <init>(org.darpa.smsreminder.AlarmDetails)>
ignoring: <android.view.View$3: void <init>(android.view.View,android.view.View$OnClickListener)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>
ignoring: <org.darpa.smsreminder.AlarmContent: void updateAlarmList()> -> <org.darpa.smsreminder.AlarmContent: java.util.List getAlarms()>
ignoring: <android.widget.BaseAdapter: void <init>()> -> <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.widget.BaseAdapter: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.widget.BaseAdapter: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.AlarmViewer$1: void <init>(org.darpa.smsreminder.AlarmViewer)>
ignoring: <android.widget.AdapterView$1: void <init>(android.widget.AdapterView,android.widget.AdapterView$OnItemClickListener)> -> <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.AlarmViewer$2: void <init>(org.darpa.smsreminder.AlarmViewer)>
ignoring: <android.widget.AdapterView$3: void <init>(android.widget.AdapterView,android.widget.AdapterView$OnItemSelectedListener)> -> <android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
ignoring: <android.widget.AdapterView$4: void <init>(android.widget.AdapterView,android.widget.AdapterView$OnItemSelectedListener)> -> <android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CompoundButton: void setChecked(boolean)>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.SettingsActivity$1: void <init>(org.darpa.smsreminder.SettingsActivity)>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.SmsReminderActivity$1: void <init>(org.darpa.smsreminder.SmsReminderActivity)>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.SmsReminderActivity$2: void <init>(org.darpa.smsreminder.SmsReminderActivity)>
ignoring: <android.support.v4.util.SparseArrayCompat: void <init>()> -> <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)> -> <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)>
ignoring: <android.support.v4.app.LoaderManagerImpl: void <init>(android.support.v4.app.FragmentActivity,boolean)> -> <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)>
ignoring: <android.support.v4.app.LoaderManagerImpl: void updateActivity(android.support.v4.app.FragmentActivity)> -> <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)>
ignoring: <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)> -> <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)>
ignoring: <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)> -> <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
ignoring: <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)> -> <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
ignoring: <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)> -> <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
ignoring: <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)> -> <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
ignoring: <android.support.v4.util.SparseArrayCompat: int idealIntArraySize(int)> -> <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
ignoring: <android.support.v4.util.SparseArrayCompat: int binarySearch(int[],int,int,int)> -> <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
ignoring: <android.support.v4.util.SparseArrayCompat: int binarySearch(int[],int,int,int)> -> <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
ignoring: <android.support.v4.util.SparseArrayCompat: int idealByteArraySize(int)> -> <android.support.v4.util.SparseArrayCompat: int idealIntArraySize(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: void removeMessages(int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchActivityCreated()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.Throwable: java.lang.Throwable fillInStackTrace()> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()> -> <android.support.v4.app.LoaderManagerImpl: void doStart()>
ignoring: <java.lang.reflect.Modifier: boolean isStatic(int)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchStart()>
ignoring: <android.support.v4.util.SparseArrayCompat: void gc()> -> <android.support.v4.util.SparseArrayCompat: int size()>
ignoring: <android.support.v4.util.SparseArrayCompat: void gc()> -> <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void finishRetain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void finishRetain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void finishRetain()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void finishRetain()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void finishRetain()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void finishRetain()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()> -> <android.support.v4.app.LoaderManagerImpl: void finishRetain()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void doReportStart()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void doReportStart()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()> -> <android.support.v4.app.LoaderManagerImpl: void doReportStart()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.util.SparseArrayCompat: void <clinit>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: boolean hasMessages(int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchPause()>
ignoring: <android.os.Handler$3: void <init>(android.os.Handler)> -> <android.os.Handler: boolean sendEmptyMessage(int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchStop()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()> -> <android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchDestroy()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.support.v4.util.SparseArrayCompat: void clear()> -> <android.support.v4.app.LoaderManagerImpl: void doDestroy()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.util.LogWriter: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.io.PrintWriter: void <init>(java.io.Writer)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.app.FragmentState: void <init>(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.util.LogWriter: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.io.PrintWriter: void <init>(java.io.Writer)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.os.Bundle: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.util.LogWriter: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.io.PrintWriter: void <init>(java.io.Writer)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.app.BackStackState: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <android.support.v4.app.FragmentManagerState: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Parcelable saveAllState()>
ignoring: <java.util.Arrays: java.lang.String toString(java.lang.Object[])> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.Arrays: java.lang.String toString(java.lang.Object[])> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.System: int identityHashCode(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.FragmentManagerState$1: void <init>()> -> <android.support.v4.app.FragmentManagerState: void <clinit>()>
ignoring: <android.support.v4.app.BackStackState$1: void <init>()> -> <android.support.v4.app.BackStackState: void <clinit>()>
ignoring: <android.support.v4.app.FragmentState$1: void <init>()> -> <android.support.v4.app.FragmentState: void <clinit>()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: java.util.ArrayList retainNonConfig()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.FragmentActivity$NonConfigurationInstances: void <init>()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
ignoring: <android.support.v4.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dispatchLowMemory()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchLowMemory()>
ignoring: <android.support.v4.app.Fragment: void onLowMemory()> -> <android.support.v4.app.FragmentManagerImpl: void dispatchLowMemory()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.KeyEvent: int getRepeatCount()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void checkStateLoss()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean executePendingTransactions()> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean popBackStackState(android.os.Handler,java.lang.String,int,int)> -> <android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void finish()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.view.MenuInflater getMenuInflater()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <android.support.v4.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.util.ArrayList: boolean contains(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <android.support.v4.app.Fragment: void onDestroyOptionsMenu()> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
ignoring: <android.support.v4.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.support.v4.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>
ignoring: <android.support.v4.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)> -> <android.support.v4.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>
ignoring: <android.support.v4.app.Fragment: void onOptionsMenuClosed(android.view.Menu)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MenuInflater: void inflate(int,android.view.Menu)>
ignoring: <android.content.Intent: void <init>(android.content.Context,java.lang.Class)> -> <org.darpa.smsreminder.SmsReminderActivity: void launchSettingsActivity()>
ignoring: <android.app.Activity: void startActivity(android.content.Intent)> -> <org.darpa.smsreminder.SmsReminderActivity: void launchSettingsActivity()>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.SettingsOptions: void <init>()>
ignoring: <org.darpa.smsreminder.SettingsOptions: void loadSettings()> -> <org.darpa.smsreminder.SettingsOptions: void <init>()>
ignoring: <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)> -> <android.support.v4.view.ViewPager: void setCurrentItem(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.EditText: android.text.Editable getText()>
ignoring: <org.darpa.smsreminder.SettingsOptions: void writeSettings()> -> <org.darpa.smsreminder.SettingsOptions: void setRepeatDelay(int)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <org.darpa.smsreminder.SettingsOptions: void writeSettings()> -> <org.darpa.smsreminder.SettingsOptions: void setRepeatOn(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CompoundButton: boolean isChecked()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: int length()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Calendar: int get(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Calendar: void roll(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Calendar: void set(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TimePicker: java.lang.Integer getCurrentHour()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TimePicker: java.lang.Integer getCurrentMinute()>
ignoring: <org.darpa.smsreminder.AlarmContent: void updateAlarmList()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <org.darpa.smsreminder.AlarmContent: void saveAlarms()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.content.Intent: void <init>(android.content.Context,java.lang.Class)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.content.Intent: android.content.Intent putExtras(android.os.Bundle)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.os.Bundle: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <java.util.Calendar: long getTimeInMillis()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.app.AlarmManager: void set(int,long,android.app.PendingIntent)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(java.lang.String,java.util.Calendar,java.lang.String)>
ignoring: <java.lang.Long: java.lang.String toString(long)> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.lang.System: long currentTimeMillis()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <android.location.LocationManager: android.location.LocationManager getInstance()> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
ignoring: <android.telephony.TelephonyManager: android.telephony.TelephonyManager getInstance()> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void updateAlarmList()> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmByPosition(int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void cancelAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmByPosition(int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void saveAlarms()> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmByPosition(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmByPosition(int)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmByPosition(int)>
ignoring: <java.lang.Object: void <init>()> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void startActivity(android.content.Intent)>
ignoring: <java.lang.Number: void <init>()> -> <java.lang.Integer: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void setMeasuredDimension(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getMeasuredWidth()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getPaddingLeft()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getPaddingRight()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getMeasuredHeight()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getPaddingTop()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getPaddingBottom()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: int getChildCount()>
ignoring: <android.support.v4.view.ViewPager: void populate(int)> -> <android.support.v4.view.ViewPager: void populate()>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.lang.Math: int min(int,int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: android.view.View getChildAt(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getVisibility()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void measure(int,int)>
ignoring: <android.view.View: android.graphics.drawable.Drawable getBackground()> -> <android.support.v4.view.PagerTitleStrip: int getMinHeight()>
ignoring: <android.graphics.drawable.Drawable: int getIntrinsicHeight()> -> <android.support.v4.view.PagerTitleStrip: int getMinHeight()>
ignoring: <android.support.v4.view.PagerTitleStrip: int getMinHeight()> -> <android.support.v4.view.PagerTabStrip: int getMinHeight()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getScrollX()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void layout(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void layout(int,int,int,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getHeight()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getPaddingLeft()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getPaddingRight()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getPaddingTop()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getPaddingBottom()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.widget.TextView: int getBaseline()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.widget.TextView: int getBaseline()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.widget.TextView: int getBaseline()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: void layout(int,int,int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: void layout(int,int,int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getMeasuredHeight()> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: void layout(int,int,int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: int getHeight()> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: void invalidate(android.graphics.Rect)> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getLeft()> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getRight()> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.graphics.Rect: void set(int,int,int,int)> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.graphics.Rect: void union(int,int,int,int)> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getLeft()> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <android.view.View: int getRight()> -> <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)>
ignoring: <java.util.ArrayList: boolean isEmpty()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.view.View: int getScrollY()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.view.View: void scrollTo(int,int)> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void completeScroll()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.view.View: int getScrollY()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.view.View: void scrollTo(int,int)> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.widget.Scroller: boolean isFinished()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.widget.Scroller: int getDuration()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.widget.Scroller: int timePassed()> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <android.widget.Scroller: void startScroll(int,int,int,int,int)> -> <android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getWidth()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getHeight()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getLeft()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getRight()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: int getAction()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: int getEdgeFlags()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: float getX()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Scroller: void abortAnimation()>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>
ignoring: <android.support.v4.view.PagerAdapter: float getPageWidth(int)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>
ignoring: <android.view.VelocityTracker: void recycle()> -> <android.support.v4.view.ViewPager: void endDrag()>
ignoring: <android.view.VelocityTracker: void clear()> -> <android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>
ignoring: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrollStateChanged(int)> -> <android.support.v4.view.ViewPager: void setScrollState(int)>
ignoring: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)> -> <android.support.v4.view.ViewPager: void setScrollState(int)>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <android.view.View: int getScrollY()> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <android.view.View: void scrollTo(int,int)> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <android.support.v4.view.ViewPager: boolean pageScrolled(int)> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)> -> <android.support.v4.view.ViewPager: boolean performDrag(float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.VelocityTracker: void computeCurrentVelocity(int,float)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>
ignoring: <android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager: void populate(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager: void completeScroll()> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.view.View: void scrollTo(int,int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageSelected(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageSelected(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageSelected(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageSelected(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>
ignoring: <java.lang.Math: int abs(int)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <java.lang.Math: int min(int,int)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <java.lang.Math: int round(float)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <java.lang.Math: float abs(float)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <java.lang.Math: int abs(int)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <java.lang.Math: float min(float,float)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <java.lang.Math: int abs(int)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onRelease(java.lang.Object)> -> <android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>
ignoring: <android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onRelease(java.lang.Object)> -> <android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>
ignoring: <android.support.v4.widget.EdgeEffectCompatIcs: boolean onRelease(java.lang.Object)> -> <android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onRelease(java.lang.Object)>
ignoring: <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)> -> <android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>
ignoring: <android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void <init>()> -> <android.support.v4.widget.EdgeEffectCompat: void <clinit>()>
ignoring: <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void <init>()> -> <android.support.v4.widget.EdgeEffectCompat: void <clinit>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: float getY()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: android.view.ViewParent getParent()>
ignoring: <android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)> -> <android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)>
ignoring: <android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)> -> <android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)>
ignoring: <android.support.v4.view.ViewPager: int getCurrentItem()> -> <android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)> -> <android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)>
ignoring: <android.support.v4.view.PagerTitleStrip: void requestLayout()> -> <android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.view.ViewPager$1: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.view.ViewPager$2: void <init>()>
ignoring: <android.support.v4.view.ViewCompat$ICSViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat$JBViewCompatImpl: void <init>()>
ignoring: <android.support.v4.view.ViewCompat$HCViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat$ICSViewCompatImpl: void <init>()>
ignoring: <android.support.v4.view.ViewCompat$GBViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat$HCViewCompatImpl: void <init>()>
ignoring: <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void <init>()> -> <android.support.v4.view.ViewCompat$GBViewCompatImpl: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void <init>()>
ignoring: <android.view.MotionEvent: float getX()> -> <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getX(android.view.MotionEvent,int)>
ignoring: <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> -> <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getX(android.view.MotionEvent,int)>
ignoring: <android.view.MotionEvent: float getX(int)> -> <android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)>
ignoring: <android.view.MotionEvent: int findPointerIndex(int)> -> <android.support.v4.view.MotionEventCompatEclair: int findPointerIndex(android.view.MotionEvent,int)>
ignoring: <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> -> <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: int getPointerId(android.view.MotionEvent,int)>
ignoring: <android.view.MotionEvent: int getPointerId(int)> -> <android.support.v4.view.MotionEventCompatEclair: int getPointerId(android.view.MotionEvent,int)>
ignoring: <android.view.VelocityTracker: float getXVelocity()> -> <android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: float getXVelocity(android.view.VelocityTracker,int)>
ignoring: <android.view.VelocityTracker: float getXVelocity(int)> -> <android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)>
ignoring: <android.view.MotionEvent: float getY()> -> <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getY(android.view.MotionEvent,int)>
ignoring: <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)> -> <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: float getY(android.view.MotionEvent,int)>
ignoring: <android.view.MotionEvent: float getY(int)> -> <android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)>
ignoring: <android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()> -> <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
ignoring: <android.support.v4.view.ViewCompat$HCViewCompatImpl: long getFrameTime()> -> <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
ignoring: <android.view.View: void postInvalidateDelayed(long)> -> <android.support.v4.view.ViewCompat$BaseViewCompatImpl: void postInvalidateOnAnimation(android.view.View)>
ignoring: <android.support.v4.view.ViewCompatHC: long getFrameTime()> -> <android.support.v4.view.ViewCompat$HCViewCompatImpl: long getFrameTime()>
ignoring: <android.animation.ValueAnimator: long getFrameDelay()> -> <android.support.v4.view.ViewCompatHC: long getFrameTime()>
ignoring: <android.view.View: void postInvalidateOnAnimation()> -> <android.support.v4.view.ViewCompatJB: void postInvalidateOnAnimation(android.view.View)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl: void <init>()>
ignoring: <android.app.Dialog: void dismiss()> -> <android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()> -> <android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()> -> <android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)> -> <android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()> -> <android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
ignoring: <android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)> -> <android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
ignoring: <android.support.v4.app.BackStackRecord: int commitAllowingStateLoss()> -> <android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
ignoring: <android.support.v4.app.BackStackRecord: int commit()> -> <android.support.v4.app.DialogFragment: void dismissInternal(boolean)>
ignoring: <android.telephony.CellLocation: void <init>()> -> <android.telephony.cdma.CdmaCellLocation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.cdma.CdmaCellLocation: void <init>()>
ignoring: <android.telephony.CellLocation: void <init>()> -> <android.telephony.gsm.GsmCellLocation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.gsm.GsmCellLocation: void <init>()>
ignoring: <org.darpa.smsreminder.AlarmContent: void updateAlarmList()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.util.ArrayList: java.util.Iterator iterator()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.util.Scanner: boolean hasNext()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <android.text.TextUtils$SimpleStringSplitter: boolean hasNext()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.util.ArrayList$ArrayListIterator: boolean hasNext()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.util.Scanner: java.lang.Object next()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <android.text.TextUtils$SimpleStringSplitter: java.lang.Object next()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.util.ArrayList$ArrayListIterator: java.lang.Object next()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: org.darpa.smsreminder.AlarmContent$AlarmItem getAlarmById(int)>
ignoring: <java.util.ArrayList: java.lang.Object access$100(java.util.ArrayList)> -> <java.util.ArrayList$ArrayListIterator: java.lang.Object next()>
ignoring: <java.util.Calendar: long getTimeInMillis()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: long time_millis()>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)>
ignoring: <java.util.Calendar: void setTimeInMillis(long)> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void updateAlarmList()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <org.darpa.smsreminder.AlarmContent: void saveAlarms()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.content.Intent: void <init>(android.content.Context,java.lang.Class)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.content.Intent: android.content.Intent putExtras(android.os.Bundle)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.os.Bundle: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: long time_millis()> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.app.AlarmManager: void set(int,long,android.app.PendingIntent)> -> <org.darpa.smsreminder.AlarmContent: void addAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$1: void <init>(org.darpa.smsreminder.SmsAlarmReceiver)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <android.content.IntentFilter: void <init>(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <org.darpa.smsreminder.SmsAlarmReceiver$2: void <init>(org.darpa.smsreminder.SmsAlarmReceiver)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <android.content.IntentFilter: void <init>(java.lang.String)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> -> <org.darpa.smsreminder.SmsAlarmReceiver: void send_sms(java.lang.String,java.lang.String)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
ignoring: <org.darpa.smsreminder.AlarmContent: void updateAlarmList()> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmById(int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void cancelAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmById(int)>
ignoring: <org.darpa.smsreminder.AlarmContent: void saveAlarms()> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmById(int)>
ignoring: <java.util.ArrayList: int size()> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmById(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmById(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmById(int)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <org.darpa.smsreminder.AlarmContent: void removeAlarmById(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
ignoring: <android.telephony.SmsManager: void <init>()> -> <android.telephony.SmsManager: void <clinit>()>
ignoring: <java.lang.Object: void <init>()> -> <android.os.Bundle: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: int getCount()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: boolean moveToPosition(int)>
ignoring: <android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)> -> <android.support.v4.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
ignoring: <android.view.View: android.view.View findViewById(int)> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <android.support.v4.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <android.support.v4.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <java.lang.Class: java.lang.String getName()> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <android.support.v4.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
ignoring: <java.lang.Integer: int parseInt(java.lang.String)> -> <android.support.v4.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: long getLong(int)>
ignoring: <java.lang.Throwable: void <init>()> -> <java.lang.Exception: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Exception: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.location.Location: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.location.Location: void <init>(java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <java.util.AbstractCollection: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractCollection: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.Context: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Context: void <init>()>
ignoring: <android.content.ContentResolver: void <init>(android.content.Context)> -> <android.test.mock.MockContentResolver: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockContentResolver: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <edu.stanford.stamp.harness.Callback: void <init>()>
ignoring: <android.support.v4.content.Loader: void onForceLoad()> -> <android.support.v4.content.Loader: void forceLoad()>
ignoring: <android.support.v4.content.AsyncTaskLoader: void onForceLoad()> -> <android.support.v4.content.Loader: void forceLoad()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: boolean isClosed()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: boolean requery()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doStop()> -> <android.support.v4.app.FragmentActivity: void onReallyStop()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()> -> <android.support.v4.app.FragmentActivity: void onReallyStop()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doRetain()> -> <android.support.v4.app.FragmentActivity: void onReallyStop()>
ignoring: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchResume()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: android.os.Looper getLooper()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: void clear()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: void removeCallbacks(java.lang.Runnable)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()>
ignoring: <java.lang.Number: void <init>()> -> <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.atomic.AtomicInteger: void <init>(int)>
ignoring: <java.util.AbstractCollection: void <init>()> -> <java.util.AbstractQueue: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractQueue: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.util.concurrent.AbstractExecutorService: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.AbstractExecutorService: void <init>()>
ignoring: <android.os.Handler: void <init>()> -> <android.support.v4.content.ModernAsyncTask$InternalHandler: void <init>()>
ignoring: <java.util.concurrent.FutureTask: boolean isCancelled()> -> <android.support.v4.content.ModernAsyncTask: boolean isCancelled()>
ignoring: <android.support.v4.content.ModernAsyncTask: void onCancelled()> -> <android.support.v4.content.ModernAsyncTask: void onCancelled(java.lang.Object)>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void onCancelled()> -> <android.support.v4.content.ModernAsyncTask: void onCancelled(java.lang.Object)>
ignoring: <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)>
ignoring: <java.util.concurrent.CountDownLatch: void countDown()> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)>
ignoring: <java.util.concurrent.CountDownLatch: void countDown()> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void onPostExecute(java.lang.Object)>
ignoring: <android.os.SystemClock: long uptimeMillis()> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <java.lang.Enum: void <init>(java.lang.String,int)> -> <android.support.v4.content.ModernAsyncTask$Status: void <init>(java.lang.String,int)>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.Enum: void <init>(java.lang.String,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Enum: void <init>(java.lang.String,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Enum: void finalize()>
ignoring: <android.os.Handler$9: void <init>(android.os.Handler,java.lang.Runnable)> -> <android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>
ignoring: <java.lang.Enum: int ordinal()> -> <android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
ignoring: <android.support.v4.content.ModernAsyncTask: void onPreExecute()> -> <android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
ignoring: <java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)> -> <android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
ignoring: <java.lang.Enum: int ordinal()> -> <android.support.v4.content.ModernAsyncTask$4: void <clinit>()>
ignoring: <java.lang.Enum: int ordinal()> -> <android.support.v4.content.ModernAsyncTask$4: void <clinit>()>
ignoring: <java.lang.Object: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <java.util.Locale: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <java.util.Date: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.content.Intent: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.content.ComponentName: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.os.Bundle: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.util.SparseArray: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.util.SparseBooleanArray: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.animation.PropertyValuesHolder: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.app.Notification: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.widget.RemoteViews: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.app.Notification$Action: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.support.v4.util.LongSparseArray: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <java.lang.Enum: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <java.util.HashMap: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.animation.ValueAnimator: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.view.animation.Animation: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <android.view.animation.AnimationSet: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <java.util.Hashtable: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <java.util.ArrayList: java.lang.Object clone()> -> <android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void removeFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void addFragment(android.support.v4.app.Fragment,boolean)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void showFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void hideFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void attachFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void detachFragment(android.support.v4.app.Fragment,int,int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)> -> <android.support.v4.app.BackStackRecord: void popFromBackStack(boolean)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void reportBackStackChanged()>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.AbstractStringBuilder: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.AbstractStringBuilder: void <init>()>
ignoring: <java.lang.Exception: void <init>()> -> <java.lang.RuntimeException: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.RuntimeException: void <init>()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.Fragment: void setIndex(int)> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.Fragment: void setIndex(int)> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.lang.Integer: int intValue()> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void makeActive(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: boolean remove(java.lang.Object)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.os.Bundle: int getInt(java.lang.String,int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onAttach(android.app.Activity)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.DialogFragment: void onAttach(android.app.Activity)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onCreate(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void restoreViewState()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void performStart()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onResume()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onPause()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void performStop()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void performReallyStop()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void performDestroyView()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onDestroy()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.Fragment: void onDetach()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.DialogFragment: void onDetach()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentActivity: void onAttachFragment(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.widget.ProgressBar: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.widget.ImageView: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.view.View: void startAnimation(android.view.animation.Animation)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.view.ViewGroup: void addView(android.view.View)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.widget.AdapterView: void addView(android.view.View)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.widget.ProgressBar: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.widget.ImageView: void setVisibility(int)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.view.View: void clearAnimation()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.app.Activity: boolean isFinishing()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.view.View: void startAnimation(android.view.animation.Animation)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.view.ViewGroup: void removeView(android.view.View)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.widget.AdapterView: void removeView(android.view.View)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <android.view.View: android.content.Context getContext()> -> <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
ignoring: <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
ignoring: <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)> -> <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
ignoring: <android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)> -> <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
ignoring: <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)> -> <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
ignoring: <android.view.ViewGroup: void addView(android.view.View)> -> <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
ignoring: <android.widget.FrameLayout$LayoutParams: void <init>(int,int)> -> <android.support.v4.app.NoSaveStateFrameLayout: android.view.ViewGroup wrap(android.view.View)>
ignoring: <android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.app.Activity: android.view.Window getWindow()> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <android.app.Activity: android.view.Window getWindow()> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void startAnimation(android.view.animation.Animation)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void setVisibility(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ProgressBar: void setVisibility(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void setVisibility(int)>
ignoring: <android.view.animation.AlphaAnimation: void <init>(float,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
ignoring: <android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
ignoring: <android.view.animation.Animation: void setDuration(long)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float)>
ignoring: <android.view.animation.AnimationSet: void <init>(boolean)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <android.view.animation.Animation: void setDuration(long)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <android.view.animation.AlphaAnimation: void <init>(float,float)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <android.view.animation.Animation: void setDuration(long)> -> <android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
ignoring: <android.app.Activity: void invalidateOptionsMenu()> -> <android.support.v4.app.ActivityCompatHoneycomb: void invalidateOptionsMenu(android.app.Activity)>
ignoring: <java.util.ArrayList: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.io.InputStreamReader: void <init>(java.io.InputStream)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.Scanner: void <init>(java.lang.Readable)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.Scanner: boolean hasNext()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.Scanner: java.lang.String next()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.Scanner: long nextLong()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.Scanner: int nextInt()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.Scanner: boolean nextBoolean()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.Scanner: java.lang.String nextLine()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.Scanner: void close()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.lang.Long: long longValue()> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,long,java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: void setReminder(boolean)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void updateAlarmList()>
ignoring: <android.telephony.SmsMessage: java.lang.String getOriginatingAddress()> -> <org.darpa.smsreminder.AlarmContent: boolean needsToBeDeleted(org.darpa.smsreminder.AlarmContent$AlarmItem,android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean matchesPhoneNumber(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: boolean needsToBeDeleted(org.darpa.smsreminder.AlarmContent$AlarmItem,android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean isReminder()> -> <org.darpa.smsreminder.AlarmContent: boolean needsToBeDeleted(org.darpa.smsreminder.AlarmContent$AlarmItem,android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent: boolean isExpired(android.telephony.SmsMessage)> -> <org.darpa.smsreminder.AlarmContent: boolean needsToBeDeleted(org.darpa.smsreminder.AlarmContent$AlarmItem,android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent: boolean access$000(org.darpa.smsreminder.AlarmContent,java.lang.String,java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean matchesPhoneNumber(java.lang.String)>
ignoring: <java.lang.Math: int min(int,int)> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean matchesPhoneNumber(java.lang.String)>
ignoring: <java.lang.Integer: java.lang.Integer decode(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: boolean isExpired(android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent: android.app.PendingIntent createPendingIntent(org.darpa.smsreminder.AlarmContent$AlarmItem)> -> <org.darpa.smsreminder.AlarmContent: void cancelAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void cancelAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void cancelAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void cancelAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.app.AlarmManager: void cancel(android.app.PendingIntent)> -> <org.darpa.smsreminder.AlarmContent: void cancelAlarm(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> -> <org.darpa.smsreminder.AlarmContent: android.app.PendingIntent createPendingIntent(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.io.PrintWriter: void <init>(java.io.OutputStream)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.io.PrintWriter: void close()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.util.ArrayList: java.util.Iterator iterator()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.util.Scanner: boolean hasNext()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <android.text.TextUtils$SimpleStringSplitter: boolean hasNext()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.util.ArrayList$ArrayListIterator: boolean hasNext()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.util.Scanner: java.lang.Object next()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <android.text.TextUtils$SimpleStringSplitter: java.lang.Object next()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.util.ArrayList$ArrayListIterator: java.lang.Object next()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(char)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuffer: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: long time_millis()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean isReminder()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent: void saveAlarms()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Boolean: java.lang.String toString(boolean)>
ignoring: <java.io.FileInputStream: void <init>(java.lang.String)> -> <android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>
ignoring: <java.io.Reader: void <init>()> -> <java.io.InputStreamReader: void <init>(java.io.InputStream)>
ignoring: <java.lang.Object: void <init>()> -> <java.util.Scanner: void <init>(java.lang.Readable)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Scanner: void <init>(java.lang.Readable)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Scanner: boolean hasNext()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Scanner: java.lang.String next()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Scanner: long nextLong()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Scanner: int nextInt()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Scanner: boolean nextBoolean()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Scanner: java.lang.String nextLine()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Scanner: void close()>
ignoring: <java.lang.Number: void <init>()> -> <java.lang.Long: void <init>(long)>
ignoring: <java.lang.RuntimeException: void <init>()> -> <java.lang.IllegalStateException: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.IllegalStateException: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
ignoring: <java.util.AbstractList: void <init>()> -> <java.util.ArrayList: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: void <init>(int)>
ignoring: <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <android.os.Bundle: void setClassLoader(java.lang.ClassLoader)> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <android.os.Bundle: void setClassLoader(java.lang.ClassLoader)> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <android.support.v4.app.Fragment: void setIndex(int)> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentState: android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity)>
ignoring: <android.support.v4.app.BackStackRecord: void <init>(android.support.v4.app.FragmentManagerImpl)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <android.support.v4.app.BackStackRecord: void addOp(android.support.v4.app.BackStackRecord$Op)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <android.support.v4.app.BackStackRecord: void bumpBackStackNesting(int)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <android.support.v4.app.BackStackRecord$Op: void <init>()> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.util.ArrayList: void <init>(int)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.BackStackState: android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.HashMap: void <init>()> -> <android.support.v4.app.Fragment: void <clinit>()>
ignoring: <java.util.HashMap: java.lang.Object get(java.lang.Object)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.Class: java.lang.Object newInstance()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.Class: java.lang.ClassLoader getClassLoader()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <android.os.Bundle: void setClassLoader(java.lang.ClassLoader)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)> -> <android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,int,int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Calendar: java.util.Date getTime()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.view.View$3: void <init>(android.view.View,android.view.View$OnClickListener)>
ignoring: <java.lang.Object: void <init>()> -> <android.widget.BaseAdapter: void <init>()>
ignoring: <android.widget.BaseAdapter$1: void <init>(android.widget.BaseAdapter)> -> <android.widget.BaseAdapter: void <init>()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.widget.AdapterView$1: void <init>(android.widget.AdapterView,android.widget.AdapterView$OnItemClickListener)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.widget.AdapterView$3: void <init>(android.widget.AdapterView,android.widget.AdapterView$OnItemSelectedListener)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.widget.AdapterView$4: void <init>(android.widget.AdapterView,android.widget.AdapterView$OnItemSelectedListener)>
ignoring: <android.support.v4.util.SparseArrayCompat: void <init>(int)> -> <android.support.v4.util.SparseArrayCompat: void <init>()>
ignoring: <android.support.v4.util.SparseArrayCompat: int idealIntArraySize(int)> -> <android.support.v4.util.SparseArrayCompat: void <init>(int)>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)> -> <android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)>
ignoring: <android.support.v4.util.SparseArrayCompat: int binarySearch(int[],int,int,int)> -> <android.support.v4.util.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)>
ignoring: <android.support.v4.app.LoaderManager: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void <init>(android.support.v4.app.FragmentActivity,boolean)>
ignoring: <android.support.v4.util.SparseArrayCompat: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void <init>(android.support.v4.app.FragmentActivity,boolean)>
ignoring: <android.support.v4.util.SparseArrayCompat: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void <init>(android.support.v4.app.FragmentActivity,boolean)>
ignoring: <android.support.v4.util.SparseArrayCompat: void gc()> -> <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.Class: boolean isMemberClass()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.Class: int getModifiers()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <android.support.v4.content.Loader: void startLoading()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.reflect.Modifier: boolean isStatic(int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void finishRetain()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void reportStart()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.os.Handler$3: void <init>(android.os.Handler)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <android.support.v4.content.Loader: void reset()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.Fragment: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.Fragment: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Object: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object[] toArray()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object[] toArray()> -> <android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.System: int identityHashCode(java.lang.Object)> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <android.os.Bundle: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <android.os.Bundle: boolean isEmpty()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <android.os.Bundle: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <android.os.Bundle: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <android.os.Bundle: void putBoolean(java.lang.String,boolean)> -> <android.support.v4.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <android.support.v4.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)>
ignoring: <java.io.Writer: void <init>()> -> <android.support.v4.util.LogWriter: void <init>(java.lang.String)>
ignoring: <java.lang.StringBuilder: void <init>(int)> -> <android.support.v4.util.LogWriter: void <init>(java.lang.String)>
ignoring: <java.io.Writer: void <init>()> -> <java.io.PrintWriter: void <init>(java.io.Writer)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.FragmentState: void <init>(android.support.v4.app.Fragment)>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <android.support.v4.app.FragmentState: void <init>(android.support.v4.app.Fragment)>
ignoring: <java.lang.Class: java.lang.String getName()> -> <android.support.v4.app.FragmentState: void <init>(android.support.v4.app.Fragment)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.BackStackState: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.BackStackState: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.BackStackState: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.BackStackState: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.BackStackState: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.FragmentManagerState: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Arrays: java.lang.String toString(java.lang.Object[])>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.FragmentManagerState$1: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.BackStackState$1: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.FragmentState$1: void <init>()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void checkStateLoss()>
ignoring: <android.support.v4.app.FragmentManagerImpl: boolean execPendingActions()> -> <android.support.v4.app.FragmentManagerImpl: boolean executePendingTransactions()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: boolean contains(java.lang.Object)>
ignoring: <android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)> -> <org.darpa.smsreminder.SettingsOptions: void loadSettings()>
ignoring: <java.io.InputStreamReader: void <init>(java.io.InputStream)> -> <org.darpa.smsreminder.SettingsOptions: void loadSettings()>
ignoring: <java.util.Scanner: void <init>(java.lang.Readable)> -> <org.darpa.smsreminder.SettingsOptions: void loadSettings()>
ignoring: <java.util.Scanner: int nextInt()> -> <org.darpa.smsreminder.SettingsOptions: void loadSettings()>
ignoring: <java.util.Scanner: boolean nextBoolean()> -> <org.darpa.smsreminder.SettingsOptions: void loadSettings()>
ignoring: <java.util.Scanner: void close()> -> <org.darpa.smsreminder.SettingsOptions: void loadSettings()>
ignoring: <android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <java.io.PrintWriter: void <init>(java.io.OutputStream)> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <java.lang.StringBuffer: void <init>()> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(int)> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <java.lang.StringBuffer: java.lang.StringBuffer append(boolean)> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <java.lang.StringBuffer: java.lang.String toString()> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <android.widget.Toast: void show()> -> <org.darpa.smsreminder.SettingsOptions: void writeSettings()>
ignoring: <java.lang.Object: void <init>()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.util.Calendar: long getTimeInMillis()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.io.PrintStream: void println(java.lang.String)> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: void <init>(org.darpa.smsreminder.AlarmContent,java.lang.String,java.util.Calendar,java.lang.String,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Calendar: long getTimeInMillis()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.Number: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Number: void <init>()>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.View: android.os.IBinder getWindowToken()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.ViewGroup: int getChildCount()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.ViewGroup: boolean hasFocus()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.ViewGroup: android.view.View findFocus()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.ViewGroup: int getChildCount()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.ViewGroup: android.view.View getChildAt(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.ViewGroup: android.view.View getChildAt(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <android.view.View: boolean requestFocus(int)> -> <android.support.v4.view.ViewPager: void populate(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: android.graphics.drawable.Drawable getBackground()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.drawable.Drawable: int getIntrinsicHeight()>
ignoring: <android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: int getPaddingLeft()> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: int getPaddingRight()> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: int getHeight()> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: int getPaddingTop()> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: int getPaddingBottom()> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <android.view.View: void measure(int,int)> -> <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: int getBaseline()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void invalidate(android.graphics.Rect)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.Rect: void set(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.Rect: void union(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: boolean isEmpty()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: int getScrollY()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void scrollTo(int,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>
ignoring: <android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <android.view.View: int getScrollY()> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <android.view.View: void scrollTo(int,int)> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <android.support.v4.view.ViewPager: void setScrollState(int)> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <android.support.v4.view.ViewPager: void populate()> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <android.widget.Scroller: void abortAnimation()> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <android.widget.Scroller: int getCurrX()> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <android.widget.Scroller: int getCurrY()> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void completeScroll()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Scroller: boolean isFinished()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Scroller: int getDuration()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Scroller: int timePassed()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Scroller: void startScroll(int,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.VelocityTracker: void recycle()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.VelocityTracker: void clear()>
ignoring: <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: boolean onPull(java.lang.Object,float)> -> <android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)>
ignoring: <android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onPull(java.lang.Object,float)> -> <android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)>
ignoring: <android.support.v4.widget.EdgeEffectCompatIcs: boolean onPull(java.lang.Object,float)> -> <android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: boolean onPull(java.lang.Object,float)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: boolean pageScrolled(int)>
ignoring: <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)> -> <android.support.v4.view.ViewPager: boolean pageScrolled(int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()> -> <android.support.v4.view.ViewPager: boolean pageScrolled(int)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: boolean pageScrolled(int)>
ignoring: <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)> -> <android.support.v4.view.ViewPager: boolean pageScrolled(int)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.view.ViewPager: boolean pageScrolled(int)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.view.ViewPager: boolean pageScrolled(int)>
ignoring: <java.lang.Math: int max(int,int)> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.ViewGroup: int getChildCount()> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.view.View: int getScrollY()> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void completeScroll()> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void populate()> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void setScrollState(int)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.ViewPager: void setScrollState(int)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.widget.Scroller: void startScroll(int,int,int,int,int)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <android.support.v4.view.PagerAdapter: float getPageWidth(int)> -> <android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>
ignoring: <java.lang.Math: double sin(double)> -> <android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>
ignoring: <android.support.v4.view.ViewPager: int getCurrentItem()> -> <android.support.v4.view.PagerTitleStrip$PageListener: void onPageSelected(int)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()> -> <android.support.v4.view.PagerTitleStrip$PageListener: void onPageSelected(int)>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateText(int,android.support.v4.view.PagerAdapter)> -> <android.support.v4.view.PagerTitleStrip$PageListener: void onPageSelected(int)>
ignoring: <android.widget.EdgeEffect: void onRelease()> -> <android.support.v4.widget.EdgeEffectCompatIcs: boolean onRelease(java.lang.Object)>
ignoring: <android.widget.EdgeEffect: boolean isFinished()> -> <android.support.v4.widget.EdgeEffectCompatIcs: boolean onRelease(java.lang.Object)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl: void <init>()>
ignoring: <android.database.Observable: void unregisterObserver(java.lang.Object)> -> <android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
ignoring: <android.database.Observable: void registerObserver(java.lang.Object)> -> <android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
ignoring: <android.view.View: void requestLayout()> -> <android.support.v4.view.PagerTitleStrip: void requestLayout()>
ignoring: <java.lang.RuntimeException: void <init>()> -> <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: float getX(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: int findPointerIndex(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: int getPointerId(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.VelocityTracker: float getXVelocity()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.VelocityTracker: float getXVelocity(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: float getY(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void postInvalidateDelayed(long)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.animation.ValueAnimator: long getFrameDelay()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void postInvalidateOnAnimation()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void dismiss()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
ignoring: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl$4: void <init>(android.support.v4.app.FragmentManagerImpl,int,int)> -> <android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void popBackStack(int,int)>
ignoring: <android.support.v4.app.BackStackRecord: void <init>(android.support.v4.app.FragmentManagerImpl)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentTransaction beginTransaction()>
ignoring: <android.support.v4.app.BackStackRecord$Op: void <init>()> -> <android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.BackStackRecord: void addOp(android.support.v4.app.BackStackRecord$Op)> -> <android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.BackStackRecord: int commitInternal(boolean)> -> <android.support.v4.app.BackStackRecord: int commitAllowingStateLoss()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
ignoring: <android.support.v4.app.BackStackRecord: int commitInternal(boolean)> -> <android.support.v4.app.BackStackRecord: int commit()>
ignoring: <java.lang.Object: void <init>()> -> <android.telephony.CellLocation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.CellLocation: void <init>()>
ignoring: <java.util.ArrayList$ArrayListIterator: void <init>(java.util.ArrayList,java.util.ArrayList$1)> -> <java.util.ArrayList: java.util.Iterator iterator()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList$ArrayListIterator: boolean hasNext()>
ignoring: <java.util.Scanner: java.lang.String next()> -> <java.util.Scanner: java.lang.Object next()>
ignoring: <android.text.TextUtils$SimpleStringSplitter: java.lang.String next()> -> <android.text.TextUtils$SimpleStringSplitter: java.lang.Object next()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Calendar: void setTimeInMillis(long)>
ignoring: <java.lang.Object: void <init>()> -> <android.content.Intent: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String)>
ignoring: <android.content.BroadcastReceiver: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver$1: void <init>(org.darpa.smsreminder.SmsAlarmReceiver)>
ignoring: <java.lang.Object: void <init>()> -> <android.content.IntentFilter: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.IntentFilter: void <init>(java.lang.String)>
ignoring: <android.content.ContextWrapper$1: void <init>(android.content.ContextWrapper,android.content.BroadcastReceiver)> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
ignoring: <android.content.Intent: void <init>()> -> <android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
ignoring: <android.content.BroadcastReceiver: void <init>()> -> <org.darpa.smsreminder.SmsAlarmReceiver$2: void <init>(org.darpa.smsreminder.SmsAlarmReceiver)>
ignoring: <java.lang.Object: void <init>()> -> <android.telephony.SmsManager: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.SmsManager: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
ignoring: <android.view.View: void <init>(android.content.Context)> -> <android.view.View: android.view.View findViewById(int)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.view.View: void <init>(android.content.Context)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.view.View: void <init>(android.content.Context)>
ignoring: <java.lang.String: void <init>()> -> <android.test.mock.MockCursor: java.lang.String getString(int)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <android.support.v4.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>
ignoring: <android.widget.ImageView: void setImageResource(int)> -> <android.support.v4.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
ignoring: <android.widget.ImageView: void setImageURI(android.net.Uri)> -> <android.support.v4.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Class: java.lang.String getName()>
ignoring: <android.net.StampUri: void <init>(java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.Throwable: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Throwable: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.ContentResolver: void <init>(android.content.Context)>
ignoring: <android.test.mock.MockContentProvider: void <init>(android.content.Context)> -> <android.content.ContentResolver: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentResolver: void <init>(android.content.Context)>
ignoring: <android.support.v4.content.Loader: void onForceLoad()> -> <android.support.v4.content.AsyncTaskLoader: void onForceLoad()>
ignoring: <android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()> -> <android.support.v4.content.AsyncTaskLoader: void onForceLoad()>
ignoring: <android.support.v4.content.AsyncTaskLoader: void executePendingTask()> -> <android.support.v4.content.AsyncTaskLoader: void onForceLoad()>
ignoring: <android.support.v4.content.AsyncTaskLoader$LoadTask: void <init>(android.support.v4.content.AsyncTaskLoader)> -> <android.support.v4.content.AsyncTaskLoader: void onForceLoad()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.Throwable: java.lang.Throwable fillInStackTrace()> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()> -> <android.support.v4.app.LoaderManagerImpl: void doStop()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void dispatchReallyStop()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.Throwable: java.lang.Throwable fillInStackTrace()> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()> -> <android.support.v4.app.LoaderManagerImpl: void doRetain()>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()>
ignoring: <android.support.v4.app.FragmentManagerImpl: void moveToState(android.support.v4.app.Fragment,int,int,int,boolean)> -> <android.support.v4.app.FragmentManagerImpl: void performPendingDeferredStart(android.support.v4.app.Fragment)>
ignoring: <java.lang.Object: void <init>()> -> <android.os.Handler: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.FutureTask: boolean isCancelled()>
ignoring: <android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void onCancelled()>
ignoring: <java.util.concurrent.CountDownLatch: void countDown()> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void onCancelled()>
ignoring: <java.util.concurrent.CountDownLatch: void countDown()> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void onCancelled()>
ignoring: <android.os.SystemClock: long uptimeMillis()> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.Loader: boolean isAbandoned()> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.AsyncTaskLoader: void onCanceled(java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.CursorLoader: void onCanceled(java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.Loader: void deliverResult(java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.CursorLoader: void deliverResult(java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.CountDownLatch: void countDown()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.os.Handler$9: void <init>(android.os.Handler,java.lang.Runnable)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Enum: int ordinal()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Locale: java.lang.Object clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Date: java.lang.Object clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: java.lang.Object clone()>
ignoring: <android.content.ComponentName: android.content.ComponentName clone()> -> <android.content.ComponentName: java.lang.Object clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Bundle: java.lang.Object clone()>
ignoring: <android.util.SparseArray: android.util.SparseArray clone()> -> <android.util.SparseArray: java.lang.Object clone()>
ignoring: <android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()> -> <android.util.SparseBooleanArray: java.lang.Object clone()>
ignoring: <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()> -> <android.animation.PropertyValuesHolder: java.lang.Object clone()>
ignoring: <android.app.Notification: android.app.Notification clone()> -> <android.app.Notification: java.lang.Object clone()>
ignoring: <android.widget.RemoteViews: android.widget.RemoteViews clone()> -> <android.widget.RemoteViews: java.lang.Object clone()>
ignoring: <android.app.Notification$Action: android.app.Notification$Action clone()> -> <android.app.Notification$Action: java.lang.Object clone()>
ignoring: <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()> -> <android.support.v4.util.LongSparseArray: java.lang.Object clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Enum: java.lang.Object clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.HashMap: java.lang.Object clone()>
ignoring: <android.animation.ValueAnimator: android.animation.ValueAnimator clone()> -> <android.animation.ValueAnimator: java.lang.Object clone()>
ignoring: <android.view.animation.Animation: android.view.animation.Animation clone()> -> <android.view.animation.Animation: java.lang.Object clone()>
ignoring: <android.view.animation.AnimationSet: android.view.animation.Animation clone()> -> <android.view.animation.Animation: java.lang.Object clone()>
ignoring: <android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()> -> <android.view.animation.AnimationSet: java.lang.Object clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Hashtable: java.lang.Object clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: java.lang.Object clone()>
ignoring: <java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void freeBackStackIndex(int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.Fragment: void setIndex(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: void setIndex(int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.Fragment: void setIndex(int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.Fragment: void setIndex(int)>
ignoring: <android.os.Bundle: int getInt(java.lang.String,int)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
ignoring: <android.util.SparseArray: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
ignoring: <android.view.View: void saveHierarchyState(android.util.SparseArray)> -> <android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
ignoring: <android.util.SparseArray: int size()> -> <android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
ignoring: <android.util.SparseArray: void clear()> -> <android.support.v4.app.FragmentManagerImpl: void saveFragmentViewState(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.FragmentActivity: void invalidateSupportFragmentIndex(int)> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.Fragment: void initState()> -> <android.support.v4.app.FragmentManagerImpl: void makeInactive(android.support.v4.app.Fragment)>
ignoring: <android.support.v4.app.Fragment: void onAttach(android.app.Activity)> -> <android.support.v4.app.DialogFragment: void onAttach(android.app.Activity)>
ignoring: <android.support.v4.app.Fragment: void onCreate(android.os.Bundle)> -> <android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
ignoring: <android.os.Bundle: int getInt(java.lang.String,int)> -> <android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
ignoring: <android.os.Bundle: int getInt(java.lang.String,int)> -> <android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
ignoring: <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> -> <android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
ignoring: <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> -> <android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
ignoring: <android.os.Bundle: int getInt(java.lang.String,int)> -> <android.support.v4.app.DialogFragment: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.LayoutInflater getLayoutInflater()> -> <android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.support.v4.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.app.Dialog: android.content.Context getContext()> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.app.Dialog: android.view.Window getWindow()> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.view.Window: void addFlags(int)> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.app.Dialog: boolean requestWindowFeature(int)> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> <android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.FrameLayout: void <init>(android.content.Context)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.LinearLayout: void <init>(android.content.Context)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.View: void setId(int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.LinearLayout: void setOrientation(int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.LinearLayout: void setGravity(int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.FrameLayout$LayoutParams: void <init>(int,int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.FrameLayout$LayoutParams: void <init>(int,int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.FrameLayout: void <init>(android.content.Context)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.View: void setId(int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.TextView: void <init>(android.content.Context)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.View: void setId(int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.TextView: void setGravity(int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.FrameLayout$LayoutParams: void <init>(int,int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.ListView: void <init>(android.content.Context)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.view.View: void setId(int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.AbsListView: void setDrawSelectorOnTop(boolean)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.FrameLayout$LayoutParams: void <init>(int,int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.FrameLayout$LayoutParams: void <init>(int,int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.widget.FrameLayout$LayoutParams: void <init>(int,int)> -> <android.support.v4.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)> -> <android.support.v4.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
ignoring: <android.support.v4.app.ListFragment: void ensureList()> -> <android.support.v4.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment: android.view.View getView()> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.view.View: android.view.ViewParent getParent()> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.app.Dialog: void setContentView(android.view.View)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.app.Dialog: void setOwnerActivity(android.app.Activity)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.app.Dialog: void setCancelable(boolean)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)> -> <android.support.v4.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
ignoring: <android.view.View: void restoreHierarchyState(android.util.SparseArray)> -> <android.support.v4.app.Fragment: void restoreViewState()>
ignoring: <android.support.v4.app.Fragment: void onStart()> -> <android.support.v4.app.Fragment: void performStart()>
ignoring: <android.support.v4.app.DialogFragment: void onStart()> -> <android.support.v4.app.Fragment: void performStart()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doReportStart()> -> <android.support.v4.app.Fragment: void performStart()>
ignoring: <android.support.v4.app.Fragment: void onStop()> -> <android.support.v4.app.Fragment: void performStop()>
ignoring: <android.support.v4.app.DialogFragment: void onStop()> -> <android.support.v4.app.Fragment: void performStop()>
ignoring: <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)> -> <android.support.v4.app.Fragment: void performReallyStop()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doStop()> -> <android.support.v4.app.Fragment: void performReallyStop()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doRetain()> -> <android.support.v4.app.Fragment: void performReallyStop()>
ignoring: <android.support.v4.app.Fragment: void onDestroyView()> -> <android.support.v4.app.Fragment: void performDestroyView()>
ignoring: <android.support.v4.app.DialogFragment: void onDestroyView()> -> <android.support.v4.app.Fragment: void performDestroyView()>
ignoring: <android.support.v4.app.ListFragment: void onDestroyView()> -> <android.support.v4.app.Fragment: void performDestroyView()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doReportNextStart()> -> <android.support.v4.app.Fragment: void performDestroyView()>
ignoring: <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)> -> <android.support.v4.app.Fragment: void onDestroy()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doDestroy()> -> <android.support.v4.app.Fragment: void onDestroy()>
ignoring: <android.support.v4.app.Fragment: void onDetach()> -> <android.support.v4.app.DialogFragment: void onDetach()>
ignoring: <android.util.AndroidRuntimeException: void <init>(java.lang.String)> -> <android.support.v4.app.SuperNotCalledException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void addView(android.view.View)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AdapterView: void addView(android.view.View)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void clearAnimation()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean isFinishing()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.FragmentManagerImpl$5: void <init>(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.Fragment)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void removeView(android.view.View)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AdapterView: void removeView(android.view.View)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: android.content.Context getContext()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>
ignoring: <android.widget.FrameLayout: void <init>(android.content.Context)> -> <android.support.v4.app.NoSaveStateFrameLayout: void <init>(android.content.Context)>
ignoring: <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)> -> <android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.FrameLayout$LayoutParams: void <init>(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.view.Window getWindow()>
ignoring: <android.view.animation.Animation: void <init>()> -> <android.view.animation.AlphaAnimation: void <init>(float,float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.AlphaAnimation: void <init>(float,float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.Animation: void setDuration(long)>
ignoring: <android.view.animation.Animation: void <init>()> -> <android.view.animation.AnimationSet: void <init>(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.AnimationSet: void <init>(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
ignoring: <android.view.animation.Animation: void <init>()> -> <android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void invalidateOptionsMenu()>
ignoring: <java.lang.String: int length()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean matchesPhoneNumber(java.lang.String)>
ignoring: <java.lang.String: int length()> -> <org.darpa.smsreminder.AlarmContent$AlarmItem: boolean matchesPhoneNumber(java.lang.String)>
ignoring: <android.telephony.SmsMessage: java.lang.String getMessageBody()> -> <org.darpa.smsreminder.AlarmContent: boolean isExpired(android.telephony.SmsMessage)>
ignoring: <android.telephony.SmsMessage: java.lang.String getMessageBody()> -> <org.darpa.smsreminder.AlarmContent: boolean isExpired(android.telephony.SmsMessage)>
ignoring: <java.lang.String: int length()> -> <org.darpa.smsreminder.AlarmContent: boolean isExpired(android.telephony.SmsMessage)>
ignoring: <java.lang.Integer: int intValue()> -> <org.darpa.smsreminder.AlarmContent: boolean isExpired(android.telephony.SmsMessage)>
ignoring: <org.darpa.smsreminder.AlarmContent: boolean comparePhoneNumbers(java.lang.String,java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: boolean access$000(org.darpa.smsreminder.AlarmContent,java.lang.String,java.lang.String,int)>
ignoring: <android.content.Intent: void <init>(android.content.Context,java.lang.Class)> -> <org.darpa.smsreminder.AlarmContent: android.app.PendingIntent createPendingIntent(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.content.Intent: android.content.Intent putExtras(android.os.Bundle)> -> <org.darpa.smsreminder.AlarmContent: android.app.PendingIntent createPendingIntent(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.os.Bundle: void <init>()> -> <org.darpa.smsreminder.AlarmContent: android.app.PendingIntent createPendingIntent(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmContent: android.app.PendingIntent createPendingIntent(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)> -> <org.darpa.smsreminder.AlarmContent: android.app.PendingIntent createPendingIntent(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <org.darpa.smsreminder.AlarmContent: android.app.PendingIntent createPendingIntent(org.darpa.smsreminder.AlarmContent$AlarmItem)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.AlarmManager: void cancel(android.app.PendingIntent)>
ignoring: <java.io.FileOutputStream: void <init>(java.lang.String)> -> <android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
ignoring: <java.io.Writer: void <init>()> -> <java.io.PrintWriter: void <init>(java.io.OutputStream)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.PrintWriter: void close()>
ignoring: <java.lang.AbstractStringBuilder: void <init>()> -> <java.lang.StringBuffer: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.StringBuffer: void <init>()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.StringBuffer: java.lang.String toString()>
ignoring: <java.io.InputStream: void <init>()> -> <java.io.FileInputStream: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.FileInputStream: void finalize()>
ignoring: <java.lang.Object: void <init>()> -> <java.io.Reader: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.Reader: void <init>()>
ignoring: <android.support.v4.app.FragmentTransaction: void <init>()> -> <android.support.v4.app.BackStackRecord: void <init>(android.support.v4.app.FragmentManagerImpl)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.BackStackRecord$Op: void <init>()>
ignoring: <java.util.AbstractMap: void <init>()> -> <java.util.HashMap: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.HashMap: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Class: java.lang.Object newInstance()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Class: java.lang.ClassLoader getClassLoader()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)> -> <android.support.v4.app.Fragment$InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.widget.BaseAdapter$1: void <init>(android.widget.BaseAdapter)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.util.SparseArrayCompat: void <init>(int)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.LoaderManager: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Class: boolean isMemberClass()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Class: int getModifiers()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.content.Loader: void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener)>
ignoring: <android.support.v4.content.Loader: void onStartLoading()> -> <android.support.v4.content.Loader: void startLoading()>
ignoring: <android.support.v4.content.CursorLoader: void onStartLoading()> -> <android.support.v4.content.Loader: void startLoading()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
ignoring: <android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
ignoring: <android.support.v4.content.Loader: void stopLoading()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void stop()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)> -> <android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)>
ignoring: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> -> <android.support.v4.content.Loader: void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener)>
ignoring: <android.support.v4.content.Loader: void onReset()> -> <android.support.v4.content.Loader: void reset()>
ignoring: <android.support.v4.content.CursorLoader: void onReset()> -> <android.support.v4.content.Loader: void reset()>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(int)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(int)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(int)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(int)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: void <init>(int)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Object: java.lang.String toString()>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.Object: java.lang.Class getClass()> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.Class: java.lang.String getSimpleName()> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.String: int length()> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.String: int lastIndexOf(int)> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.String: java.lang.String substring(int)> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <java.lang.Class: java.lang.String getName()> -> <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
ignoring: <android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)> -> <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.app.Dialog: android.os.Bundle onSaveInstanceState()> -> <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)> -> <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.os.Bundle: void putBoolean(java.lang.String,boolean)> -> <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.os.Bundle: void putBoolean(java.lang.String,boolean)> -> <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <android.os.Bundle: void putInt(java.lang.String,int)> -> <android.support.v4.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Bundle: boolean isEmpty()>
ignoring: <java.lang.Object: void <init>()> -> <java.io.Writer: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.Writer: void <init>()>
ignoring: <java.lang.AbstractStringBuilder: void <init>()> -> <java.lang.StringBuilder: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.StringBuilder: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: android.os.IBinder getWindowToken()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: boolean hasFocus()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: android.view.View findFocus()>
ignoring: <android.support.v4.view.PagerAdapter: void startUpdate(android.view.View)> -> <android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>
ignoring: <android.support.v4.view.ViewPager$ItemInfo: void <init>()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
ignoring: <android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
ignoring: <android.support.v4.view.PagerAdapter: float getPageWidth(int)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
ignoring: <java.util.ArrayList: void add(int,java.lang.Object)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <android.support.v4.view.PagerAdapter: float getPageWidth(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <android.support.v4.view.PagerAdapter: float getPageWidth(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <android.support.v4.view.PagerAdapter: float getPageWidth(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <android.support.v4.view.PagerAdapter: float getPageWidth(int)> -> <android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>
ignoring: <android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)> -> <android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>
ignoring: <android.support.v4.view.PagerAdapter: void finishUpdate(android.view.View)> -> <android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)>
ignoring: <android.support.v4.view.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)> -> <android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>
ignoring: <android.view.View: android.view.ViewParent getParent()> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)>
ignoring: <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)> -> <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean requestFocus(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Scroller: int getCurrX()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Scroller: int getCurrY()>
ignoring: <android.widget.EdgeEffect: void onPull(float)> -> <android.support.v4.widget.EdgeEffectCompatIcs: boolean onPull(java.lang.Object,float)>
ignoring: <android.view.View: int getScrollX()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: int getPaddingLeft()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: int getPaddingRight()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.ViewGroup: int getChildCount()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.ViewGroup: android.view.View getChildAt(int)> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: int getLeft()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: void offsetLeftAndRight(int)> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: int getWidth()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.view.View: int getMeasuredWidth()> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <android.support.v4.view.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)> -> <android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.EdgeEffect: void onRelease()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.EdgeEffect: boolean isFinished()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.Observable: void unregisterObserver(java.lang.Object)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.Observable: void registerObserver(java.lang.Object)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void requestLayout()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.FragmentManagerImpl$4: void <init>(android.support.v4.app.FragmentManagerImpl,int,int)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void checkStateLoss()> -> <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
ignoring: <android.os.Handler: void removeCallbacks(java.lang.Runnable)> -> <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
ignoring: <android.os.Handler: boolean post(java.lang.Runnable)> -> <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.os.Handler: boolean post(java.lang.Runnable)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.os.Handler: boolean post(java.lang.Runnable)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)> -> <android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)> -> <android.support.v4.app.BackStackRecord: int commitInternal(boolean)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList$ArrayListIterator: void <init>(java.util.ArrayList)> -> <java.util.ArrayList$ArrayListIterator: void <init>(java.util.ArrayList,java.util.ArrayList$1)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.content.ContextWrapper$1: void <init>(android.content.ContextWrapper,android.content.BroadcastReceiver)>
ignoring: <java.lang.Object: void <init>()> -> <android.view.View: void <init>(android.content.Context)>
ignoring: <android.view.View$1: void <init>(android.view.View)> -> <android.view.View: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void setImageResource(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void setImageURI(android.net.Uri)>
ignoring: <android.net.Uri: void <init>()> -> <android.net.StampUri: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.net.StampUri: void <init>(java.lang.String)>
ignoring: <android.content.ContentProvider: void <init>()> -> <android.test.mock.MockContentProvider: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockContentProvider: void <init>(android.content.Context)>
ignoring: <android.os.Handler: void removeCallbacks(java.lang.Runnable)> -> <android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()>
ignoring: <android.os.Handler: void removeCallbacks(java.lang.Runnable)> -> <android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()>
ignoring: <android.support.v4.content.ModernAsyncTask: boolean cancel(boolean)> -> <android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()>
ignoring: <android.support.v4.content.ModernAsyncTask: void <init>()> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void <init>(android.support.v4.content.AsyncTaskLoader)>
ignoring: <java.util.concurrent.CountDownLatch: void <init>(int)> -> <android.support.v4.content.AsyncTaskLoader$LoadTask: void <init>(android.support.v4.content.AsyncTaskLoader)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void retain()>
ignoring: <android.support.v4.content.AsyncTaskLoader: void onCanceled(java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.CursorLoader: void onCanceled(java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.AsyncTaskLoader: void executePendingTask()> -> <android.support.v4.content.AsyncTaskLoader: void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)>
ignoring: <android.support.v4.content.CursorLoader: void onCanceled(android.database.Cursor)> -> <android.support.v4.content.CursorLoader: void onCanceled(java.lang.Object)>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)> -> <android.support.v4.content.Loader: void deliverResult(java.lang.Object)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.util.Log: int v(java.lang.String,java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)> -> <android.support.v4.content.CursorLoader: void deliverResult(java.lang.Object)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ComponentName: android.content.ComponentName clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.SparseArray: android.util.SparseArray clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Notification: android.app.Notification clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.RemoteViews: android.widget.RemoteViews clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Notification$Action: android.app.Notification$Action clone()>
ignoring: <java.lang.Object: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.lang.Object: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.Locale: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.Date: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.content.Intent: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.content.ComponentName: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.os.Bundle: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.util.SparseArray: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.util.SparseBooleanArray: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.animation.PropertyValuesHolder: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.app.Notification: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.widget.RemoteViews: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.app.Notification$Action: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.support.v4.util.LongSparseArray: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.lang.Enum: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.HashMap: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.animation.ValueAnimator: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.view.animation.Animation: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.view.animation.AnimationSet: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.Hashtable: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.ArrayList: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.lang.Object: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.Locale: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.Date: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.content.Intent: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.content.ComponentName: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.os.Bundle: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.util.SparseArray: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.util.SparseBooleanArray: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.animation.PropertyValuesHolder: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.app.Notification: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.widget.RemoteViews: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.app.Notification$Action: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.support.v4.util.LongSparseArray: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.lang.Enum: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.HashMap: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.animation.ValueAnimator: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.view.animation.Animation: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <android.view.animation.AnimationSet: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.Hashtable: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.util.ArrayList: java.lang.Object clone()> -> <android.support.v4.util.LongSparseArray: android.support.v4.util.LongSparseArray clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.animation.ValueAnimator: android.animation.ValueAnimator clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.Animation: android.view.animation.Animation clone()>
ignoring: <android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()> -> <android.view.animation.AnimationSet: android.view.animation.Animation clone()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>
ignoring: <java.lang.Object: void <init>()> -> <android.util.SparseArray: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.SparseArray: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void saveHierarchyState(android.util.SparseArray)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.SparseArray: int size()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.SparseArray: void clear()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)> -> <android.support.v4.app.FragmentActivity: void invalidateSupportFragmentIndex(int)>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doDestroy()> -> <android.support.v4.app.FragmentActivity: void invalidateSupportFragmentIndex(int)>
ignoring: <android.support.v4.util.SparseArrayCompat: void remove(int)> -> <android.support.v4.app.FragmentActivity: void invalidateSupportFragmentIndex(int)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
ignoring: <android.support.v4.app.DialogFragment: int getTheme()> -> <android.support.v4.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
ignoring: <android.app.Dialog: void <init>(android.content.Context,int)> -> <android.support.v4.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: android.content.Context getContext()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: android.view.Window getWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.Window: void addFlags(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: boolean requestWindowFeature(int)>
ignoring: <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.FrameLayout: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.FrameLayout: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
ignoring: <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.LinearLayout: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.LinearLayout: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void setId(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.LinearLayout: void setOrientation(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.LinearLayout: void setGravity(int)>
ignoring: <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.TextView: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void setGravity(int)>
ignoring: <android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.ListView: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>
ignoring: <android.support.v4.app.Fragment: android.view.View getView()> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.support.v4.app.ListFragment: void setListAdapter(android.widget.ListAdapter)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.os.Handler: boolean post(java.lang.Runnable)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.view.View: android.view.View findViewById(int)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.view.View: android.view.View findViewById(int)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.view.View: android.view.View findViewById(int)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.view.View: android.view.View findViewById(int)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.view.View: android.view.View findViewById(int)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.widget.AdapterView: void setEmptyView(android.view.View)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.widget.AdapterView: void setEmptyView(android.view.View)> -> <android.support.v4.app.ListFragment: void ensureList()>
ignoring: <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void setContentView(android.view.View)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void setOwnerActivity(android.app.Activity)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void setCancelable(boolean)>
ignoring: <android.app.Dialog$2: void <init>(android.app.Dialog,android.content.DialogInterface$OnCancelListener)> -> <android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)>
ignoring: <android.app.Dialog$3: void <init>(android.app.Dialog,android.content.DialogInterface$OnDismissListener)> -> <android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void restoreHierarchyState(android.util.SparseArray)>
ignoring: <android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean)> -> <android.support.v4.app.Fragment: void onStart()>
ignoring: <android.support.v4.app.LoaderManagerImpl: void doStart()> -> <android.support.v4.app.Fragment: void onStart()>
ignoring: <android.support.v4.app.Fragment: void onStart()> -> <android.support.v4.app.DialogFragment: void onStart()>
ignoring: <android.app.Dialog: void show()> -> <android.support.v4.app.DialogFragment: void onStart()>
ignoring: <android.support.v4.app.Fragment: void onStop()> -> <android.support.v4.app.DialogFragment: void onStop()>
ignoring: <android.app.Dialog: void hide()> -> <android.support.v4.app.DialogFragment: void onStop()>
ignoring: <android.support.v4.app.Fragment: void onDestroyView()> -> <android.support.v4.app.DialogFragment: void onDestroyView()>
ignoring: <android.app.Dialog: void dismiss()> -> <android.support.v4.app.DialogFragment: void onDestroyView()>
ignoring: <android.os.Handler: void removeCallbacks(java.lang.Runnable)> -> <android.support.v4.app.ListFragment: void onDestroyView()>
ignoring: <android.support.v4.app.Fragment: void onDestroyView()> -> <android.support.v4.app.ListFragment: void onDestroyView()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void doReportNextStart()>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void doReportNextStart()>
ignoring: <java.lang.RuntimeException: void <init>()> -> <android.util.AndroidRuntimeException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.AndroidRuntimeException: void <init>(java.lang.String)>
ignoring: <android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)> -> <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup$MarginLayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
ignoring: <java.lang.Object: void <init>()> -> <android.view.animation.Animation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.Animation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.Animation: void finalize()>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.SmsMessage: java.lang.String getMessageBody()>
ignoring: <java.lang.String: int length()> -> <org.darpa.smsreminder.AlarmContent: boolean comparePhoneNumbers(java.lang.String,java.lang.String,int)>
ignoring: <java.lang.String: java.lang.String substring(int)> -> <org.darpa.smsreminder.AlarmContent: boolean comparePhoneNumbers(java.lang.String,java.lang.String,int)>
ignoring: <java.lang.String: int length()> -> <org.darpa.smsreminder.AlarmContent: boolean comparePhoneNumbers(java.lang.String,java.lang.String,int)>
ignoring: <java.lang.String: java.lang.String substring(int)> -> <org.darpa.smsreminder.AlarmContent: boolean comparePhoneNumbers(java.lang.String,java.lang.String,int)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.darpa.smsreminder.AlarmContent: boolean comparePhoneNumbers(java.lang.String,java.lang.String,int)>
ignoring: <java.io.OutputStream: void <init>()> -> <java.io.FileOutputStream: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.FileOutputStream: void finalize()>
ignoring: <java.lang.Object: void <init>()> -> <java.io.InputStream: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.InputStream: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.app.FragmentTransaction: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.util.AbstractMap: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractMap: void <init>()>
ignoring: <java.lang.Exception: void <init>()> -> <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
ignoring: <android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)> -> <android.support.v4.content.CursorLoader: void onStartLoading()>
ignoring: <android.support.v4.content.Loader: boolean takeContentChanged()> -> <android.support.v4.content.CursorLoader: void onStartLoading()>
ignoring: <android.support.v4.content.Loader: void forceLoad()> -> <android.support.v4.content.CursorLoader: void onStartLoading()>
ignoring: <android.support.v4.content.Loader: void onStopLoading()> -> <android.support.v4.content.Loader: void stopLoading()>
ignoring: <android.support.v4.content.CursorLoader: void onStopLoading()> -> <android.support.v4.content.Loader: void stopLoading()>
ignoring: <java.lang.StringBuilder: void <init>(int)> -> <android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.content.Loader: java.lang.String dataToString(java.lang.Object)>
ignoring: <android.support.v4.content.Loader: void onReset()> -> <android.support.v4.content.CursorLoader: void onReset()>
ignoring: <android.support.v4.content.CursorLoader: void onStopLoading()> -> <android.support.v4.content.CursorLoader: void onReset()>
ignoring: <android.test.mock.MockCursor: boolean isClosed()> -> <android.support.v4.content.CursorLoader: void onReset()>
ignoring: <android.test.mock.MockCursor: void close()> -> <android.support.v4.content.CursorLoader: void onReset()>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.SparseArrayCompat: int keyAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.SparseArrayCompat: int size()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object valueAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.SparseArrayCompat: int keyAt(int)> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.Integer: java.lang.String toHexString(int)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.System: int identityHashCode(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Class: java.lang.String getSimpleName()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: int lastIndexOf(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: android.os.Bundle onSaveInstanceState()>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.view.ViewPager$ItemInfo: void <init>()>
ignoring: <android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)> -> <android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>
ignoring: <java.lang.UnsupportedOperationException: void <init>(java.lang.String)> -> <android.support.v4.view.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.EdgeEffect: void onPull(float)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void offsetLeftAndRight(int)>
ignoring: <android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)> -> <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)>
ignoring: <android.support.v4.view.PagerTabStrip: void updateTextPositions(int,float,boolean)> -> <android.support.v4.view.PagerTitleStrip$PageListener: void onPageScrolled(int,float,int)>
ignoring: <android.os.Handler$8: void <init>(android.os.Handler,java.lang.Runnable)> -> <android.os.Handler: boolean post(java.lang.Runnable)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: int size()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: java.lang.Object remove(int)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.Integer: int intValue()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> -> <android.support.v4.app.FragmentManagerImpl: int allocBackStackIndex(android.support.v4.app.BackStackRecord)>
ignoring: <java.lang.Object: void <init>()> -> <java.util.ArrayList$ArrayListIterator: void <init>(java.util.ArrayList)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.view.View$1: void <init>(android.view.View)>
ignoring: <java.lang.Object: void <init>()> -> <android.net.Uri: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.net.Uri: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.ContentProvider: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentProvider: void <init>()>
ignoring: <java.util.concurrent.FutureTask: boolean cancel(boolean)> -> <android.support.v4.content.ModernAsyncTask: boolean cancel(boolean)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.content.ModernAsyncTask: void <init>()>
ignoring: <java.util.concurrent.atomic.AtomicBoolean: void <init>()> -> <android.support.v4.content.ModernAsyncTask: void <init>()>
ignoring: <android.support.v4.content.ModernAsyncTask$2: void <init>(android.support.v4.content.ModernAsyncTask)> -> <android.support.v4.content.ModernAsyncTask: void <init>()>
ignoring: <android.support.v4.content.ModernAsyncTask$3: void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)> -> <android.support.v4.content.ModernAsyncTask: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.util.concurrent.CountDownLatch: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.CountDownLatch: void <init>(int)>
ignoring: <android.test.mock.MockCursor: boolean isClosed()> -> <android.support.v4.content.CursorLoader: void onCanceled(android.database.Cursor)>
ignoring: <android.test.mock.MockCursor: void close()> -> <android.support.v4.content.CursorLoader: void onCanceled(android.database.Cursor)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void destroy()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.util.SparseArrayCompat: void remove(int)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.app.LoaderManagerImpl: boolean hasRunningLoaders()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.app.FragmentManagerImpl: void startPendingDeferredFragments()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(android.support.v4.content.Loader,java.lang.Object)>
ignoring: <android.support.v4.content.Loader: boolean isReset()> -> <android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)>
ignoring: <android.support.v4.content.Loader: boolean isStarted()> -> <android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)>
ignoring: <android.support.v4.content.Loader: void deliverResult(java.lang.Object)> -> <android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)>
ignoring: <android.test.mock.MockCursor: void close()> -> <android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)>
ignoring: <android.test.mock.MockCursor: boolean isClosed()> -> <android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)>
ignoring: <android.test.mock.MockCursor: void close()> -> <android.support.v4.content.CursorLoader: void deliverResult(android.database.Cursor)>
ignoring: <android.support.v4.util.SparseArrayCompat: void delete(int)> -> <android.support.v4.util.SparseArrayCompat: void remove(int)>
ignoring: <android.support.v4.util.SparseArrayCompat: int binarySearch(int[],int,int,int)> -> <android.support.v4.util.SparseArrayCompat: void delete(int)>
ignoring: <java.lang.Object: void <init>()> -> <android.app.Dialog: void <init>(android.content.Context,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void <init>(android.content.Context,int)>
ignoring: <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.lang.Object: void <init>()> -> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <android.widget.ListView: void setAdapter(android.widget.ListAdapter)> -> <android.support.v4.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>
ignoring: <android.support.v4.app.Fragment: android.view.View getView()> -> <android.support.v4.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>
ignoring: <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)> -> <android.support.v4.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>
ignoring: <android.view.View: android.os.IBinder getWindowToken()> -> <android.support.v4.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>
ignoring: <android.support.v4.app.ListFragment: void ensureList()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <java.lang.IllegalStateException: void <init>(java.lang.String)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void startAnimation(android.view.animation.Animation)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void startAnimation(android.view.animation.Animation)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.widget.ProgressBar: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.widget.ImageView: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.widget.ProgressBar: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.widget.ImageView: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void clearAnimation()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void clearAnimation()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void startAnimation(android.view.animation.Animation)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void startAnimation(android.view.animation.Animation)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.widget.ProgressBar: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.widget.ImageView: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.widget.ProgressBar: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.widget.ImageView: void setVisibility(int)> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void clearAnimation()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <android.view.View: void clearAnimation()> -> <android.support.v4.app.ListFragment: void setListShown(boolean,boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AdapterView: void setEmptyView(android.view.View)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.app.Dialog$2: void <init>(android.app.Dialog,android.content.DialogInterface$OnCancelListener)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.app.Dialog$3: void <init>(android.app.Dialog,android.content.DialogInterface$OnDismissListener)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void show()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void hide()>
ignoring: <java.lang.Object: void <init>()> -> <android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
ignoring: <java.lang.Object: void <init>()> -> <java.io.OutputStream: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.OutputStream: void <init>()>
ignoring: <android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()> -> <android.support.v4.content.CursorLoader: void onStopLoading()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: void close()>
ignoring: <android.support.v4.util.SparseArrayCompat: void gc()> -> <android.support.v4.util.SparseArrayCompat: int keyAt(int)>
ignoring: <java.lang.StringBuilder: void <init>(int)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: void <init>()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.Arrays: java.lang.String toString(java.lang.Object[])> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.util.Arrays: java.lang.String toString(java.lang.Object[])> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.UnsupportedOperationException: void <init>(java.lang.String)> -> <android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)>
ignoring: <java.lang.RuntimeException: void <init>()> -> <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.UnsupportedOperationException: void <init>(java.lang.String)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.os.Handler$8: void <init>(android.os.Handler,java.lang.Runnable)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.FutureTask: boolean cancel(boolean)>
ignoring: <java.lang.Object: void <init>()> -> <java.util.concurrent.atomic.AtomicBoolean: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.atomic.AtomicBoolean: void <init>()>
ignoring: <android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>(android.support.v4.content.ModernAsyncTask$1)> -> <android.support.v4.content.ModernAsyncTask$2: void <init>(android.support.v4.content.ModernAsyncTask)>
ignoring: <java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)> -> <android.support.v4.content.ModernAsyncTask$3: void <init>(android.support.v4.content.ModernAsyncTask,java.util.concurrent.Callable)>
ignoring: <android.support.v4.util.SparseArrayCompat: void put(int,java.lang.Object)> -> <android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)>
ignoring: <android.support.v4.app.LoaderManagerImpl$LoaderInfo: void start()> -> <android.support.v4.app.LoaderManagerImpl: void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo)>
ignoring: <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(int)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(boolean)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(java.lang.Object)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.os.SystemClock: long uptimeMillis()> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)> -> <android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
ignoring: <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)> -> <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>
ignoring: <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)> -> <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
ignoring: <android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int printField(char[],int,char,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.util.TimeUtils: int accumField(int,int,boolean,int)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <java.lang.Math: double floor(double)> -> <android.support.v4.util.TimeUtils: int formatDurationLocked(long,int)>
ignoring: <android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>()> -> <android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>(android.support.v4.content.ModernAsyncTask$1)>
ignoring: <java.lang.Object: void <init>()> -> <java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>
ignoring: <android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.Object)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println(boolean)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.io.PrintWriter: void println()> -> <android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.util.TimeUtils: void <clinit>()>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
ignoring: <java.lang.String: void <init>(char[],int,int)> -> <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
ignoring: <java.io.PrintWriter: void print(java.lang.String)> -> <android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
ignoring: <java.lang.Object: void <init>()> -> <android.support.v4.content.ModernAsyncTask$WorkerRunnable: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.PrintWriter: void println()>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.String: void <init>(char[],int,int)>
SAVING rel chaIM size: 0
LEAVE: base-java
Exclusive time: 00:00:06:957 hh:mm:ss:ms
Inclusive time: 00:00:06:957 hh:mm:ss:ms
ENTER: annot-java at Fri Jan 31 10:59:24 PST 2014
Unsupported annotation type requestLocationUpdates:(Ljava/lang/String;JFLandroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
Unsupported annotation type requestLocationUpdates:(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
Unsupported annotation type requestSingleUpdate:(Ljava/lang/String;Landroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
Unsupported annotation type requestSingleUpdate:(Landroid/location/Criteria;Landroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
Unsupported annotation type addProximityAlert:(DDFJLandroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
SAVING rel ArgArgTransfer size: 183
SAVING rel ArgRetTransfer size: 558
SAVING rel ArgArgFlow size: 147
SAVING dom L size: 42
SAVING rel SrcLabel size: 28
SAVING rel SinkLabel size: 14
SAVING rel InLabelArg size: 37
SAVING rel InLabelRet size: 62
SAVING rel OutLabelArg size: 26
SAVING rel OutLabelRet size: 0
LEAVE: annot-java
Exclusive time: 00:00:00:170 hh:mm:ss:ms
Inclusive time: 00:00:00:170 hh:mm:ss:ms
ENTER: contexts-java at Fri Jan 31 10:59:24 PST 2014
numSCCs: 39
SAVING dom C size: 111
SAVING rel CI size: 55
SAVING rel CC size: 110
SAVING rel CH size: 55
SAVING rel CM size: 39
LEAVE: contexts-java
Exclusive time: 00:00:00:237 hh:mm:ss:ms
Inclusive time: 00:00:00:237 hh:mm:ss:ms
ENTER: context-label-java at Fri Jan 31 10:59:24 PST 2014
SAVING dom CL size: 0
SAVING rel CCL size: 0
SAVING rel LCL size: 0
LEAVE: context-label-java
Exclusive time: 00:00:00:124 hh:mm:ss:ms
Inclusive time: 00:00:00:124 hh:mm:ss:ms
ENTER: pre-dlog at Fri Jan 31 10:59:24 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Setting variable ordering to L0_Z0_I0xM0_CL0_V0xV1_U0xU1, done.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/chaIM.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/LCL.bdd is zero.
Stratifying: 
list1:
  list2:
    srcCtxtLabel(cl:CL0) :- LCL(l:L0,cl:CL0), SrcLabel(l:L0).
    sinkCtxtLabel(cl:CL0) :- LCL(l:L0,cl:CL0), SinkLabel(l:L0).
    returnPrim(u:U1,v:U0,i:I0) :- chaIM(i:I0,m:M0), MmethPrimRet(m:M0,z:Z0,v:U0), IinvkPrimRet(i:I0,z:Z0,u:U1).
    param(u:V0,v:V1,i:I0) :- chaIM(i:I0,m:M0), MmethArg(m:M0,z:Z0,u:V0), IinvkArg(i:I0,z:Z0,v:V1).
    return(u:V1,v:V0,i:I0) :- chaIM(i:I0,m:M0), MmethRet(m:M0,z:Z0,v:V0), IinvkRet(i:I0,z:Z0,u:V1).
    paramPrim(u:U0,v:U1,i:I0) :- chaIM(i:I0,m:M0), MmethPrimArg(m:M0,z:Z0,u:U0), IinvkPrimArg(i:I0,z:Z0,v:U1).
done. (11 ms)
Solving: 
done. (1 ms)
SOLVE_TIME=1
MAX_NODES=499979
FINAL_NODES=149237
Rule param(u:V0,v:V1,i:I0) :- chaIM(i:I0,m:M0), MmethArg(m:M0,z:Z0,u:V0), IinvkArg(i:I0,z:Z0,v:V1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule return(u:V1,v:V0,i:I0) :- chaIM(i:I0,m:M0), MmethRet(m:M0,z:Z0,v:V0), IinvkRet(i:I0,z:Z0,u:V1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule paramPrim(u:U0,v:U1,i:I0) :- chaIM(i:I0,m:M0), MmethPrimArg(m:M0,z:Z0,u:U0), IinvkPrimArg(i:I0,z:Z0,v:U1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule returnPrim(u:U1,v:U0,i:I0) :- chaIM(i:I0,m:M0), MmethPrimRet(m:M0,z:Z0,v:U0), IinvkPrimRet(i:I0,z:Z0,u:U1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule srcCtxtLabel(cl:CL0) :- LCL(l:L0,cl:CL0), SrcLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sinkCtxtLabel(cl:CL0) :- LCL(l:L0,cl:CL0), SinkLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Relation param: 0 nodes, 0.0 elements ((none))
Relation return: 0 nodes, 0.0 elements ((none))
Relation paramPrim: 0 nodes, 0.0 elements ((none))
Relation returnPrim: 0 nodes, 0.0 elements ((none))
Relation srcCtxtLabel: 0 nodes, 0.0 elements ((none))
Relation sinkCtxtLabel: 0 nodes, 0.0 elements ((none))
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pre.dlog '
LEAVE: pre-dlog
Exclusive time: 00:00:00:410 hh:mm:ss:ms
Inclusive time: 00:00:00:410 hh:mm:ss:ms
ENTER: typefilter-dlog at Fri Jan 31 10:59:25 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/typefilter.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Setting variable ordering to V0_T0_H0_C0, done.
Stratifying: 
list1:
  list2:
    typeFilter(v:V0,o:C0) :- VT(v:V0,t:T0), HTFilter(h:H0,t:T0), CH(o:C0,h:H0).
done. (7 ms)
Solving: 
done. (19 ms)
SOLVE_TIME=19
MAX_NODES=499979
FINAL_NODES=138738
Rule typeFilter(v:V0,o:C0) :- VT(v:V0,t:T0), HTFilter(h:H0,t:T0), CH(o:C0,h:H0).
   Updates: 1
   Time: 17 ms
   Longest Iteration: 0 (0 ms)
Relation typeFilter: 2071 nodes, 26627.0 elements (V0,C0)
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/typefilter.dlog '
LEAVE: typefilter-dlog
Exclusive time: 00:00:00:379 hh:mm:ss:ms
Inclusive time: 00:00:00:379 hh:mm:ss:ms
ENTER: pt-dlog at Fri Jan 31 10:59:25 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Setting variable ordering to M0_C0xC1xC2_V0xV1_H0xF0_I0, done.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/param.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/return.bdd is zero.
Stratifying: 
list1:
  list2:
    pt(c:C0,v:V0,o:C1) :- Alloc(v:V0,h:H0), MV(m:M0,v:V0), CM(c:C0,m:M0), CC(c:C0,o:C1), CH(o:C1,h:H0).
    loop3:
      loop5:
        loop7:
          loop9:
            loop11:
              loop13:
                pt(c:C0,v:V1,o:C1) :- pt(c:C0,u:V0,o:C1), Assign(v:V1,u:V0), typeFilter(v:V1,o:C1).
              pt(d:C2,u:V1,o:C1) :- pt(c:C0,v:V0,o:C1), param(u:V1,v:V0,i:I0), typeFilter(u:V1,o:C1), CC(c:C0,d:C2), CI(d:C2,i:I0).
            pt(c:C0,y:V1,o2:C2) :- pt(c:C0,x:V0,o1:C1), Load(y:V1,x:V0,f:F0), fpt(o1:C1,f:F0,o2:C2).
          pt(c:C2,u:V1,o:C1) :- pt(d:C0,v:V0,o:C1), return(u:V1,v:V0,i:I0), CI(d:C0,i:I0), CC(c:C2,d:C0), typeFilter(u:V1,o:C1).
        fpt(o1:C2,f:F0,o2:C1) :- pt(c:C0,v:V0,o2:C1), Store(u:V1,f:F0,v:V0), pt(c:C0,u:V1,o1:C2).
      fptStat(f:F0,o:C1) :- pt(_:C0,v:V0,o:C1), StoreStat(f:F0,v:V0).
      pt(c:C1,y:V0,o:C0) :- LoadStat(y:V0,f:F0), fptStat(f:F0,o:C0), MV(m:M0,y:V0), CM(c:C1,m:M0).
done. (18 ms)
Solving: 
done. (74 ms)
SOLVE_TIME=74
MAX_NODES=499979
FINAL_NODES=219892
Rule pt(d:C2,u:V1,o:C1) :- pt(c:C0,v:V0,o:C1), param(u:V1,v:V0,i:I0), typeFilter(u:V1,o:C1), CC(c:C0,d:C2), CI(d:C2,i:I0).
   Updates: 4
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C2,u:V1,o:C1) :- pt(d:C0,v:V0,o:C1), return(u:V1,v:V0,i:I0), CI(d:C0,i:I0), CC(c:C2,d:C0), typeFilter(u:V1,o:C1).
   Updates: 4
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule fptStat(f:F0,o:C1) :- pt(_:C0,v:V0,o:C1), StoreStat(f:F0,v:V0).
   Updates: 3
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule fpt(o1:C2,f:F0,o2:C1) :- pt(c:C0,v:V0,o2:C1), Store(u:V1,f:F0,v:V0), pt(c:C0,u:V1,o1:C2).
   Updates: 4
   Time: 5 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C0,y:V1,o2:C2) :- pt(c:C0,x:V0,o1:C1), Load(y:V1,x:V0,f:F0), fpt(o1:C1,f:F0,o2:C2).
   Updates: 4
   Time: 7 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C0,v:V1,o:C1) :- pt(c:C0,u:V0,o:C1), Assign(v:V1,u:V0), typeFilter(v:V1,o:C1).
   Updates: 4
   Time: 11 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C1,y:V0,o:C0) :- LoadStat(y:V0,f:F0), fptStat(f:F0,o:C0), MV(m:M0,y:V0), CM(c:C1,m:M0).
   Updates: 3
   Time: 16 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C0,v:V0,o:C1) :- Alloc(v:V0,h:H0), MV(m:M0,v:V0), CM(c:C0,m:M0), CC(c:C0,o:C1), CH(o:C1,h:H0).
   Updates: 1
   Time: 33 ms
   Longest Iteration: 0 (0 ms)
Relation pt: 685 nodes, 73.0 elements (V0,C0,C1)
Relation fpt: 35 nodes, 10.0 elements (F0,C0,C1)
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/pt.dlog '
LEAVE: pt-dlog
Exclusive time: 00:00:00:520 hh:mm:ss:ms
Inclusive time: 00:00:00:520 hh:mm:ss:ms
ENTER: taint-lim-dlog at Fri Jan 31 10:59:26 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Adding missing domain "C2" to bddvarorder.
Setting variable ordering to L0_Z0xZ1_M0_CL0xCL1_C0xC2xC1_V0xV1_U0xU1_F0_I0, done.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/paramPrim.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/returnPrim.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/CCL.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/LCL.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/sinkCtxtLabel.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/srcCtxtLabel.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/OutLabelRet.bdd is zero.
Stratifying: 
list1:
  list2:
    transferRefRef(u:V0,v:V1) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethArg(m:M0,z1:Z1,v:V1).
    flowRefRef(u:V0,v:V1) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethArg(m:M0,z1:Z1,v:V1).
    varInLabel(v:V0,l:L0) :- InLabelArg(l:L0,m:M0,z:Z0), MmethArg(m:M0,z:Z0,v:V0).
    varOutLabel(v:V0,l:L0) :- OutLabelArg(l:L0,m:M0,z:Z0), MmethArg(m:M0,z:Z0,v:V0).
    transferRefRef(u:V0,v:V1) :- ArgRetTransfer(m:M0,z:Z0), MmethArg(m:M0,z:Z0,u:V0), MmethRet(m:M0,_:Z1,v:V1).
    transferObjRef(o:C1,c:C0,v:V1) :- transferRefRef(u:V0,v:V1), pt(c:C0,u:V0,o:C1).
    varOutLabel(v:V0,l:L0) :- OutLabelRet(l:L0,m:M0), MmethRet(m:M0,_:Z0,v:V0).
    sink(o:C1,cl:CL0) :- varOutLabel(v:V0,l:L0), MV(m:M0,v:V0), CM(c:C0,m:M0), pt(c:C0,v:V0,o:C1), CCL(c:C0,cl:CL0), LCL(l:L0,cl:CL0).
    varInLabel(v:V0,l:L0) :- InLabelRet(l:L0,m:M0), MmethRet(m:M0,_:Z0,v:V0).
    labelIn(o:C1,cl:CL0) :- varInLabel(v:V0,l:L0), MV(m:M0,v:V0), CM(c:C0,m:M0), pt(c:C0,v:V0,o:C1), CCL(c:C0,cl:CL0), LCL(l:L0,cl:CL0).
    transferPrimRef(u:U0,v:V0) :- ArgRetTransfer(m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,u:U0), MmethRet(m:M0,_:Z1,v:V0).
    transferPrimPrim(u:U0,v:U1) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethPrimArg(m:M0,z1:Z1,v:U1).
    transferPrimRef(u:U0,v:V0) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethArg(m:M0,z1:Z1,v:V0).
    transferRefPrim(u:V0,v:U0) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethPrimArg(m:M0,z1:Z1,v:U0).
    varOutLabelPrim(v:U0,l:L0) :- OutLabelArg(l:L0,m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,v:U0).
    flowPrimRef(u:U0,v:V0) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethArg(m:M0,z1:Z1,v:V0).
    varInLabelPrim(v:U0,l:L0) :- InLabelArg(l:L0,m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,v:U0).
    flowPrimPrim(u:U0,v:U1) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethPrimArg(m:M0,z1:Z1,v:U1).
    flowRefPrim(u:V0,v:U0) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethPrimArg(m:M0,z1:Z1,v:U0).
    transferPrimPrim(u:U0,v:U1) :- ArgRetTransfer(m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,u:U0), MmethPrimRet(m:M0,_:Z1,v:U1).
    transferRefPrim(u:V0,v:U0) :- ArgRetTransfer(m:M0,z:Z0), MmethArg(m:M0,z:Z0,u:V0), MmethPrimRet(m:M0,_:Z1,v:U0).
    transferObjPrim(o:C1,c:C0,v:U0) :- transferRefPrim(u:V0,v:U0), pt(c:C0,u:V0,o:C1).
    varOutLabelPrim(v:U0,l:L0) :- OutLabelRet(l:L0,m:M0), MmethPrimRet(m:M0,_:Z0,v:U0).
    sinkPrim(c:C0,u:U0,cl:CL0) :- varOutLabelPrim(u:U0,l:L0), CM(c:C0,m:M0), MU(m:M0,u:U0), LCL(l:L0,cl:CL0), CCL(c:C0,cl:CL0).
    varInLabelPrim(v:U0,l:L0) :- InLabelRet(l:L0,m:M0), MmethPrimRet(m:M0,_:Z0,v:U0).
    labelPrim(c:C0,v:U0,cl:CL0) :- varInLabelPrim(v:U0,l:L0), CM(c:C0,m:M0), MU(m:M0,v:U0), LCL(l:L0,cl:CL0), CCL(c:C0,cl:CL0).
    loop3:
      transferObjPrim(o2:C2,c:C1,v:U0) :- transferObjPrim(o1:C0,c:C1,v:U0), fpt(o1:C0,0:F0,o2:C2).
    loop5:
      transferObjRef(o2:C2,c:C1,v:V0) :- transferObjRef(o1:C0,c:C1,v:V0), fpt(o1:C0,0:F0,o2:C2).
    loop7:
      labelIn(o2:C1,l:CL0) :- labelIn(o1:C0,l:CL0), fpt(o1:C0,_:F0,o2:C1).
    label(o:C0,l:CL0) :- labelIn(o:C0,l:CL0).
    labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,_:F0), labelIn(o:C0,l:CL0), pt(c:C1,x:V0,o:C0).
    loop9:
      loop11:
        loop13:
          loop15:
            loop17:
              loop19:
                loop21:
                  loop23:
                    loop25:
                      labelPrim(c:C1,v:U0,l:CL0) :- label(o:C0,l:CL0), transferObjPrim(o:C0,c:C1,v:U0).
                      loop27:
                        loop29:
                          loop31:
                            labelPrim(d:C1,u:U1,l:CL0) :- labelPrim(c:C0,v:U0,l:CL0), paramPrim(u:U1,v:U0,i:I0), CC(c:C0,d:C1), CI(d:C1,i:I0).
                          labelXferOut(o:C1,l:CL0) :- labelPrim(c:C0,u:U0,l:CL0), transferPrimRef(u:U0,v:V0), pt(c:C0,v:V0,o:C1).
                          labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,0:F0), labelXferOut(o:C0,l:CL0), pt(c:C1,x:V0,o:C0).
                        labelXferOut(o2:C1,l:CL0) :- labelXferOut(o1:C0,l:CL0), fpt(o1:C0,0:F0,o2:C1).
                      label(o:C0,l:CL0) :- labelXferOut(o:C0,l:CL0).
                    labelXferOut(o2:C2,l:CL0) :- label(o1:C0,l:CL0), transferObjRef(o1:C0,c:C1,v:V0), pt(c:C1,v:V0,o2:C2).
                  labelPrim(c:C1,u:U1,l:CL0) :- labelPrim(d:C0,v:U0,l:CL0), returnPrim(u:U1,v:U0,i:I0), CI(d:C0,i:I0), CC(c:C1,d:C0).
                labelPrim(c:C0,v:U1,l:CL0) :- labelPrim(c:C0,u:U0,l:CL0), transferPrimPrim(u:U0,v:U1).
              labelPrim(c:C0,v:U0,l:CL0) :- AssignPrim(v:U0,u:U1), labelPrim(c:C0,u:U1,l:CL0).
            labelPrimFldStat(f:F0,l:CL0) :- StoreStatPrim(f:F0,v:U0), labelPrim(_:C0,v:U0,l:CL0).
            labelPrim(c:C0,y:U0,l:CL0) :- LoadStatPrim(y:U0,f:F0), labelPrimFldStat(f:F0,l:CL0), MU(m:M0,y:U0), CM(c:C0,m:M0).
          labelPrimFld(o:C1,f:F0,l:CL0) :- labelPrim(c:C0,v:U0,l:CL0), StorePrim(u:V0,f:F0,v:U0), pt(c:C0,u:V0,o:C1).
          labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,f:F0), labelPrimFld(o:C0,f:F0,l:CL0), pt(c:C1,x:V0,o:C0).
        labelPrim(c:C1,v:U0,l:CL0) :- labelPrimFld(o:C0,0:F0,l:CL0), transferObjPrim(o:C0,c:C1,v:U0).
      labelXferOut(o2:C2,l:CL0) :- labelPrimFld(o1:C0,0:F0,l:CL0), transferObjRef(o1:C0,c:C1,v:V0), pt(c:C1,v:V0,o2:C2).
    sinkPrim(c:C0,u:U0,l:CL0) :- flowPrimPrim(u:U0,v:U1), labelPrim(c:C0,v:U1,l:CL0), sinkCtxtLabel(l:CL0).
    sink(o:C1,l:CL0) :- pt(c:C0,u:V0,o:C1), flowRefPrim(u:V0,v:U0), labelPrim(c:C0,v:U0,l:CL0), sinkCtxtLabel(l:CL0).
    labelRef(c:C0,v:V0,l:CL0) :- pt(c:C0,v:V0,o:C1), label(o:C1,l:CL0).
    sinkPrim(c:C0,u:U0,l:CL0) :- flowPrimRef(u:U0,v:V0), labelRef(c:C0,v:V0,l:CL0), sinkCtxtLabel(l:CL0).
    flow(src:CL1,sink:CL0) :- sinkPrim(d:C0,u:U0,sink:CL0), labelPrim(d:C0,u:U0,src:CL1), srcCtxtLabel(src:CL1).
    sink(o:C1,l:CL0) :- pt(c:C0,u:V0,o:C1), flowRefRef(u:V0,v:V1), labelRef(c:C0,v:V1,l:CL0), sinkCtxtLabel(l:CL0).
    loop33:
      sink(o2:C1,l:CL0) :- sink(o1:C0,l:CL0), fpt(o1:C0,_:F0,o2:C1).
    flow(src:CL1,sink:CL0) :- sink(o:C0,sink:CL0), label(o:C0,src:CL1), srcCtxtLabel(src:CL1).
    flow(src:CL1,sink:CL0) :- sink(o:C0,sink:CL0), labelPrimFld(o:C0,_:F0,src:CL1), srcCtxtLabel(src:CL1).
done. (61 ms)
Solving: 
done. (47 ms)
SOLVE_TIME=47
MAX_NODES=499979
FINAL_NODES=124364
Rule varInLabel(v:V0,l:L0) :- InLabelRet(l:L0,m:M0), MmethRet(m:M0,_:Z0,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varInLabel(v:V0,l:L0) :- InLabelArg(l:L0,m:M0,z:Z0), MmethArg(m:M0,z:Z0,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varInLabelPrim(v:U0,l:L0) :- InLabelRet(l:L0,m:M0), MmethPrimRet(m:M0,_:Z0,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varInLabelPrim(v:U0,l:L0) :- InLabelArg(l:L0,m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varOutLabel(v:V0,l:L0) :- OutLabelRet(l:L0,m:M0), MmethRet(m:M0,_:Z0,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varOutLabel(v:V0,l:L0) :- OutLabelArg(l:L0,m:M0,z:Z0), MmethArg(m:M0,z:Z0,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varOutLabelPrim(v:U0,l:L0) :- OutLabelRet(l:L0,m:M0), MmethPrimRet(m:M0,_:Z0,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varOutLabelPrim(v:U0,l:L0) :- OutLabelArg(l:L0,m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferRefPrim(u:V0,v:U0) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethPrimArg(m:M0,z1:Z1,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferPrimRef(u:U0,v:V0) :- ArgRetTransfer(m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,u:U0), MmethRet(m:M0,_:Z1,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferPrimPrim(u:U0,v:U1) :- ArgRetTransfer(m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,u:U0), MmethPrimRet(m:M0,_:Z1,v:U1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule flowPrimPrim(u:U0,v:U1) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethPrimArg(m:M0,z1:Z1,v:U1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sink(o:C1,cl:CL0) :- varOutLabel(v:V0,l:L0), MV(m:M0,v:V0), CM(c:C0,m:M0), pt(c:C0,v:V0,o:C1), CCL(c:C0,cl:CL0), LCL(l:L0,cl:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sink(o:C1,l:CL0) :- pt(c:C0,u:V0,o:C1), flowRefRef(u:V0,v:V1), labelRef(c:C0,v:V1,l:CL0), sinkCtxtLabel(l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sink(o:C1,l:CL0) :- pt(c:C0,u:V0,o:C1), flowRefPrim(u:V0,v:U0), labelPrim(c:C0,v:U0,l:CL0), sinkCtxtLabel(l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sink(o2:C1,l:CL0) :- sink(o1:C0,l:CL0), fpt(o1:C0,_:F0,o2:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sinkPrim(c:C0,u:U0,cl:CL0) :- varOutLabelPrim(u:U0,l:L0), CM(c:C0,m:M0), MU(m:M0,u:U0), LCL(l:L0,cl:CL0), CCL(c:C0,cl:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sinkPrim(c:C0,u:U0,l:CL0) :- flowPrimRef(u:U0,v:V0), labelRef(c:C0,v:V0,l:CL0), sinkCtxtLabel(l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sinkPrim(c:C0,u:U0,l:CL0) :- flowPrimPrim(u:U0,v:U1), labelPrim(c:C0,v:U1,l:CL0), sinkCtxtLabel(l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferObjRef(o:C1,c:C0,v:V1) :- transferRefRef(u:V0,v:V1), pt(c:C0,u:V0,o:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferObjPrim(o:C1,c:C0,v:U0) :- transferRefPrim(u:V0,v:U0), pt(c:C0,u:V0,o:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferObjRef(o2:C2,c:C1,v:V0) :- transferObjRef(o1:C0,c:C1,v:V0), fpt(o1:C0,0:F0,o2:C2).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferObjPrim(o2:C2,c:C1,v:U0) :- transferObjPrim(o1:C0,c:C1,v:U0), fpt(o1:C0,0:F0,o2:C2).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule flow(src:CL1,sink:CL0) :- sink(o:C0,sink:CL0), label(o:C0,src:CL1), srcCtxtLabel(src:CL1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule flow(src:CL1,sink:CL0) :- sinkPrim(d:C0,u:U0,sink:CL0), labelPrim(d:C0,u:U0,src:CL1), srcCtxtLabel(src:CL1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule flow(src:CL1,sink:CL0) :- sink(o:C0,sink:CL0), labelPrimFld(o:C0,_:F0,src:CL1), srcCtxtLabel(src:CL1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelIn(o:C1,cl:CL0) :- varInLabel(v:V0,l:L0), MV(m:M0,v:V0), CM(c:C0,m:M0), pt(c:C0,v:V0,o:C1), CCL(c:C0,cl:CL0), LCL(l:L0,cl:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelIn(o2:C1,l:CL0) :- labelIn(o1:C0,l:CL0), fpt(o1:C0,_:F0,o2:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule label(o:C0,l:CL0) :- labelIn(o:C0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelXferOut(o2:C2,l:CL0) :- label(o1:C0,l:CL0), transferObjRef(o1:C0,c:C1,v:V0), pt(c:C1,v:V0,o2:C2).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelXferOut(o:C1,l:CL0) :- labelPrim(c:C0,u:U0,l:CL0), transferPrimRef(u:U0,v:V0), pt(c:C0,v:V0,o:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule label(o:C0,l:CL0) :- labelXferOut(o:C0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelXferOut(o2:C2,l:CL0) :- labelPrimFld(o1:C0,0:F0,l:CL0), transferObjRef(o1:C0,c:C1,v:V0), pt(c:C1,v:V0,o2:C2).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelXferOut(o2:C1,l:CL0) :- labelXferOut(o1:C0,l:CL0), fpt(o1:C0,0:F0,o2:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelRef(c:C0,v:V0,l:CL0) :- pt(c:C0,v:V0,o:C1), label(o:C1,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C0,v:U0,cl:CL0) :- varInLabelPrim(v:U0,l:L0), CM(c:C0,m:M0), MU(m:M0,v:U0), LCL(l:L0,cl:CL0), CCL(c:C0,cl:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C0,v:U0,l:CL0) :- AssignPrim(v:U0,u:U1), labelPrim(c:C0,u:U1,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrimFld(o:C1,f:F0,l:CL0) :- labelPrim(c:C0,v:U0,l:CL0), StorePrim(u:V0,f:F0,v:U0), pt(c:C0,u:V0,o:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,f:F0), labelPrimFld(o:C0,f:F0,l:CL0), pt(c:C1,x:V0,o:C0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrimFldStat(f:F0,l:CL0) :- StoreStatPrim(f:F0,v:U0), labelPrim(_:C0,v:U0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C0,y:U0,l:CL0) :- LoadStatPrim(y:U0,f:F0), labelPrimFldStat(f:F0,l:CL0), MU(m:M0,y:U0), CM(c:C0,m:M0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(d:C1,u:U1,l:CL0) :- labelPrim(c:C0,v:U0,l:CL0), paramPrim(u:U1,v:U0,i:I0), CC(c:C0,d:C1), CI(d:C1,i:I0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,u:U1,l:CL0) :- labelPrim(d:C0,v:U0,l:CL0), returnPrim(u:U1,v:U0,i:I0), CI(d:C0,i:I0), CC(c:C1,d:C0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,v:U0,l:CL0) :- label(o:C0,l:CL0), transferObjPrim(o:C0,c:C1,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C0,v:U1,l:CL0) :- labelPrim(c:C0,u:U0,l:CL0), transferPrimPrim(u:U0,v:U1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,v:U0,l:CL0) :- labelPrimFld(o:C0,0:F0,l:CL0), transferObjPrim(o:C0,c:C1,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferRefPrim(u:V0,v:U0) :- ArgRetTransfer(m:M0,z:Z0), MmethArg(m:M0,z:Z0,u:V0), MmethPrimRet(m:M0,_:Z1,v:U0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule flowRefRef(u:V0,v:V1) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethArg(m:M0,z1:Z1,v:V1).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule flowRefPrim(u:V0,v:U0) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethPrimArg(m:M0,z1:Z1,v:U0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule flowPrimRef(u:U0,v:V0) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethArg(m:M0,z1:Z1,v:V0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule transferPrimPrim(u:U0,v:U1) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethPrimArg(m:M0,z1:Z1,v:U1).
   Updates: 1
   Time: 3 ms
   Longest Iteration: 0 (0 ms)
Rule transferRefRef(u:V0,v:V1) :- ArgRetTransfer(m:M0,z:Z0), MmethArg(m:M0,z:Z0,u:V0), MmethRet(m:M0,_:Z1,v:V1).
   Updates: 1
   Time: 4 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,_:F0), labelIn(o:C0,l:CL0), pt(c:C1,x:V0,o:C0).
   Updates: 1
   Time: 5 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,0:F0), labelXferOut(o:C0,l:CL0), pt(c:C1,x:V0,o:C0).
   Updates: 1
   Time: 5 ms
   Longest Iteration: 0 (0 ms)
Rule transferPrimRef(u:U0,v:V0) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethArg(m:M0,z1:Z1,v:V0).
   Updates: 1
   Time: 7 ms
   Longest Iteration: 0 (0 ms)
Rule transferRefRef(u:V0,v:V1) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethArg(m:M0,z1:Z1,v:V1).
   Updates: 1
   Time: 16 ms
   Longest Iteration: 0 (0 ms)
Relation labelRef: 0 nodes, 0.0 elements ((none))
Relation labelPrim: 0 nodes, 0.0 elements ((none))
Relation flow: 0 nodes, 0.0 elements ((none))
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/taint-lim.dlog '
LEAVE: taint-lim-dlog
Exclusive time: 00:00:00:511 hh:mm:ss:ms
Inclusive time: 00:00:00:511 hh:mm:ss:ms
ENTER: jimpleprinter at Fri Jan 31 10:59:26 PST 2014
++stamp.print.allclasses = true
ENTERING JIMPLE PRINTER
EXITING PRINTER
LEAVE: jimpleprinter
Exclusive time: 00:00:06:655 hh:mm:ss:ms
Inclusive time: 00:00:06:655 hh:mm:ss:ms
ENTER: post-dlog at Fri Jan 31 10:59:33 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Eliminating unused domain "C1" from bddvarorder.
Setting variable ordering to Z0_M0_C0_V0_U0_I0_L0_CL0, done.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/chaIM.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/labelRef.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/labelPrim.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb/OutLabelRet.bdd is zero.
Stratifying: 
list1:
  list2:
    out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), OutLabelArg(l:L0,m:M0,_:Z0).
    out_reachableM(m:M0) :- CM(_:C0,m:M0).
    out_taintedPrimVar(l:CL0,v:U0) :- labelPrim(_:C0,v:U0,l:CL0).
    out_taintedStub(m:M0) :- out_taintedPrimVar(_:CL0,v:U0), MmethPrimArg(m:M0,_:Z0,v:U0), Stub(m:M0).
    out_taintedRefVar(l:CL0,v:V0) :- labelRef(_:C0,v:V0,l:CL0).
    out_taintedStub(m:M0) :- out_taintedRefVar(_:CL0,v:V0), MmethArg(m:M0,_:Z0,v:V0), Stub(m:M0).
    out_taintSrc(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelArg(l:L0,m:M0,_:Z0), SrcLabel(l:L0).
    out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), OutLabelRet(l:L0,m:M0).
    out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelArg(l:L0,m:M0,_:Z0), SinkLabel(l:L0).
    out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelRet(l:L0,m:M0), SinkLabel(l:L0).
    out_taintSrc(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelRet(l:L0,m:M0), SrcLabel(l:L0).
done. (13 ms)
Solving: 
done. (4 ms)
SOLVE_TIME=4
MAX_NODES=499979
FINAL_NODES=23241
Rule out_taintedPrimVar(l:CL0,v:U0) :- labelPrim(_:C0,v:U0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintedRefVar(l:CL0,v:V0) :- labelRef(_:C0,v:V0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSrc(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelRet(l:L0,m:M0), SrcLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSrc(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelArg(l:L0,m:M0,_:Z0), SrcLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelArg(l:L0,m:M0,_:Z0), SinkLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelRet(l:L0,m:M0), SinkLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), OutLabelRet(l:L0,m:M0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintedStub(m:M0) :- out_taintedRefVar(_:CL0,v:V0), MmethArg(m:M0,_:Z0,v:V0), Stub(m:M0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintedStub(m:M0) :- out_taintedPrimVar(_:CL0,v:U0), MmethPrimArg(m:M0,_:Z0,v:U0), Stub(m:M0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), OutLabelArg(l:L0,m:M0,_:Z0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule out_reachableM(m:M0) :- CM(_:C0,m:M0).
   Updates: 1
   Time: 2 ms
   Longest Iteration: 0 (0 ms)
Relation out_reachableM: 181 nodes, 39.0 elements (M0)
Relation out_taintedRefVar: 0 nodes, 0.0 elements ((none))
Relation out_taintedPrimVar: 0 nodes, 0.0 elements ((none))
Relation out_taintSrc: 0 nodes, 0.0 elements ((none))
Relation out_taintSink: 0 nodes, 0.0 elements ((none))
Relation out_taintedStub: 0 nodes, 0.0 elements ((none))
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_SMSReminder/chord_output/dlog/post.dlog '
LEAVE: post-dlog
Exclusive time: 00:00:00:348 hh:mm:ss:ms
Inclusive time: 00:00:00:348 hh:mm:ss:ms
ENTER: post-java at Fri Jan 31 10:59:33 PST 2014
SOLVERGENPATHS
No path solver found so no path visualization could be generated.
To visualize paths run with -Dstamp.backend=solvergen
binding org.darpa.smsreminder.SmsAlarmReceiver$1 org.darpa.smsreminder.SmsAlarmReceiver$org.darpa.smsreminder.SmsAlarmReceiver#android.content.BroadcastReceiver#103
binding android.content.IntentFilter org.darpa.smsreminder.SmsAlarmReceiver$org.darpa.smsreminder.SmsAlarmReceiver#android.content.BroadcastReceiver#103
binding org.darpa.smsreminder.SmsAlarmReceiver$2 org.darpa.smsreminder.SmsAlarmReceiver$org.darpa.smsreminder.SmsAlarmReceiver#android.content.BroadcastReceiver#126
binding android.content.IntentFilter org.darpa.smsreminder.SmsAlarmReceiver$org.darpa.smsreminder.SmsAlarmReceiver#android.content.BroadcastReceiver#126
Multiple anonymous classes in the same line org.darpa.smsreminder.SmsAlarmReceiver$org.darpa.smsreminder.SmsAlarmReceiver#android.content.BroadcastReceiver#126
binding org.darpa.smsreminder.AlarmDetails$1 org.darpa.smsreminder.AlarmDetails$org.darpa.smsreminder.AlarmDetails#java.lang.Object#35
binding org.darpa.smsreminder.AlarmViewer$1 org.darpa.smsreminder.AlarmViewer$org.darpa.smsreminder.AlarmViewer#java.lang.Object#31
binding org.darpa.smsreminder.AlarmViewer$2 org.darpa.smsreminder.AlarmViewer$org.darpa.smsreminder.AlarmViewer#java.lang.Object#45
binding org.darpa.smsreminder.SettingsActivity$1 org.darpa.smsreminder.SettingsActivity$org.darpa.smsreminder.SettingsActivity#java.lang.Object#33
binding org.darpa.smsreminder.SmsReminderActivity$1 org.darpa.smsreminder.SmsReminderActivity$org.darpa.smsreminder.SmsReminderActivity#java.lang.Object#110
binding org.darpa.smsreminder.SmsReminderActivity$2 org.darpa.smsreminder.SmsReminderActivity$org.darpa.smsreminder.SmsReminderActivity#java.lang.Object#160
Error in Missing Models Report Generation. Perhaps analysis was run without JCFL?
java.lang.NullPointerException
	at stamp.reporting.MissingModels.generate(MissingModels.java:27)
	at stamp.reporting.XMLReport.write(XMLReport.java:55)
	at stamp.reporting.Postmortem.processReports(Postmortem.java:43)
	at stamp.reporting.Postmortem.run(Postmortem.java:88)
	at shord.project.ClassicProject.runTask(ClassicProject.java:398)
	at shord.project.ClassicProject.runTask(ClassicProject.java:419)
	at shord.project.ClassicProject.run(ClassicProject.java:112)
	at shord.project.Main.run(Main.java:84)
	at shord.project.Main.main(Main.java:55)
Exception in All Missing Models Generation. Maybe was run without JCFL?
java.lang.NullPointerException
	at stamp.reporting.AllMissingModels.generate(AllMissingModels.java:32)
	at stamp.reporting.XMLReport.write(XMLReport.java:55)
	at stamp.reporting.Postmortem.processReports(Postmortem.java:43)
	at stamp.reporting.Postmortem.run(Postmortem.java:88)
	at shord.project.ClassicProject.runTask(ClassicProject.java:398)
	at shord.project.ClassicProject.runTask(ClassicProject.java:419)
	at shord.project.ClassicProject.run(ClassicProject.java:112)
	at shord.project.Main.run(Main.java:84)
	at shord.project.Main.main(Main.java:55)
LEAVE: post-java
Exclusive time: 00:00:01:881 hh:mm:ss:ms
Inclusive time: 00:00:01:881 hh:mm:ss:ms
ENTER: dynfeatures-java at Fri Jan 31 10:59:35 PST 2014
stmt count = 16791
invoke count = 0
field read count = 0
LEAVE: dynfeatures-java
Exclusive time: 00:00:00:006 hh:mm:ss:ms
Inclusive time: 00:00:00:006 hh:mm:ss:ms
Chord run completed at: Jan 31, 2014 10:59:35 AM
Total time: 00:00:24:029 hh:mm:ss:ms
