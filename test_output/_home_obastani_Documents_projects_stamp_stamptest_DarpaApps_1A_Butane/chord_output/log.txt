Chord run initiated at: Jan 31, 2014 9:07:48 AM
java.vendor: Oracle Corporation
java.version: 1.7.0_51
os.arch: amd64
os.name: Linux
os.version: 3.11.0-14-generic
java.class.path: /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar
chord.max.heap: 4096m
chord.max.stack: null
chord.jvmargs: null
chord.main.dir: null
chord.work.dir: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane
chord.main.class: edu.stanford.stamp.harness.Main
chord.class.path: /home/obastani/Documents/projects/stamp/stamptest/DarpaApps/1A_Butane/bin/ButaneList-debug.apk:/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/stamp-driver
chord.src.path: null
chord.run.ids: 0
chord.runtime.jvmargs: -ea -Xmx1024m
chord.scope.kind: rta
chord.reflect.kind: none
chord.ch.kind: static
chord.ssa: phi
chord.std.scope.exclude: 
chord.ext.scope.exclude: 
chord.scope.exclude: 
chord.std.check.exclude: 
chord.ext.check.exclude: 
chord.check.exclude: 
chord.build.scope: false
chord.run.analyses: inject-annot,base-java,annot-java,contexts-java,context-label-java,pre-dlog,typefilter-dlog,pt-dlog,taint-lim-dlog,jimpleprinter,post-dlog,post-java,dynfeatures-java
chord.print.all.classes: false
chord.print.classes: 
chord.print.rels: 
chord.print.project: false
chord.print.results: true
chord.save.maps: true
chord.verbose: 2
chord.classic: true
chord.std.java.analysis.path: null
chord.ext.java.analysis.path: null
chord.java.analysis.path: /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/scanner/stamp.scanner.jar
chord.std.dlog.analysis.path: null
chord.ext.dlog.analysis.path: null
chord.dlog.analysis.path: /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar
chord.use.jvmti: false
chord.instr.kind: offline
chord.trace.kind: full
chord.trace.block.size: 4096
chord.dynamic.haltonerr: true
chord.dynamic.timeout: -1
chord.max.cons.size: 50000000
chord.reuse.scope: false
chord.reuse.rels: false
chord.reuse.traces: false
chord.use.buddy: false
chord.bddbddb.max.heap: 4096m
Using '/home/obastani/Documents/projects/stamp/shord' as android.jar
Warning: java.lang.ref.Finalizer is a phantom class!
WARN: TaskParser: Ignoring non-existent entry '/home/obastani/Documents/projects/stamp/shord/scanner/stamp.scanner.jar' in path 'chord.java.analysis.path'.
WARN: TrgtParser: Relation 'VT' declared with different domain orders 'T0_V0' and 'V0_T0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/typefilter.dlog' respectively.
WARN: TrgtParser: Relation 'IinvkPrimArg' declared with different domain orders 'Z0_I0_U0' and 'I0_U0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'InLabelArg' declared with different domain orders 'L0_Z0_M0' and 'L0_M0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-annot.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'InLabelArg' declared with different domain orders 'L0_Z0_M0' and 'Z0_M0_L0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-annot.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'paramPrim' declared with different domain orders 'I0_U0xU1' and 'U0xU1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-init.dlog' respectively.
WARN: TrgtParser: Relation 'paramPrim' declared with different domain orders 'I0_U0xU1' and 'U0xU1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'StoreStat' declared with different domain orders 'V0_F0' and 'F0_V0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pt.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'chaIM' declared with different domain orders 'I0xM0' and 'M0_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'chaIM' declared with different domain orders 'I0xM0' and 'I0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'param' declared with different domain orders 'V0xV1_I0' and 'I0_V0xV1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-ph-pt.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'IinvkPrimRet' declared with different domain orders 'I0_U0_Z0' and 'Z0_I0_U0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'OutLabelRet' declared with different domain orders 'M0_L0' and 'L0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'OutLabelRet' declared with different domain orders 'M0_L0' and 'L0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'OutLabelRet' declared with different domain orders 'M0_L0' and 'L0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-annot.dlog' respectively.
WARN: TrgtParser: Relation 'MmethPrimRet' declared with different domain orders 'Z0_M0_U0' and 'M0_U0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'return' declared with different domain orders 'I0_V0xV1' and 'V0xV1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-partial-pt-active.dlog' respectively.
WARN: TrgtParser: Relation 'return' declared with different domain orders 'I0_V0xV1' and 'V0xV1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pt.dlog' respectively.
WARN: TrgtParser: Relation 'return' declared with different domain orders 'I0_V0xV1' and 'V0xV1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-partial-pt.dlog' respectively.
WARN: TrgtParser: Relation 'return' declared with different domain orders 'I0_V0xV1' and 'V0xV1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-ph-pt.dlog' respectively.
WARN: TrgtParser: Relation 'IinvkArg' declared with different domain orders 'I0_V0_Z0' and 'Z0_I0_V0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'MmethPrimArg' declared with different domain orders 'Z0_M0_U0' and 'M0_U0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-annot.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'labelPrim' declared with different domain orders 'C0_U0_CL0' and 'CL0_C0_U0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'ArgArgFlow' declared with different domain orders 'Z0xZ1_M0' and 'M0_Z0_Z1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-annot.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'Load' declared with different domain orders 'V0xV1_F0' and 'F0_V0xV1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-ph-pt.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'StorePrim' declared with different domain orders 'U0_V0_F0' and 'V0_U0_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-init.dlog' respectively.
WARN: TrgtParser: Relation 'StorePrim' declared with different domain orders 'U0_V0_F0' and 'V0_U0_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'LoadPrim' declared with different domain orders 'V0_U0_F0' and 'U0_V0_F0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'MmethArg' declared with different domain orders 'Z0_M0_V0' and 'M0_V0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-partial-pt-active.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'IinvkRet' declared with different domain orders 'I0_V0_Z0' and 'Z0_I0_V0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' respectively.
WARN: TrgtParser: Relation 'LoadStat' declared with different domain orders 'F0_V0' and 'V0_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-ph-pt.dlog' respectively.
WARN: TrgtParser: Relation 'LoadStat' declared with different domain orders 'F0_V0' and 'V0_F0' in 'shord.analyses.PAGBuilder' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pt.dlog' respectively.
WARN: TrgtParser: Relation 'CCL' declared with different domain orders 'CL0_C0' and 'C0_CL0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-annot.dlog' and 'stamp.analyses.ContextLabelAnalysis' respectively.
WARN: TrgtParser: Relation 'Store' declared with different domain orders 'V0xV1_F0' and 'F0_V0xV1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-partial-pt-active.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'typeFilter' declared with different domain orders 'C0_V0' and 'V0_C0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pt.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/typefilter.dlog' respectively.
WARN: TrgtParser: Relation 'ArgRetTransfer' declared with different domain orders 'Z0_M0' and 'M0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'HTFilter' declared with different domain orders 'T0_H0' and 'H0_T0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/typefilter.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'returnPrim' declared with different domain orders 'I0_U0xU1' and 'U0xU1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'returnPrim' declared with different domain orders 'I0_U0xU1' and 'U0xU1_I0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-init.dlog' respectively.
WARN: TrgtParser: Relation 'MmethRet' declared with different domain orders 'Z0_M0_V0' and 'M0_V0_Z0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-stub.dlog' and 'shord.analyses.PAGBuilder' respectively.
WARN: TrgtParser: Relation 'OutLabelArg' declared with different domain orders 'L0_M0_Z0' and 'L0_Z0_M0' in 'stamp.analyses.AnnotationReader' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'OutLabelArg' declared with different domain orders 'L0_M0_Z0' and 'Z0_M0_L0' in 'stamp.analyses.AnnotationReader' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' respectively.
WARN: TrgtParser: Relation 'OutLabelArg' declared with different domain orders 'L0_M0_Z0' and 'L0_Z0_M0' in 'stamp.analyses.AnnotationReader' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-annot.dlog' respectively.
WARN: TrgtParser: Relation 'labelRef' declared with different domain orders 'C0_V0_CL0' and 'CL0_C0_V0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'CH' declared with different domain orders 'C0_H0' and 'H0_C0' in 'shord.analyses.ContextsAnalysis' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/typefilter.dlog' respectively.
WARN: TrgtParser: Relation 'ArgArgTransfer' declared with different domain orders 'Z0xZ1_M0' and 'M0_Z0_Z1' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'InLabelRet' declared with different domain orders 'M0_L0' and 'L0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' and 'stamp.analyses.AnnotationReader' respectively.
WARN: TrgtParser: Relation 'InLabelRet' declared with different domain orders 'M0_L0' and 'L0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-annot.dlog' respectively.
WARN: TrgtParser: Relation 'InLabelRet' declared with different domain orders 'M0_L0' and 'L0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog' and '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog' respectively.
WARN: TrgtParser: Relation 'CM' declared with different domain orders 'M0_C0' and 'C0_M0' in '/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-init.dlog' and 'shord.analyses.ContextsAnalysis' respectively.
WARNING: 'annot-java' not declared as produced name of any task

WARNING: 'PtFull' declared as produced name of multiple tasks:
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-normal-pt.dlog'
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-partial-pt.dlog'

WARNING: 'facts-dumper-java' not declared as produced name of any task

WARNING: 'fpt' declared as produced name of multiple tasks:
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pt.dlog'
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-ph-pt.dlog'

WARNING: 'inject-annot' not declared as produced name of any task

WARNING: 'dynfeatures-java' not declared as produced name of any task

WARNING: 'jimpleprinter' not declared as produced name of any task

WARNING: 'jcflsolver' not declared as produced name of any task

WARNING: 'relationprinter' not declared as produced name of any task

WARNING: 'post-java' not declared as produced name of any task

WARNING: 'context-label-java' not declared as produced name of any task

WARNING: 'cfl-solver-runner-java' not declared as produced name of any task

WARNING: 'paths-printer-java' not declared as produced name of any task

WARNING: 'base-java' not declared as produced name of any task

WARNING: 'contexts-java' not declared as produced name of any task

WARNING: 'FptFull' declared as produced name of multiple tasks:
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-normal-pt.dlog'
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-partial-pt.dlog'

WARNING: 'pt' declared as produced name of multiple tasks:
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pt.dlog'
	'/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/cfl-ph-pt.dlog'

WARNING: 'dat-rel-parser-java' not declared as produced name of any task

ENTER: inject-annot at Fri Jan 31 09:07:50 PST 2014
%%% <org.apac.android.butane.ButaneList: java.lang.String stamp$stamp$0(java.lang.String)>
%%% <org.apac.android.butane.Pager$Pages: java.lang.String stamp$stamp$0(java.lang.String)>
%%% <org.apac.android.butane.Pager$Replies: java.lang.String stamp$stamp$0(java.lang.String)>
%%% <org.apac.android.butane.Listen: java.lang.String stamp$stamp$0(java.lang.String)>
%%% <org.apac.android.butane.Startup: java.lang.String stamp$stamp$0(java.lang.String)>
LEAVE: inject-annot
Exclusive time: 00:00:01:094 hh:mm:ss:ms
Inclusive time: 00:00:01:094 hh:mm:ss:ms
ENTER: base-java at Fri Jan 31 09:07:51 PST 2014
[Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
SAVING dom M size: 10948
SAVING rel Stub size: 6853
SAVING rel Framework size: 9203
SAVING dom F size: 3509
SAVING dom T size: 1212
untyped $r1: bottom_type in <org.apac.android.butane.Notifier: void <clinit>()>
LC: <org.apac.android.butane.Notifier: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <org.apac.android.butane.PageViewer: void <clinit>()>
LC: <org.apac.android.butane.PageViewer: void <clinit>()> t = 2 p = 1 n = 0 b = 0 u = 1
Unclassified: 
$r0 
untyped $r1: bottom_type in <org.apac.android.butane.SmsPageReceiver: void <clinit>()>
LC: <org.apac.android.butane.SmsPageReceiver: void <clinit>()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyList: void <init>()>
LC: <org.apac.android.butane.ReplyList: void <init>()> t = 6 p = 3 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <org.apac.android.butane.SmsPageReceiver: void <init>()>
LC: <org.apac.android.butane.SmsPageReceiver: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.apac.android.butane.SMS_Receiver: void <init>()>
LC: <org.apac.android.butane.SMS_Receiver: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.apac.android.butane.Preferences: void <init>()>
LC: <org.apac.android.butane.Preferences: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <org.apac.android.butane.ButaneList: void <init>()>
LC: <org.apac.android.butane.ButaneList: void <init>()> t = 5 p = 2 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyEditor: void <init>()>
LC: <org.apac.android.butane.ReplyEditor: void <init>()> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <org.apac.android.butane.Startup: void <init>()>
LC: <org.apac.android.butane.Startup: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <org.apac.android.butane.PageViewer: void <init>()>
LC: <org.apac.android.butane.PageViewer: void <init>()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <org.apac.android.butane.Changelog: void <init>()>
LC: <org.apac.android.butane.Changelog: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.apac.android.butane.Notifier: void <init>()>
LC: <org.apac.android.butane.Notifier: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <org.apac.android.butane.ButaneList: void onResume()>
LC: <org.apac.android.butane.ButaneList: void onResume()> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r6: bottom_type in <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
LC: <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)> t = 40 p = 18 n = 21 b = 0 u = 1
Unclassified: 
$r6 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyEditor: boolean onCreateOptionsMenu(android.view.Menu)>
LC: <org.apac.android.butane.ReplyEditor: boolean onCreateOptionsMenu(android.view.Menu)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyList: boolean onCreateOptionsMenu(android.view.Menu)>
LC: <org.apac.android.butane.ReplyList: boolean onCreateOptionsMenu(android.view.Menu)> t = 13 p = 5 n = 7 b = 0 u = 1
Unclassified: 
$r2 
untyped $r4: bottom_type in <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)>
LC: <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)> t = 13 p = 8 n = 4 b = 0 u = 1
Unclassified: 
$r4 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyEditor: boolean onOptionsItemSelected(android.view.MenuItem)>
LC: <org.apac.android.butane.ReplyEditor: boolean onOptionsItemSelected(android.view.MenuItem)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r8: bottom_type in <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
untyped $r10: bottom_type in <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
LC: <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> t = 71 p = 23 n = 46 b = 0 u = 2
Unclassified: 
$r8 $r10 
untyped $r1: bottom_type in <org.apac.android.butane.Pager: int getStatusResId(int)>
LC: <org.apac.android.butane.Pager: int getStatusResId(int)> t = 4 p = 2 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r0: bottom_type in <org.apac.android.butane.Pager: void <clinit>()>
LC: <org.apac.android.butane.Pager: void <clinit>()> t = 3 p = 1 n = 1 b = 0 u = 1
Unclassified: 
$r0 
untyped $r0: bottom_type in <org.apac.android.butane.AckStatusAdapter: void <clinit>()>
LC: <org.apac.android.butane.AckStatusAdapter: void <clinit>()> t = 2 p = 1 n = 0 b = 0 u = 1
Unclassified: 
$r0 
untyped $r3: bottom_type in <org.apac.android.butane.ReplyEditor$2: void onClick(android.view.View)>
LC: <org.apac.android.butane.ReplyEditor$2: void onClick(android.view.View)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <org.apac.android.butane.ReplyEditor$4: void onClick(android.view.View)>
LC: <org.apac.android.butane.ReplyEditor$4: void onClick(android.view.View)> t = 5 p = 0 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <org.apac.android.butane.ReplyEditor$1: void onClick(android.view.View)>
LC: <org.apac.android.butane.ReplyEditor$1: void onClick(android.view.View)> t = 5 p = 0 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <org.apac.android.butane.ReplyEditor$3: void onClick(android.view.View)>
LC: <org.apac.android.butane.ReplyEditor$3: void onClick(android.view.View)> t = 5 p = 0 n = 4 b = 0 u = 1
Unclassified: 
$r3 
untyped $r1: bottom_type in <org.apac.android.butane.ReplyEditor: void access$200(org.apac.android.butane.ReplyEditor)>
LC: <org.apac.android.butane.ReplyEditor: void access$200(org.apac.android.butane.ReplyEditor)> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.apac.android.butane.ReplyEditor: void access$000(org.apac.android.butane.ReplyEditor)>
LC: <org.apac.android.butane.ReplyEditor: void access$000(org.apac.android.butane.ReplyEditor)> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.apac.android.butane.ReplyEditor: void access$100(org.apac.android.butane.ReplyEditor)>
LC: <org.apac.android.butane.ReplyEditor: void access$100(org.apac.android.butane.ReplyEditor)> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r16: bottom_type in <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
LC: <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)> t = 158 p = 34 n = 123 b = 0 u = 1
Unclassified: 
$r16 
untyped $r1: bottom_type in <org.apac.android.butane.pageparser.Standard: void <clinit>()>
LC: <org.apac.android.butane.pageparser.Standard: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.apac.android.butane.pageparser.LabeledFields: void <clinit>()>
LC: <org.apac.android.butane.pageparser.LabeledFields: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.apac.android.butane.pageparser.Go2Mobile: void <clinit>()>
LC: <org.apac.android.butane.pageparser.Go2Mobile: void <clinit>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r3: bottom_type in <org.apac.android.butane.AckStatusAdapter: void <init>(android.content.Context,int,java.util.List)>
LC: <org.apac.android.butane.AckStatusAdapter: void <init>(android.content.Context,int,java.util.List)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyEditor$1: void <init>(org.apac.android.butane.ReplyEditor)>
LC: <org.apac.android.butane.ReplyEditor$1: void <init>(org.apac.android.butane.ReplyEditor)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyEditor$2: void <init>(org.apac.android.butane.ReplyEditor)>
LC: <org.apac.android.butane.ReplyEditor$2: void <init>(org.apac.android.butane.ReplyEditor)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyEditor$3: void <init>(org.apac.android.butane.ReplyEditor)>
LC: <org.apac.android.butane.ReplyEditor$3: void <init>(org.apac.android.butane.ReplyEditor)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.ReplyEditor$4: void <init>(org.apac.android.butane.ReplyEditor)>
LC: <org.apac.android.butane.ReplyEditor$4: void <init>(org.apac.android.butane.ReplyEditor)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r4: bottom_type in <org.apac.android.butane.EscAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
LC: <org.apac.android.butane.EscAdapter: void <init>(android.content.Context,int,android.database.Cursor)> t = 6 p = 1 n = 4 b = 0 u = 1
Unclassified: 
$r4 
untyped $r3: bottom_type in <org.apac.android.butane.Listen: void <init>(android.os.Handler,android.content.Context)>
LC: <org.apac.android.butane.Listen: void <init>(android.os.Handler,android.content.Context)> t = 4 p = 0 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r4: bottom_type in <org.apac.android.butane.ReplyAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
LC: <org.apac.android.butane.ReplyAdapter: void <init>(android.content.Context,int,android.database.Cursor)> t = 6 p = 1 n = 4 b = 0 u = 1
Unclassified: 
$r4 
untyped $r2: bottom_type in <org.apac.android.butane.ButaneList$1: void <init>(org.apac.android.butane.ButaneList)>
LC: <org.apac.android.butane.ButaneList$1: void <init>(org.apac.android.butane.ButaneList)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.ButaneList$2: void <init>(org.apac.android.butane.ButaneList)>
LC: <org.apac.android.butane.ButaneList$2: void <init>(org.apac.android.butane.ButaneList)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r4: bottom_type in <org.apac.android.butane.ButaneList: android.view.MenuItem addContextMenuItem(android.view.Menu,java.lang.String,java.lang.String,int,long)>
untyped $r5: bottom_type in <org.apac.android.butane.ButaneList: android.view.MenuItem addContextMenuItem(android.view.Menu,java.lang.String,java.lang.String,int,long)>
LC: <org.apac.android.butane.ButaneList: android.view.MenuItem addContextMenuItem(android.view.Menu,java.lang.String,java.lang.String,int,long)> t = 17 p = 6 n = 9 b = 0 u = 2
Unclassified: 
$r4 $r5 
untyped $r2: bottom_type in <org.apac.android.butane.ButaneList$3: void <init>(org.apac.android.butane.ButaneList)>
LC: <org.apac.android.butane.ButaneList$3: void <init>(org.apac.android.butane.ButaneList)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.ButaneList$4: void <init>(org.apac.android.butane.ButaneList)>
LC: <org.apac.android.butane.ButaneList$4: void <init>(org.apac.android.butane.ButaneList)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r10: bottom_type in <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
LC: <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)> t = 50 p = 20 n = 29 b = 0 u = 1
Unclassified: 
$r10 
untyped $r2: bottom_type in <org.apac.android.butane.SMS_Receiver$atask: void <init>(org.apac.android.butane.SMS_Receiver)>
LC: <org.apac.android.butane.SMS_Receiver$atask: void <init>(org.apac.android.butane.SMS_Receiver)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <org.apac.android.butane.pageparser.Standard: void <init>()>
LC: <org.apac.android.butane.pageparser.Standard: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r4: bottom_type in <org.apac.android.butane.Alert: void setTransport(java.lang.String)>
LC: <org.apac.android.butane.Alert: void setTransport(java.lang.String)> t = 5 p = 0 n = 4 b = 0 u = 1
Unclassified: 
$r4 
untyped $r2: bottom_type in <org.apac.android.butane.Alert: android.content.ContentValues asContentValues()>
LC: <org.apac.android.butane.Alert: android.content.ContentValues asContentValues()> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r1: bottom_type in <org.apac.android.butane.pageparser.Go2Mobile: void <init>()>
LC: <org.apac.android.butane.pageparser.Go2Mobile: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r1: bottom_type in <org.apac.android.butane.pageparser.LabeledFields: void <init>()>
LC: <org.apac.android.butane.pageparser.LabeledFields: void <init>()> t = 2 p = 0 n = 1 b = 0 u = 1
Unclassified: 
$r1 
untyped $r2: bottom_type in <org.apac.android.butane.Listen$atask: void <init>(org.apac.android.butane.Listen)>
LC: <org.apac.android.butane.Listen$atask: void <init>(org.apac.android.butane.Listen)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r3: bottom_type in <org.apac.android.butane.PageViewer$1: void <init>(org.apac.android.butane.PageViewer,java.lang.String,int)>
LC: <org.apac.android.butane.PageViewer$1: void <init>(org.apac.android.butane.PageViewer,java.lang.String,int)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r3: bottom_type in <org.apac.android.butane.ButaneList$6: void <init>(org.apac.android.butane.ButaneList,java.lang.String,int)>
LC: <org.apac.android.butane.ButaneList$6: void <init>(org.apac.android.butane.ButaneList,java.lang.String,int)> t = 5 p = 1 n = 3 b = 0 u = 1
Unclassified: 
$r3 
untyped $r2: bottom_type in <org.apac.android.butane.ButaneList$5: void <init>(org.apac.android.butane.ButaneList,long,java.lang.String,int)>
untyped $r4: bottom_type in <org.apac.android.butane.ButaneList$5: void <init>(org.apac.android.butane.ButaneList,long,java.lang.String,int)>
LC: <org.apac.android.butane.ButaneList$5: void <init>(org.apac.android.butane.ButaneList,long,java.lang.String,int)> t = 7 p = 2 n = 3 b = 0 u = 2
Unclassified: 
$r2 $r4 
untyped $r13: bottom_type in <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
LC: <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> t = 64 p = 6 n = 57 b = 0 u = 1
Unclassified: 
$r13 
untyped $r2: bottom_type in <org.apac.android.butane.PagerProvider: void <clinit>()>
LC: <org.apac.android.butane.PagerProvider: void <clinit>()> t = 19 p = 5 n = 13 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.Alert: void <init>(android.content.ContentValues)>
LC: <org.apac.android.butane.Alert: void <init>(android.content.ContentValues)> t = 3 p = 0 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r2: bottom_type in <org.apac.android.butane.PagerProvider: java.lang.String getDefaultSortOrderByType(int)>
LC: <org.apac.android.butane.PagerProvider: java.lang.String getDefaultSortOrderByType(int)> t = 4 p = 1 n = 2 b = 0 u = 1
Unclassified: 
$r2 
untyped $r4: bottom_type in <org.apac.android.butane.Listen$atask: java.lang.Void doInBackground(java.lang.String[])>
LC: <org.apac.android.butane.Listen$atask: java.lang.Void doInBackground(java.lang.String[])> t = 8 p = 1 n = 6 b = 0 u = 1
Unclassified: 
$r4 
untyped $r3: bottom_type in <org.apac.android.butane.SMS_Receiver$atask: java.lang.Void doInBackground(java.lang.String[])>
LC: <org.apac.android.butane.SMS_Receiver$atask: java.lang.Void doInBackground(java.lang.String[])> t = 8 p = 1 n = 6 b = 0 u = 1
Unclassified: 
$r3 
SAVING dom H size: 638
SAVING dom Z size: 15
SAVING dom V size: 4771
SAVING dom I size: 1679
SAVING dom U size: 961
SAVING rel Alloc size: 638
SAVING rel Assign size: 1745
SAVING rel Load size: 304
SAVING rel Store size: 121
SAVING rel LoadStat size: 79
SAVING rel StoreStat size: 19
SAVING rel MmethArg size: 1079
SAVING rel MmethRet size: 275
SAVING rel IinvkRet size: 419
SAVING rel IinvkArg size: 2341
SAVING rel VT size: 4771
SAVING rel HT size: 638
SAVING rel HTFilter size: 3862
SAVING rel MI size: 1679
SAVING rel MH size: 638
SAVING rel MV size: 4771
SAVING rel MU size: 961
SAVING rel AssignPrim size: 360
SAVING rel LoadPrim size: 21
SAVING rel StorePrim size: 17
SAVING rel LoadStatPrim size: 3
SAVING rel StoreStatPrim size: 2
SAVING rel MmethPrimArg size: 190
SAVING rel MmethPrimRet size: 92
SAVING rel IinvkPrimRet size: 111
SAVING rel IinvkPrimArg size: 241
<org.apac.android.butane.PagerProvider: java.lang.String getType(android.net.Uri)> -> <org.apac.android.butane.ReplyList: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<org.apac.android.butane.Changelog: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.Changelog: void <init>()>
<org.apac.android.butane.ReplyAdapter: void <init>(android.content.Context,int,android.database.Cursor)> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
<org.apac.android.butane.Pager$Replies: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ReplyEditor: void access$000(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor$1: void onClick(android.view.View)>
<org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> -> <org.apac.android.butane.ReplyEditor$1: void onClick(android.view.View)>
<org.apac.android.butane.PagerProvider$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<org.apac.android.butane.PagerProvider: java.lang.String getDefaultSortOrderByType(int)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<org.apac.android.butane.ReplyList: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.apac.android.butane.Pager: int getStatusResId(int)> -> <org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.apac.android.butane.ReplyList: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.apac.android.butane.Changelog: void <init>()> -> <org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.apac.android.butane.Pager: void <clinit>()> -> <org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.apac.android.butane.ReplyList: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> -> <org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.apac.android.butane.ReplyEditor: void doInsert()> -> <org.apac.android.butane.ReplyEditor: void access$200(org.apac.android.butane.ReplyEditor)>
<org.apac.android.butane.PagerProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
<org.apac.android.butane.PagerProvider$DatabaseHelper: void <init>(android.content.Context)> -> <org.apac.android.butane.PagerProvider: boolean onCreate()>
<org.apac.android.butane.Pager: int getStatusResId(int)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.AckStatusAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ReplyEditor: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ReplyEditor$3: void onClick(android.view.View)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ReplyEditor$1: void onClick(android.view.View)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ReplyEditor$4: void onClick(android.view.View)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ButaneList$6: void <init>(org.apac.android.butane.ButaneList,java.lang.String,int)> -> <org.apac.android.butane.ButaneList: android.view.Menu addReplyMenuItem(android.view.Menu,java.lang.String,java.lang.String,int)>
<org.apac.android.butane.Preferences: void <init>()> -> <org.apac.android.butane.Preferences: void <clinit>()>
<org.apac.android.butane.ReplyEditor: void <init>()> -> <org.apac.android.butane.PagerProvider: java.lang.String getType(android.net.Uri)>
<org.apac.android.butane.Notifier: void <clinit>()> -> <org.apac.android.butane.ButaneList: void onResume()>
<org.apac.android.butane.Notifier: void <init>()> -> <org.apac.android.butane.ButaneList: void onResume()>
<org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
<org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
<org.apac.android.butane.ReplyList: void onListItemClick(android.widget.ListView,android.view.View,int,long)> -> <org.apac.android.butane.ReplyList: boolean onPrepareOptionsMenu(android.view.Menu)>
<org.apac.android.butane.PagerProvider: java.lang.String getType(android.net.Uri)> -> <org.apac.android.butane.ReplyList: boolean onPrepareOptionsMenu(android.view.Menu)>
<org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> -> <org.apac.android.butane.ReplyEditor$4: void onClick(android.view.View)>
<org.apac.android.butane.ReplyEditor: void access$200(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor$4: void onClick(android.view.View)>
<org.apac.android.butane.AckStatusAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ReplyEditor$4: void <init>(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ReplyEditor$3: void <init>(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.Pager: int getStatusResId(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ReplyEditor$2: void <init>(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ReplyEditor$1: void <init>(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.AckStatusAdapter: void <init>(android.content.Context,int,java.util.List)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.AckStatusAdapter: void <clinit>()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
<org.apac.android.butane.PagerProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> -> <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)>
<org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.Pager$Replies: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<org.apac.android.butane.ReplyEditor: void doSave()> -> <org.apac.android.butane.ReplyEditor: void access$100(org.apac.android.butane.ReplyEditor)>
<org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)> -> <org.apac.android.butane.AckStatusAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ButaneList: void onResume()> -> <org.apac.android.butane.Changelog: void onCreate(android.os.Bundle)>
<org.apac.android.butane.PagerProvider$DatabaseHelper: void addReplyTable(android.database.sqlite.SQLiteDatabase)> -> <org.apac.android.butane.PagerProvider$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<org.apac.android.butane.PagerProvider$DatabaseHelper: void addReplyShortlistField(android.database.sqlite.SQLiteDatabase)> -> <org.apac.android.butane.PagerProvider$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<org.apac.android.butane.ReplyEditor: void doDelete()> -> <org.apac.android.butane.ReplyEditor: void access$000(org.apac.android.butane.ReplyEditor)>
<org.apac.android.butane.PagerProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> -> <org.apac.android.butane.ReplyEditor: void doDelete()>
<org.apac.android.butane.AckStatusAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <org.apac.android.butane.ReplyEditor: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.ButaneList: void <init>()>
<org.apac.android.butane.ButaneList: void <init>()> -> <org.apac.android.butane.PagerProvider$DatabaseHelper: void <init>(android.content.Context)>
<org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)> -> <org.apac.android.butane.Notifier: void <init>()>
<org.apac.android.butane.PagerProvider: java.lang.String whereClauseWithId(android.net.Uri,java.lang.String)> -> <org.apac.android.butane.PagerProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<org.apac.android.butane.ButaneList: int access$000(org.apac.android.butane.ButaneList)> -> <org.apac.android.butane.ButaneList$2: boolean onMenuItemClick(android.view.MenuItem)>
<org.apac.android.butane.ButaneList: android.app.Dialog onCreateDialog(int)> -> <org.apac.android.butane.ButaneList$2: boolean onMenuItemClick(android.view.MenuItem)>
<org.apac.android.butane.Listen: void <init>(android.os.Handler,android.content.Context)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ButaneList: void onResume()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
<org.apac.android.butane.EscAdapter: void <init>(android.content.Context,int,android.database.Cursor)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ButaneList: void createDefaultPreferences()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
<org.apac.android.butane.Pager$Pages: void <clinit>()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
<org.apac.android.butane.ReplyList: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ReplyList: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apac.android.butane.Pager$Replies: void <clinit>()> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apac.android.butane.ButaneList$1: void <init>(org.apac.android.butane.ButaneList)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apac.android.butane.ButaneList: android.view.Menu addReplyMenuItem(android.view.Menu,java.lang.String,java.lang.String,int)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apac.android.butane.ButaneList$2: void <init>(org.apac.android.butane.ButaneList)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
<org.apac.android.butane.PagerProvider: boolean onCreate()> -> <org.apac.android.butane.PagerProvider: void <init>()>
<org.apac.android.butane.Pager$Pages: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> -> <org.apac.android.butane.Pager$Pages: void <clinit>()>
<org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.Preferences: void <init>()>
<org.apac.android.butane.PagerProvider: android.content.ContentValues validateReplyValues(android.content.ContentValues)> -> <org.apac.android.butane.PagerProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<org.apac.android.butane.PagerProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues,java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<org.apac.android.butane.PagerProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> <org.apac.android.butane.ReplyEditor: void doSave()>
<org.apac.android.butane.ReplyList: void <init>()> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
<org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.Pager$Pages: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
<org.apac.android.butane.ReplyEditor: void access$100(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor$3: void onClick(android.view.View)>
<org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> -> <org.apac.android.butane.ReplyEditor$3: void onClick(android.view.View)>
<org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.ReplyEditor: void <init>()>
<org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <org.apac.android.butane.ButaneList: android.app.Dialog onCreateDialog(int)>
<org.apac.android.butane.ButaneList$7: void <init>(org.apac.android.butane.ButaneList)> -> <org.apac.android.butane.ButaneList: android.app.Dialog onCreateDialog(int)>
<org.apac.android.butane.PagerProvider: void <init>()> -> <org.apac.android.butane.PagerProvider: void <clinit>()>
<org.apac.android.butane.AckStatusAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getDropDownView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.Pager: int getStatusResId(int)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getDropDownView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.AckStatusAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getDropDownView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ReplyEditor$2: void onClick(android.view.View)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getDropDownView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.ReplyList: void <init>()>
<org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getDropDownView(int,android.view.View,android.view.ViewGroup)> -> <org.apac.android.butane.AckStatusAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<org.apac.android.butane.ReplyAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> -> <org.apac.android.butane.ReplyEditor$2: void onClick(android.view.View)>
<org.apac.android.butane.PagerProvider: java.lang.String whereClauseWithId(android.net.Uri,java.lang.String)> -> <org.apac.android.butane.PagerProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<org.apac.android.butane.Preferences: void <clinit>()> -> <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)>
<org.apac.android.butane.ButaneList$2: boolean onMenuItemClick(android.view.MenuItem)> -> <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)>
<org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <org.apac.android.butane.Preferences: void <clinit>()>
ignoring: <org.apac.android.butane.ReplyList: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.SmsPageReceiver: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.SMS_Receiver: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.Preferences: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.ButaneList: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.ReplyEditor: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.Startup: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.PageViewer: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.Changelog: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <org.apac.android.butane.Notifier: void <init>()> -> <edu.stanford.stamp.harness.Main: void main(java.lang.String[])>
ignoring: <java.util.ArrayList: java.lang.Object get(int)> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Activity$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Activity$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Activity$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Activity$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Application$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$6: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$5: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.view.View$7: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Fragment$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$5: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.Dialog$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.ContentResolver$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$5: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$11: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$6: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$10: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$7: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$8: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$12: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$9: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.os.Handler$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.location.LocationManager$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.location.LocationManager$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$20: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$10: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$7: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$11: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$8: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$12: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$5: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$13: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$6: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$9: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$18: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$19: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$14: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$15: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$16: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.app.AlertDialog$Builder$17: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.AdapterView$3: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.AdapterView$4: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.AdapterView$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.AdapterView$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.preference.Preference$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.preference.Preference$2: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <edu.stanford.stamp.harness.ApplicationDriver: void callCallbacks()>
ignoring: <java.lang.Thread: void sleep(long)> -> <android.os.Handler$5: void run()>
ignoring: <android.telephony.TelephonyManager: java.lang.String access$000(android.telephony.TelephonyManager)> -> <android.telephony.TelephonyManager$1: void run()>
ignoring: <android.location.LocationManager: java.lang.String access$100(android.location.LocationManager)> -> <android.location.LocationManager$2: void run()>
ignoring: <android.location.LocationManager: android.location.Location access$000(android.location.LocationManager)> -> <android.location.LocationManager$1: void run()>
ignoring: <java.util.ArrayList: void <init>()> -> <edu.stanford.stamp.harness.ApplicationDriver: void <clinit>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void <init>()> -> <edu.stanford.stamp.harness.ApplicationDriver: void <clinit>()>
ignoring: <android.net.StampUri: void <init>(java.lang.String)> -> <android.net.Uri: android.net.Uri parse(java.lang.String)>
ignoring: <android.app.ListActivity: void <init>()> -> <org.apac.android.butane.ReplyList: void <init>()>
ignoring: <android.content.BroadcastReceiver: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.content.BroadcastReceiver: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.content.BroadcastReceiver: void <init>()>
ignoring: <android.content.BroadcastReceiver: void <init>()> -> <org.apac.android.butane.SMS_Receiver: void <init>()>
ignoring: <android.preference.PreferenceActivity: void <init>()> -> <org.apac.android.butane.Preferences: void <init>()>
ignoring: <android.app.ListActivity: void <init>()> -> <org.apac.android.butane.ButaneList: void <init>()>
ignoring: <android.app.Activity: void <init>()> -> <org.apac.android.butane.ReplyEditor: void <init>()>
ignoring: <java.util.ArrayList: void <init>()> -> <org.apac.android.butane.ReplyEditor: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.app.Activity: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.app.Activity: void <init>()>
ignoring: <android.content.BroadcastReceiver: void <init>()> -> <org.apac.android.butane.Startup: void <init>()>
ignoring: <android.app.Activity: void <init>()> -> <org.apac.android.butane.PageViewer: void <init>()>
ignoring: <android.app.Activity: void <init>()> -> <org.apac.android.butane.Changelog: void <init>()>
ignoring: <android.content.BroadcastReceiver: void <init>()> -> <org.apac.android.butane.Notifier: void <init>()>
ignoring: <java.lang.Thread: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$6: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$5: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.view.View$7: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$20: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$10: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$7: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$11: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$8: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$12: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$5: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$13: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$6: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$9: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$18: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$19: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$14: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$15: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$16: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.app.AlertDialog$Builder$17: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.preference.Preference$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.preference.Preference$2: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.app.Activity$4: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Activity$3: void run()>
ignoring: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$3: void run()>
ignoring: <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$3: void run()>
ignoring: <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$3: void run()>
ignoring: <android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$3: void run()>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: void <init>()> -> <android.app.Activity$2: void run()>
ignoring: <android.app.Activity: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$2: void run()>
ignoring: <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$2: void run()>
ignoring: <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$2: void run()>
ignoring: <android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Activity$2: void run()>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.Changelog: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onStart()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onRestart()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onPause()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onResume()> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ButaneList: void onResume()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onPostResume()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onStop()> -> <android.app.Activity$1: void run()>
ignoring: <android.preference.PreferenceActivity: void onStop()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onDestroy()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.ListActivity: void onDestroy()> -> <android.app.Activity$1: void run()>
ignoring: <android.preference.PreferenceActivity: void onDestroy()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onRestoreInstanceState(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.ListActivity: void onRestoreInstanceState(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.preference.PreferenceActivity: void onRestoreInstanceState(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onPostCreate(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onNewIntent(android.content.Intent)> -> <android.app.Activity$1: void run()>
ignoring: <android.preference.PreferenceActivity: void onNewIntent(android.content.Intent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.preference.PreferenceActivity: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onUserLeaveHint()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: java.lang.CharSequence onCreateDescription()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onLowMemory()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onBackPressed()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onUserInteraction()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onContentChanged()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.ListActivity: void onContentChanged()> -> <android.app.Activity$1: void run()>
ignoring: <android.preference.PreferenceActivity: void onContentChanged()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onWindowFocusChanged(boolean)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onAttachedToWindow()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onDetachedFromWindow()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onMenuOpened(int,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onPanelClosed(int,android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ReplyEditor: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ReplyList: boolean onCreateOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ReplyList: boolean onPrepareOptionsMenu(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ReplyEditor: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onOptionsMenuClosed(android.view.Menu)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: android.view.View onCreatePanelView(int)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: boolean onSearchRequested()> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onActionModeStarted(android.view.ActionMode)> -> <android.app.Activity$1: void run()>
ignoring: <android.app.Activity: void onActionModeFinished(android.view.ActionMode)> -> <android.app.Activity$1: void run()>
ignoring: <org.apac.android.butane.Pager: int getStatusResId(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.Pager: int getStatusResId(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.ButaneList: java.lang.String stamp$stamp$0(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.Pager$Pages: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.Pager$Replies: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ReplyList: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <org.apac.android.butane.Pager$Pages: void <clinit>()>
ignoring: <org.apac.android.butane.Pager$Pages: java.lang.String stamp$stamp$0(java.lang.String)> -> <org.apac.android.butane.Pager$Pages: void <clinit>()>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <org.apac.android.butane.Pager$Replies: void <clinit>()>
ignoring: <org.apac.android.butane.Pager$Replies: java.lang.String stamp$stamp$0(java.lang.String)> -> <org.apac.android.butane.Pager$Replies: void <clinit>()>
ignoring: <android.app.Application: void onCreate()> -> <android.app.Application$1: void run()>
ignoring: <android.app.Application: void onLowMemory()> -> <android.app.Application$1: void run()>
ignoring: <android.app.Application: void onTerminate()> -> <android.app.Application$1: void run()>
ignoring: <android.app.Application: void onTrimMemory(int)> -> <android.app.Application$1: void run()>
ignoring: <org.apac.android.butane.ReplyEditor$2: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.apac.android.butane.ReplyEditor$4: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.apac.android.butane.ReplyEditor$1: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.apac.android.butane.ReplyEditor$3: void onClick(android.view.View)> -> <android.view.View$3: void run()>
ignoring: <org.apac.android.butane.ReplyEditor: void access$200(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor$4: void onClick(android.view.View)>
ignoring: <org.apac.android.butane.ReplyEditor: void access$000(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor$1: void onClick(android.view.View)>
ignoring: <org.apac.android.butane.ReplyEditor: void access$100(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor$3: void onClick(android.view.View)>
ignoring: <android.view.View: void onFinishInflate()> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: void onFinishInflate()> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ImageView: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsoluteLayout: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.Spinner: void onMeasure(int,int)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.Spinner: void onLayout(boolean,int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onSizeChanged(int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: void onSizeChanged(int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: void onSizeChanged(int,int,int,int)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ImageView: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.widget.CompoundButton: void onDraw(android.graphics.Canvas)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.Spinner: boolean onTouchEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: boolean onTrackballEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)> -> <android.view.View$1: void run()>
ignoring: <android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onWindowFocusChanged(boolean)> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onWindowFocusChanged(boolean)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: void onWindowFocusChanged(boolean)> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: void onWindowFocusChanged(boolean)> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.ImageView: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.view.ViewGroup: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: void onAttachedToWindow()> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.TextView: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.ImageView: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.view.ViewGroup: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.AbsListView: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.widget.Spinner: void onDetachedFromWindow()> -> <android.view.View$1: void run()>
ignoring: <android.view.View: void onWindowVisibilityChanged(int)> -> <android.view.View$1: void run()>
ignoring: <android.webkit.WebView: void onWindowVisibilityChanged(int)> -> <android.view.View$1: void run()>
ignoring: <android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.View$5: void run()>
ignoring: <android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.View$5: void run()>
ignoring: <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.View$5: void run()>
ignoring: <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.view.View$5: void run()>
ignoring: <android.app.Fragment: void onHiddenChanged(boolean)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onActivityResult(int,int,android.content.Intent)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onAttach(android.app.Activity)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onCreate(android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onActivityCreated(android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onStart()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onResume()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onSaveInstanceState(android.os.Bundle)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onPause()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onStop()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onLowMemory()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onTrimMemory(int)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onDestroyView()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onDestroy()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onDetach()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onDestroyOptionsMenu()> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> -> <android.app.Fragment$1: void run()>
ignoring: <android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)> -> <android.app.Fragment$1: void run()>
ignoring: <android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)> -> <android.app.Dialog$3: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.content.ContextWrapper$1: void run()>
ignoring: <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$1: void run()>
ignoring: <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$1: void run()>
ignoring: <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$1: void run()>
ignoring: <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$1: void run()>
ignoring: <android.util.Log: int e(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int e(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int e(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.System: long currentTimeMillis()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int e(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int e(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Startup: java.lang.String stamp$stamp$0(java.lang.String)> -> <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: void <init>()> -> <android.content.ContextWrapper$2: void run()>
ignoring: <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$2: void run()>
ignoring: <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$2: void run()>
ignoring: <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$2: void run()>
ignoring: <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.ContextWrapper$2: void run()>
ignoring: <android.content.Loader$ForceLoadContentObserver: void onChange(boolean)> -> <android.content.ContentResolver$1: void run()>
ignoring: <org.apac.android.butane.Listen: void onChange(boolean)> -> <android.content.ContentResolver$1: void run()>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <org.apac.android.butane.Listen: java.lang.String stamp$stamp$0(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$5: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$20: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$10: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$7: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$11: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$8: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$12: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$5: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$13: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$6: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$9: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$18: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$19: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$14: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$15: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$16: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.app.AlertDialog$Builder$17: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.preference.Preference$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.preference.Preference$2: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$11: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$6: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$20: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$10: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$7: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$11: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$8: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$12: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$5: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$13: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$6: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$9: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$18: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$19: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$14: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$15: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$16: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.app.AlertDialog$Builder$17: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.preference.Preference$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.preference.Preference$2: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$10: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$7: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$20: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$10: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$7: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$11: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$8: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$12: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$5: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$13: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$6: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$9: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$18: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$19: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$14: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$15: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$16: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.app.AlertDialog$Builder$17: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.preference.Preference$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.preference.Preference$2: void run()> -> <android.os.Handler$8: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$8: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$20: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$10: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$7: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$11: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$8: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$12: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$5: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$13: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$6: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$9: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$18: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$19: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$14: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$15: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$16: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.app.AlertDialog$Builder$17: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.preference.Preference$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.preference.Preference$2: void run()> -> <android.os.Handler$12: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$12: void run()>
ignoring: <java.lang.Thread: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Activity$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Activity$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Activity$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Activity$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Application$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$6: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$5: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.view.View$7: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Fragment$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$5: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.Dialog$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.ContextWrapper$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.ContextWrapper$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.ContextWrapper$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.ContentResolver$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$5: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$11: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$6: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$10: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$7: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$8: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$12: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$9: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.BroadcastReceiver$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.telephony.TelephonyManager$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.location.LocationManager$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.location.LocationManager$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.content.StampSharedPreferences$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$20: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$10: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$7: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$11: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$8: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$12: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$5: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$13: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$6: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$9: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$18: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$19: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$14: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$15: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$16: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.app.AlertDialog$Builder$17: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.AdapterView$3: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.AdapterView$4: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.AdapterView$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.AdapterView$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.preference.Preference$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.preference.Preference$2: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.widget.BaseAdapter$1: void run()> -> <android.os.Handler$9: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$2: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$1: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$4: void run()>
ignoring: <android.os.Handler: void handleMessage(android.os.Message)> -> <android.os.Handler$3: void run()>
ignoring: <android.content.Intent: void <init>()> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)> -> <android.content.BroadcastReceiver$1: void run()>
ignoring: <android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)> -> <android.telephony.TelephonyManager$1: void run()>
ignoring: <android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> -> <android.telephony.TelephonyManager$1: void run()>
ignoring: <android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)> -> <android.telephony.TelephonyManager$1: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$1: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$1: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$2: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$2: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$3: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$3: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$4: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$4: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$10: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$10: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$11: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$11: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$12: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$12: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$5: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$5: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$6: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$6: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$9: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$9: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$18: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$18: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$19: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$19: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$16: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$16: void run()>
ignoring: <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$17: void run()>
ignoring: <android.widget.Spinner: void onClick(android.content.DialogInterface,int)> -> <android.app.AlertDialog$Builder$17: void run()>
ignoring: <android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> -> <android.widget.AdapterView$1: void run()>
ignoring: <android.widget.ArrayAdapter: int getCount()> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.CursorAdapter: int getCount()> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <org.apac.android.butane.AckStatusAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.ArrayAdapter: java.lang.Object getItem(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.CursorAdapter: java.lang.Object getItem(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.ArrayAdapter: long getItemId(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.CursorAdapter: long getItemId(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.BaseAdapter: int getItemViewType(int)> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.widget.BaseAdapter: int getViewTypeCount()> -> <android.widget.BaseAdapter$1: void run()>
ignoring: <android.os.Bundle: void <init>(boolean)> -> <android.content.Intent: void <clinit>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Thread: void sleep(long)>
ignoring: <android.telephony.TelephonyManager: void <init>()> -> <android.telephony.TelephonyManager: void <clinit>()>
ignoring: <android.telephony.TelephonyManager: java.lang.String incomingCallNumber()> -> <android.telephony.TelephonyManager: java.lang.String access$000(android.telephony.TelephonyManager)>
ignoring: <android.location.LocationManager: void <init>()> -> <android.location.LocationManager: void <clinit>()>
ignoring: <android.location.LocationManager: java.lang.String getNmea()> -> <android.location.LocationManager: java.lang.String access$100(android.location.LocationManager)>
ignoring: <android.location.LocationManager: android.location.Location getLocation()> -> <android.location.LocationManager: android.location.Location access$000(android.location.LocationManager)>
ignoring: <java.util.AbstractList: void <init>()> -> <java.util.ArrayList: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.ArrayList: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <edu.stanford.stamp.harness.ApplicationDriver: void <init>()>
ignoring: <android.net.Uri: void <init>()> -> <android.net.StampUri: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.net.StampUri: void <init>(java.lang.String)>
ignoring: <android.app.Activity: void <init>()> -> <android.app.ListActivity: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.ListActivity: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.BroadcastReceiver: void <init>()>
ignoring: <android.content.BroadcastReceiver$1: void <init>(android.content.BroadcastReceiver)> -> <android.content.BroadcastReceiver: void <init>()>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)>
ignoring: <android.app.ListActivity: void <init>()> -> <android.preference.PreferenceActivity: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void <init>()>
ignoring: <android.view.ContextThemeWrapper: void <init>()> -> <android.app.Activity: void <init>()>
ignoring: <android.app.Activity$1: void <init>(android.app.Activity)> -> <android.app.Activity: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Thread: void run()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.Intent: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: android.net.Uri getData()> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: int getInt(int)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: void <init>(java.lang.String,android.net.Uri)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> -> <org.apac.android.butane.PageViewer: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: android.net.Uri getData()> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String getStringExtra(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: int getInt(int)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: android.content.Intent setData(android.net.Uri)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> -> <org.apac.android.butane.ButaneList: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.Changelog: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.apac.android.butane.Changelog: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.Changelog: void onCreate(android.os.Bundle)>
ignoring: <android.webkit.WebView: void loadUrl(java.lang.String)> -> <org.apac.android.butane.Changelog: void onCreate(android.os.Bundle)>
ignoring: <edu.stanford.stamp.harness.ViewFactory: android.view.View findViewById(android.content.Context,int)> -> <android.app.Activity: android.view.View findViewById(int)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.content.Intent getIntent()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: android.net.Uri getData()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.net.StampUri: java.lang.String toString()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: boolean moveToNext()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: long getLong(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.util.Date: void <init>(long)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.text.SimpleDateFormat: void <init>()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.text.DateFormat: java.lang.String format(java.util.Date)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getInt(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.widget.ImageView: void setImageResource(int)> -> <org.apac.android.butane.PageViewer: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.content.Intent getIntent()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.view.View findViewById(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.Integer: void <init>(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.Integer: void <init>(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.Integer: void <init>(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.util.ArrayList: boolean add(java.lang.Object)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.AckStatusAdapter: void <init>(android.content.Context,int,java.util.List)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: android.net.Uri getData()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.ReplyEditor$1: void <init>(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setVisibility(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.ReplyEditor$2: void <init>(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.ReplyEditor$3: void <init>(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.view.View: void setOnClickListener(android.view.View$OnClickListener)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.net.StampUri: java.lang.String toString()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.widget.TextView: void setText(java.lang.CharSequence)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: short getShort(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.widget.CompoundButton: void setChecked(boolean)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getInt(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.widget.AbsSpinner: void setSelection(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.widget.ImageView: void setImageResource(int)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.ReplyEditor$4: void <init>(org.apac.android.butane.ReplyEditor)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <android.widget.CompoundButton: void setChecked(boolean)> -> <org.apac.android.butane.ReplyEditor: void onCreate(android.os.Bundle)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.ButaneList: void createDefaultPreferences()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void startManagingCursor(android.database.Cursor)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.app.ListActivity: android.widget.ListView getListView()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void registerForContextMenu(android.view.View)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.content.ContextWrapper: android.content.Context getBaseContext()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.test.mock.MockCursor: int getCount()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.EscAdapter: void <init>(android.content.Context,int,android.database.Cursor)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.os.Handler: void <init>()> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.Listen: void <init>(android.os.Handler,android.content.Context)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)> -> <org.apac.android.butane.ButaneList: void onCreate(android.os.Bundle)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
ignoring: <android.app.Activity: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void setContentView(int)> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
ignoring: <android.app.Activity: void startManagingCursor(android.database.Cursor)> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
ignoring: <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
ignoring: <org.apac.android.butane.ReplyAdapter: void <init>(android.content.Context,int,android.database.Cursor)> -> <org.apac.android.butane.ReplyList: void onCreate(android.os.Bundle)>
ignoring: <android.preference.PreferenceActivity: void onCreate(android.os.Bundle)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.preference.PreferenceActivity: void addPreferencesFromResource(int)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.preference.Preference: void setIntent(android.content.Intent)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.preference.Preference: void setIntent(android.content.Intent)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <java.lang.Integer: int intValue()> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <java.lang.Integer: int intValue()> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.preference.TwoStatePreference: void setChecked(boolean)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <android.preference.Preference: void setEnabled(boolean)> -> <org.apac.android.butane.Preferences: void onCreate(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onStart()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onRestart()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onPause()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onResume()>
ignoring: <android.app.Activity: void onResume()> -> <org.apac.android.butane.ButaneList: void onResume()>
ignoring: <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> -> <org.apac.android.butane.ButaneList: void onResume()>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onResume()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onPostResume()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onStop()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void onStop()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onDestroy()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.ListActivity: void onDestroy()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void onDestroy()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.ListActivity: void onRestoreInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void onRestoreInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onPostCreate(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onNewIntent(android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void onNewIntent(android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void onSaveInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onUserLeaveHint()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: java.lang.CharSequence onCreateDescription()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onLowMemory()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onBackPressed()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onUserInteraction()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onContentChanged()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.ListActivity: void onContentChanged()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void onContentChanged()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onPanelClosed(int,android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <org.apac.android.butane.PageViewer: android.view.Menu addReplyMenuItem(android.view.Menu,java.lang.String,java.lang.String,int)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: boolean isAfterLast()> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getInt(int)> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: boolean moveToNext()> -> <org.apac.android.butane.PageViewer: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ReplyEditor: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <org.apac.android.butane.ButaneList: android.view.Menu addReplyMenuItem(android.view.Menu,java.lang.String,java.lang.String,int)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: boolean isAfterLast()> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getInt(int)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: boolean moveToNext()> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.content.Intent: void <init>(java.lang.String,android.net.Uri)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.content.Intent: android.content.Intent setType(java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <org.apac.android.butane.ButaneList$1: void <init>(org.apac.android.butane.ButaneList)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <org.apac.android.butane.ButaneList$2: void <init>(org.apac.android.butane.ButaneList)> -> <org.apac.android.butane.ButaneList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ReplyList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <android.content.Intent: void <init>(java.lang.String,android.net.Uri)> -> <org.apac.android.butane.ReplyList: boolean onCreateOptionsMenu(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <android.app.ListActivity: long getSelectedItemId()> -> <org.apac.android.butane.ButaneList: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)> -> <org.apac.android.butane.ReplyList: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <android.test.mock.MockCursor: int getCount()> -> <org.apac.android.butane.ReplyList: boolean onPrepareOptionsMenu(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.app.Activity: void finish()> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.app.Activity: void startActivityForResult(android.content.Intent,int)> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.test.mock.MockCursor: void close()> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.content.Intent: void <init>(java.lang.String,android.net.Uri)> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <android.content.Intent: android.content.Intent setType(java.lang.String)> -> <org.apac.android.butane.PageViewer: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.app.Activity: void startActivityForResult(android.content.Intent,int)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.app.Activity: void startActivityForResult(android.content.Intent,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: boolean isAfterLast()> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: int getInt(int)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.test.mock.MockCursor: boolean moveToNext()> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.app.ListActivity: android.widget.ListAdapter getListAdapter()> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.widget.ArrayAdapter: long getItemId(int)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <android.widget.CursorAdapter: long getItemId(int)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <org.apac.android.butane.ButaneList: android.view.MenuItem addContextMenuItem(android.view.Menu,java.lang.String,java.lang.String,int,long)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <org.apac.android.butane.ButaneList$3: void <init>(org.apac.android.butane.ButaneList)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <org.apac.android.butane.ButaneList$4: void <init>(org.apac.android.butane.ButaneList)> -> <org.apac.android.butane.ButaneList: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.view.View onCreatePanelView(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: boolean onSearchRequested()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onActionModeStarted(android.view.ActionMode)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void onActionModeFinished(android.view.ActionMode)>
ignoring: <java.lang.String: void <init>(java.lang.String)> -> <org.apac.android.butane.ButaneList: java.lang.String stamp$stamp$0(java.lang.String)>
ignoring: <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.Pager$Pages: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
ignoring: <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.Pager$Replies: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>
ignoring: <java.lang.Integer: void <init>(int)> -> <java.lang.Integer: java.lang.Integer valueOf(int)>
ignoring: <java.lang.Integer: void <init>(int)> -> <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
ignoring: <java.lang.String: void <init>(java.lang.String)> -> <org.apac.android.butane.Pager$Pages: java.lang.String stamp$stamp$0(java.lang.String)>
ignoring: <java.lang.String: void <init>(java.lang.String)> -> <org.apac.android.butane.Pager$Replies: java.lang.String stamp$stamp$0(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Application: void onCreate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Application: void onLowMemory()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Application: void onTerminate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Application: void onTrimMemory(int)>
ignoring: <android.app.Activity: void finish()> -> <org.apac.android.butane.ReplyEditor$2: void onClick(android.view.View)>
ignoring: <android.app.Activity: void finish()> -> <org.apac.android.butane.ReplyEditor$4: void onClick(android.view.View)>
ignoring: <android.app.Activity: void finish()> -> <org.apac.android.butane.ReplyEditor$1: void onClick(android.view.View)>
ignoring: <android.app.Activity: void finish()> -> <org.apac.android.butane.ReplyEditor$3: void onClick(android.view.View)>
ignoring: <org.apac.android.butane.ReplyEditor: void doInsert()> -> <org.apac.android.butane.ReplyEditor: void access$200(org.apac.android.butane.ReplyEditor)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <org.apac.android.butane.ReplyEditor: void doDelete()> -> <org.apac.android.butane.ReplyEditor: void access$000(org.apac.android.butane.ReplyEditor)>
ignoring: <org.apac.android.butane.ReplyEditor: void doSave()> -> <org.apac.android.butane.ReplyEditor: void access$100(org.apac.android.butane.ReplyEditor)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onFinishInflate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void onFinishInflate()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsoluteLayout: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Spinner: void onMeasure(int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Spinner: void onLayout(boolean,int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onSizeChanged(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: void onSizeChanged(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void onSizeChanged(int,int,int,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Spinner: boolean onTouchEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void onWindowFocusChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void onAttachedToWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ViewGroup: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsListView: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Spinner: void onDetachedFromWindow()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void onWindowVisibilityChanged(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.webkit.WebView: void onWindowVisibilityChanged(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onHiddenChanged(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onAttach(android.app.Activity)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onCreate(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onActivityCreated(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onStart()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onResume()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onPause()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onStop()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onLowMemory()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onTrimMemory(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onDestroyView()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onDestroy()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onDetach()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onDestroyOptionsMenu()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)>
ignoring: <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.net.Uri getData()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.net.Uri getData()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.NotificationManager: void notify(int,android.app.Notification)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.NotificationManager: void cancel(int)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.NotificationManager: void notify(int,android.app.Notification)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.StampSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.StampSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.Integer: void <init>(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.Integer: long longValue()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(long)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.app.AlarmManager: void cancel(android.app.PendingIntent)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String getStringExtra(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.BroadcastReceiver: int getResultCode()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: int getIntExtra(java.lang.String,int)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.Notifier: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.location.LocationManager: android.location.LocationManager getInstance()> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
ignoring: <android.telephony.TelephonyManager: android.telephony.TelephonyManager getInstance()> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <java.lang.System: long currentTimeMillis()> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.net.Uri: android.net.Uri parse(java.lang.String)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <android.content.Intent: android.os.Bundle getExtras()> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.os.Bundle: java.lang.Object get(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.telephony.SmsMessage: java.lang.String getMessageBody()> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.telephony.SmsMessage: java.lang.String getOriginatingAddress()> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: java.lang.String toString()> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.SMS_Receiver: java.lang.String pagerGen(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.util.Date: void <init>()> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.util.Date: java.lang.String toString()> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: java.lang.String replace(char,char)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: java.lang.String replace(char,char)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: java.lang.String replace(char,char)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.SMS_Receiver$atask: void <init>(org.apac.android.butane.SMS_Receiver)> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])> -> <org.apac.android.butane.SMS_Receiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.Integer: int parseInt(java.lang.String,int)> -> <org.apac.android.butane.SMS_Receiver: java.lang.String pagerGen(java.lang.String)>
ignoring: <android.content.StampSharedPreferences: boolean getBoolean(java.lang.String,boolean)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.StampSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.StampSharedPreferences: boolean getBoolean(java.lang.String,boolean)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.net.Uri getData()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.os.Bundle getExtras()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.os.Bundle getExtras()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.os.Bundle getExtras()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.os.Bundle: java.lang.String getString(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.os.Bundle: int getInt(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.Integer: int intValue()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.os.Bundle: boolean isEmpty()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.os.Bundle: java.lang.Object get(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.pageparser.Standard: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.pageparser.LabeledFields: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Alert: void setTransport(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Alert: java.lang.String getFrom()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Alert: java.lang.String getDisplayFrom()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Alert: java.lang.String getSubject()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Alert: java.lang.String getBody()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Alert: android.content.ContentValues asContentValues()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Alert: android.content.ContentValues asContentValues()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.pageparser.Go2Mobile: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.pageparser.LabeledFields: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.pageparser.LabeledFields: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: android.content.Intent setData(android.net.Uri)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.Intent: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.BroadcastReceiver: void abortBroadcast()> -> <org.apac.android.butane.SmsPageReceiver: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.telephony.SmsManager: android.telephony.SmsManager getDefault()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.Integer: java.lang.Integer valueOf(int)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.content.Intent: java.lang.String getAction()> -> <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.os.Handler: void <init>()> -> <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <org.apac.android.butane.Listen: void <init>(android.os.Handler,android.content.Context)> -> <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)> -> <org.apac.android.butane.Startup: void onReceive(android.content.Context,android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
ignoring: <android.telephony.SmsMessage: void <init>()> -> <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>
ignoring: <java.lang.String: void <init>(java.lang.String)> -> <org.apac.android.butane.Startup: java.lang.String stamp$stamp$0(java.lang.String)>
ignoring: <android.content.StampSharedPreferences: void <init>()> -> <android.content.StampSharedPreferences: void <clinit>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Loader$ForceLoadContentObserver: void onChange(boolean)>
ignoring: <android.database.ContentObserver: void onChange(boolean)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <org.apac.android.butane.Listen: java.lang.String pagerGen()> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.util.Date: void <init>()> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.util.Date: java.lang.String toString()> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.String: java.lang.String replace(char,char)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <org.apac.android.butane.Listen$atask: void <init>(org.apac.android.butane.Listen)> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])> -> <org.apac.android.butane.Listen: void onChange(boolean)>
ignoring: <java.lang.Integer: int parseInt(java.lang.String,int)> -> <org.apac.android.butane.Listen: java.lang.String pagerGen()>
ignoring: <java.lang.String: void <init>(java.lang.String)> -> <org.apac.android.butane.Listen: java.lang.String stamp$stamp$0(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: void handleMessage(android.os.Message)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>
ignoring: <android.telephony.cdma.CdmaCellLocation: void <init>()> -> <android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
ignoring: <android.telephony.gsm.GsmCellLocation: void <init>()> -> <android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)>
ignoring: <android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])> -> <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)>
ignoring: <android.app.Dialog: void dismiss()> -> <org.apac.android.butane.ButaneList$7: void onClick(android.content.DialogInterface,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Spinner: void onClick(android.content.DialogInterface,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: int getCount()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CursorAdapter: int getCount()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)> -> <org.apac.android.butane.AckStatusAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <org.apac.android.butane.Pager: int getStatusResId(int)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: java.lang.Object getItem(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CursorAdapter: java.lang.Object getItem(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: long getItemId(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CursorAdapter: long getItemId(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.BaseAdapter: int getItemViewType(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.BaseAdapter: int getViewTypeCount()>
ignoring: <java.lang.Object: void <init>()> -> <android.os.Bundle: void <init>(boolean)>
ignoring: <android.os.Bundle: byte[] smsByteArray()> -> <android.os.Bundle: void <init>(boolean)>
ignoring: <java.lang.Exception: void <init>()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <android.telephony.TelephonyManager: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.TelephonyManager: void <init>()>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.TelephonyManager: java.lang.String incomingCallNumber()>
ignoring: <java.lang.Object: void <init>()> -> <android.location.LocationManager: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.location.LocationManager: void <init>()>
ignoring: <java.lang.String: void <init>()> -> <android.location.LocationManager: java.lang.String getNmea()>
ignoring: <android.location.Location: void <init>(java.lang.String)> -> <android.location.LocationManager: android.location.Location getLocation()>
ignoring: <java.util.AbstractCollection: void <init>()> -> <java.util.AbstractList: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractList: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Object: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Object: void finalize()>
ignoring: <java.lang.Object: void <init>()> -> <android.net.Uri: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.net.Uri: void <init>()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.content.BroadcastReceiver$1: void <init>(android.content.BroadcastReceiver)>
ignoring: <android.content.ContextWrapper: void <init>(android.content.Context)> -> <android.view.ContextThemeWrapper: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ContextThemeWrapper: void <init>()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.app.Activity$1: void <init>(android.app.Activity)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: android.net.Uri getData()>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: boolean moveToFirst()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)>
ignoring: <java.lang.String: void <init>()> -> <android.test.mock.MockCursor: java.lang.String getString(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: int getInt(int)>
ignoring: <java.lang.Object: void <init>()> -> <android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <android.content.Intent: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void setContentView(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: android.content.Intent getIntent()>
ignoring: <java.lang.AbstractStringBuilder: void <init>()> -> <java.lang.StringBuilder: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.StringBuilder: void <init>()>
ignoring: <java.lang.String: void <init>()> -> <android.net.StampUri: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.StringBuilder: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: boolean moveToNext()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView: void setText(java.lang.CharSequence)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: long getLong(int)>
ignoring: <java.lang.Object: void <init>()> -> <java.util.Date: void <init>(long)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Date: void <init>(long)>
ignoring: <java.text.DateFormat: void <init>()> -> <java.text.SimpleDateFormat: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.SimpleDateFormat: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.DateFormat: java.lang.String format(java.util.Date)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void setImageResource(int)>
ignoring: <java.lang.Number: void <init>()> -> <java.lang.Integer: void <init>(int)>
ignoring: <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)> -> <org.apac.android.butane.AckStatusAdapter: void <init>(android.content.Context,int,java.util.List)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: java.lang.String getAction()>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ReplyEditor$1: void <init>(org.apac.android.butane.ReplyEditor)>
ignoring: <android.view.View$3: void <init>(android.view.View,android.view.View$OnClickListener)> -> <android.view.View: void setOnClickListener(android.view.View$OnClickListener)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void setVisibility(int)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ReplyEditor$2: void <init>(org.apac.android.butane.ReplyEditor)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ReplyEditor$3: void <init>(org.apac.android.butane.ReplyEditor)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: short getShort(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CompoundButton: void setChecked(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AbsSpinner: void setSelection(int)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ReplyEditor$4: void <init>(org.apac.android.butane.ReplyEditor)>
ignoring: <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.StampSharedPreferences: java.util.Map getAll()> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <java.util.Hashtable: boolean isEmpty()> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <java.util.HashMap: boolean isEmpty()> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.StampSharedPreferences: android.content.SharedPreferences$Editor edit()> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.StampSharedPreferences: java.util.Map getAll()> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <java.util.Hashtable: boolean isEmpty()> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <java.util.HashMap: boolean isEmpty()> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.StampSharedPreferencesEditor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.StampSharedPreferencesEditor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <android.content.StampSharedPreferencesEditor: boolean commit()> -> <org.apac.android.butane.ButaneList: void createDefaultPreferences()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void startManagingCursor(android.database.Cursor)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.ListActivity: android.widget.ListView getListView()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void registerForContextMenu(android.view.View)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContextWrapper: android.content.Context getBaseContext()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: int getCount()>
ignoring: <android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)> -> <org.apac.android.butane.EscAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
ignoring: <java.lang.Object: void <init>()> -> <android.os.Handler: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: void <init>()>
ignoring: <android.database.ContentObserver: void <init>(android.os.Handler)> -> <org.apac.android.butane.Listen: void <init>(android.os.Handler,android.content.Context)>
ignoring: <android.content.ContentResolver$1: void <init>(android.content.ContentResolver,android.database.ContentObserver)> -> <android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
ignoring: <android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)> -> <org.apac.android.butane.ReplyAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.Preference: void setIntent(android.content.Intent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.TwoStatePreference: void setChecked(boolean)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.Preference: void setEnabled(boolean)>
ignoring: <org.apac.android.butane.PageViewer$1: void <init>(org.apac.android.butane.PageViewer,java.lang.String,int)> -> <org.apac.android.butane.PageViewer: android.view.Menu addReplyMenuItem(android.view.Menu,java.lang.String,java.lang.String,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: boolean isAfterLast()>
ignoring: <org.apac.android.butane.ButaneList$6: void <init>(org.apac.android.butane.ButaneList,java.lang.String,int)> -> <org.apac.android.butane.ButaneList: android.view.Menu addReplyMenuItem(android.view.Menu,java.lang.String,java.lang.String,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: android.content.Intent setType(java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ButaneList$1: void <init>(org.apac.android.butane.ButaneList)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ButaneList$2: void <init>(org.apac.android.butane.ButaneList)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.ListActivity: long getSelectedItemId()>
ignoring: <java.lang.String: void <init>()> -> <android.content.Context: java.lang.String getString(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Activity: void finish()>
ignoring: <android.app.Activity$2: void <init>(android.app.Activity)> -> <android.app.Activity: void startActivityForResult(android.content.Intent,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: void close()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.ListActivity: android.widget.ListAdapter getListAdapter()>
ignoring: <org.apac.android.butane.ButaneList$5: void <init>(org.apac.android.butane.ButaneList,long,java.lang.String,int)> -> <org.apac.android.butane.ButaneList: android.view.MenuItem addContextMenuItem(android.view.Menu,java.lang.String,java.lang.String,int,long)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ButaneList$3: void <init>(org.apac.android.butane.ButaneList)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ButaneList$4: void <init>(org.apac.android.butane.ButaneList)>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.String: void <init>(java.lang.String)>
ignoring: <android.test.mock.MockContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.content.ContentValues: void <init>()> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.widget.EditText: android.text.Editable getText()> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.widget.EditText: android.text.Editable getText()> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.widget.AdapterView: int getSelectedItemPosition()> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.widget.CompoundButton: boolean isChecked()> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> -> <org.apac.android.butane.ReplyEditor: void doInsert()>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.ReplyEditor: void doDelete()>
ignoring: <android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])> -> <org.apac.android.butane.ReplyEditor: void doDelete()>
ignoring: <android.content.ContentValues: void <init>()> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.widget.EditText: android.text.Editable getText()> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.widget.EditText: android.text.Editable getText()> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.widget.AdapterView: int getSelectedItemPosition()> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.widget.CompoundButton: boolean isChecked()> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> <org.apac.android.butane.ReplyEditor: void doSave()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
ignoring: <android.content.StampSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.content.StampSharedPreferences: boolean getBoolean(java.lang.String,boolean)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.content.StampSharedPreferences: boolean getBoolean(java.lang.String,boolean)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.content.Intent: android.content.Intent setType(java.lang.String)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.content.Intent: void <init>(java.lang.String)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.app.Notification: void <init>(int,java.lang.CharSequence,long)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.content.ContextWrapper: java.lang.String getPackageName()> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.widget.RemoteViews: void <init>(java.lang.String,int)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)> -> <org.apac.android.butane.Notifier: android.app.Notification getNotification(android.content.Context,java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.NotificationManager: void notify(int,android.app.Notification)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.NotificationManager: void cancel(int)>
ignoring: <java.lang.Number: void <init>()> -> <java.lang.Integer: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.AlarmManager: void cancel(android.app.PendingIntent)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.BroadcastReceiver: int getResultCode()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <android.net.StampUri: java.lang.String toString()> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <android.content.ContentValues: void <init>()> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.Integer: void <init>(int)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.Notifier: void updateAckStatus(android.content.Context,android.net.Uri,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.SmsMessage: java.lang.String getMessageBody()>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SMS_Receiver: java.lang.String pagerGen(java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> -> <org.apac.android.butane.SMS_Receiver: java.lang.String pagerGen(java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SMS_Receiver: java.lang.String pagerGen(java.lang.String)>
ignoring: <java.lang.String: int length()> -> <org.apac.android.butane.SMS_Receiver: java.lang.String pagerGen(java.lang.String)>
ignoring: <java.lang.String: java.lang.String substring(int,int)> -> <org.apac.android.butane.SMS_Receiver: java.lang.String pagerGen(java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <java.util.Date: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Date: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Date: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.String: java.lang.String replace(char,char)>
ignoring: <android.os.AsyncTask: void <init>()> -> <org.apac.android.butane.SMS_Receiver$atask: void <init>(org.apac.android.butane.SMS_Receiver)>
ignoring: <android.os.AsyncTask: void onPreExecute()> -> <android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
ignoring: <org.apac.android.butane.Listen$atask: java.lang.Object doInBackground(java.lang.Object[])> -> <android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
ignoring: <org.apac.android.butane.SMS_Receiver$atask: java.lang.Object doInBackground(java.lang.Object[])> -> <android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
ignoring: <android.os.AsyncTask: void onPostExecute(java.lang.Object)> -> <android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <java.lang.String: boolean equals(java.lang.Object)> -> <org.apac.android.butane.SmsPageReceiver: boolean canReply(android.content.Context,android.net.Uri)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: boolean moveToFirst()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: java.lang.String getString(int)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.content.StampSharedPreferences: boolean getBoolean(java.lang.String,boolean)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.content.StampSharedPreferences: boolean getBoolean(java.lang.String,boolean)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.content.StampSharedPreferences: boolean getBoolean(java.lang.String,boolean)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.content.Intent: void <init>(java.lang.String,android.net.Uri)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.content.Intent: android.content.Intent putExtra(java.lang.String,int)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(int)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> -> <org.apac.android.butane.SmsPageReceiver: void replyTo(android.content.Context,android.net.Uri,java.lang.String,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Bundle: boolean isEmpty()>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.pageparser.Standard: void <init>()>
ignoring: <android.content.ContentValues: void <init>()> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.telephony.SmsMessage: java.lang.String getOriginatingAddress()> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.telephony.SmsMessage: java.lang.String getPseudoSubject()> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <org.apac.android.butane.pageparser.Standard: android.content.ContentValues doCleanup(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues doCleanup(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <org.apac.android.butane.Alert: void <init>(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <org.apac.android.butane.pageparser.Standard: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])> -> <org.apac.android.butane.pageparser.LabeledFields: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues doCleanup(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.LabeledFields: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <org.apac.android.butane.Alert: android.content.ContentValues asContentValues()> -> <org.apac.android.butane.pageparser.LabeledFields: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <org.apac.android.butane.Alert: void <init>(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.LabeledFields: org.apac.android.butane.Alert parse(android.telephony.SmsMessage[])>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.Alert: void setTransport(java.lang.String)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.Alert: java.lang.String getFrom()>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.Alert: java.lang.String getDisplayFrom()>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.Alert: java.lang.String getSubject()>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.Alert: java.lang.String getBody()>
ignoring: <android.content.StampSharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.content.StampSharedPreferences: boolean getBoolean(java.lang.String,boolean)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: java.lang.String[] split(java.lang.String)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: boolean contains(java.lang.CharSequence)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: boolean contains(java.lang.CharSequence)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <java.lang.String: boolean contains(java.lang.CharSequence)> -> <org.apac.android.butane.SmsPageReceiver: boolean isPage(android.content.ContentValues,android.content.Context)>
ignoring: <org.apac.android.butane.pageparser.Standard: void <init>()> -> <org.apac.android.butane.pageparser.Go2Mobile: void <init>()>
ignoring: <org.apac.android.butane.pageparser.Standard: void <init>()> -> <org.apac.android.butane.pageparser.LabeledFields: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.BroadcastReceiver: void abortBroadcast()>
ignoring: <android.telephony.SmsManager: void <init>()> -> <android.telephony.SmsManager: void <clinit>()>
ignoring: <java.lang.Object: void <init>()> -> <android.telephony.SmsMessage: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.SmsMessage: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.StampSharedPreferences: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.ContentObserver: void onChange(boolean)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.Listen: java.lang.String pagerGen()>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(char)> -> <org.apac.android.butane.Listen: java.lang.String pagerGen()>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.Listen: java.lang.String pagerGen()>
ignoring: <android.content.Context: java.lang.String getString(int)> -> <org.apac.android.butane.Listen: java.lang.String pagerGen()>
ignoring: <java.lang.String: int length()> -> <org.apac.android.butane.Listen: java.lang.String pagerGen()>
ignoring: <java.lang.String: java.lang.String substring(int,int)> -> <org.apac.android.butane.Listen: java.lang.String pagerGen()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
ignoring: <android.os.AsyncTask: void <init>()> -> <org.apac.android.butane.Listen$atask: void <init>(org.apac.android.butane.Listen)>
ignoring: <android.telephony.CellLocation: void <init>()> -> <android.telephony.cdma.CdmaCellLocation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.cdma.CdmaCellLocation: void <init>()>
ignoring: <android.telephony.CellLocation: void <init>()> -> <android.telephony.gsm.GsmCellLocation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.gsm.GsmCellLocation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Dialog: void dismiss()>
ignoring: <android.widget.ArrayAdapter: android.content.Context getContext()> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <android.widget.ImageView: void <init>(android.content.Context)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <android.widget.ImageView: void setImageResource(int)> -> <org.apac.android.butane.AckStatusAdapter: android.widget.ImageView getView(int,android.view.View,android.view.ViewGroup)>
ignoring: <java.lang.Throwable: void <init>()> -> <java.lang.Exception: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Exception: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.String: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.location.Location: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.location.Location: void <init>(java.lang.String)>
ignoring: <java.lang.Object: void <init>()> -> <java.util.AbstractCollection: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractCollection: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <edu.stanford.stamp.harness.Callback: void <init>()>
ignoring: <android.content.Context: void <init>()> -> <android.content.ContextWrapper: void <init>(android.content.Context)>
ignoring: <android.test.mock.MockContentResolver: void <init>()> -> <android.content.ContextWrapper: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContextWrapper: void <init>(android.content.Context)>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.AbstractStringBuilder: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.AbstractStringBuilder: void <init>()>
ignoring: <java.text.Format: void <init>()> -> <java.text.DateFormat: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.DateFormat: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.Number: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Number: void <init>()>
ignoring: <android.widget.BaseAdapter: void <init>()> -> <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: void registerCallback(edu.stanford.stamp.harness.Callback)> -> <android.widget.BaseAdapter: void <init>()>
ignoring: <edu.stanford.stamp.harness.ApplicationDriver: edu.stanford.stamp.harness.ApplicationDriver getInstance()> -> <android.widget.BaseAdapter: void <init>()>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.view.View$3: void <init>(android.view.View,android.view.View$OnClickListener)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Hashtable: boolean isEmpty()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.HashMap: boolean isEmpty()>
ignoring: <android.content.StampSharedPreferencesEditor: void <init>()> -> <android.content.StampSharedPreferences: android.content.SharedPreferences$Editor edit()>
ignoring: <android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)> -> <android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
ignoring: <java.lang.Object: void <init>()> -> <android.database.ContentObserver: void <init>(android.os.Handler)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.ContentObserver: void <init>(android.os.Handler)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.content.ContentResolver$1: void <init>(android.content.ContentResolver,android.database.ContentObserver)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.PageViewer$1: void <init>(org.apac.android.butane.PageViewer,java.lang.String,int)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ButaneList$6: void <init>(org.apac.android.butane.ButaneList,java.lang.String,int)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.app.Activity$2: void <init>(android.app.Activity)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.ButaneList$5: void <init>(org.apac.android.butane.ButaneList,long,java.lang.String,int)>
ignoring: <android.test.mock.MockCursor: void <init>()> -> <android.test.mock.MockContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteQueryBuilder: void <init>()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.content.UriMatcher: int match(android.net.Uri)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.IllegalArgumentException: void <init>(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.content.UriMatcher: int match(android.net.Uri)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <org.apac.android.butane.PagerProvider: java.lang.String getDefaultSortOrderByType(int)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.content.ContentProvider: android.content.Context getContext()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.test.mock.MockCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.net.StampUri: java.lang.String getLastPathSegment()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.net.StampUri: java.lang.String getLastPathSegment()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.PagerProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
ignoring: <android.content.UriMatcher: void <init>(int)> -> <org.apac.android.butane.PagerProvider: void <clinit>()>
ignoring: <android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)> -> <org.apac.android.butane.PagerProvider: void <clinit>()>
ignoring: <android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)> -> <org.apac.android.butane.PagerProvider: void <clinit>()>
ignoring: <android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)> -> <org.apac.android.butane.PagerProvider: void <clinit>()>
ignoring: <android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)> -> <org.apac.android.butane.PagerProvider: void <clinit>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
ignoring: <java.lang.Object: void <init>()> -> <android.content.ContentValues: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentValues: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.EditText: android.text.Editable getText()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.AdapterView: int getSelectedItemPosition()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CompoundButton: boolean isChecked()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
ignoring: <java.lang.Object: void <init>()> -> <android.app.Notification: void <init>(int,java.lang.CharSequence,long)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Notification: void <init>(int,java.lang.CharSequence,long)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContextWrapper: java.lang.String getPackageName()>
ignoring: <java.lang.Object: void <init>()> -> <android.widget.RemoteViews: void <init>(java.lang.String,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.RemoteViews: void <init>(java.lang.String,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: int length()>
ignoring: <java.lang.Object: void <init>()> -> <android.os.AsyncTask: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.AsyncTask: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.AsyncTask: void onPreExecute()>
ignoring: <org.apac.android.butane.Listen$atask: java.lang.Void doInBackground(java.lang.String[])> -> <org.apac.android.butane.Listen$atask: java.lang.Object doInBackground(java.lang.Object[])>
ignoring: <org.apac.android.butane.SMS_Receiver$atask: java.lang.Void doInBackground(java.lang.String[])> -> <org.apac.android.butane.SMS_Receiver$atask: java.lang.Object doInBackground(java.lang.Object[])>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.AsyncTask: void onPostExecute(java.lang.Object)>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.SmsMessage: java.lang.String getPseudoSubject()>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>
ignoring: <java.lang.String: void <init>()> -> <android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>
ignoring: <org.apac.android.butane.pageparser.Standard: android.content.ContentValues fixLineEndings(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues fixLineEndings(android.content.ContentValues)>
ignoring: <org.apac.android.butane.pageparser.Standard: android.content.ContentValues doCleanup(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues parseColonLineEndings(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <org.apac.android.butane.pageparser.Standard: android.content.ContentValues doCleanup(android.content.ContentValues)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: void <init>()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues doCleanup(android.content.ContentValues)>
ignoring: <android.util.Log: int d(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues parseColonLineEndings(android.content.ContentValues)>
ignoring: <java.lang.Object: void <init>()> -> <org.apac.android.butane.Alert: void <init>(android.content.ContentValues)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: boolean contains(java.lang.CharSequence)>
ignoring: <java.lang.Object: void <init>()> -> <android.telephony.SmsManager: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.SmsManager: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.telephony.CellLocation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.CellLocation: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ArrayAdapter: android.content.Context getContext()>
ignoring: <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)> -> <android.widget.ImageView: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.ImageView: void <init>(android.content.Context)>
ignoring: <java.lang.Object: void <init>()> -> <java.lang.Throwable: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Throwable: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.Context: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Context: void <init>()>
ignoring: <android.content.ContentResolver: void <init>(android.content.Context)> -> <android.test.mock.MockContentResolver: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockContentResolver: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.text.Format: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.Format: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.widget.BaseAdapter: void <init>()>
ignoring: <android.widget.BaseAdapter$1: void <init>(android.widget.BaseAdapter)> -> <android.widget.BaseAdapter: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.StampSharedPreferencesEditor: void <init>()>
ignoring: <android.widget.BaseAdapter: void <init>()> -> <android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
ignoring: <java.lang.Object: void <init>()> -> <android.test.mock.MockCursor: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <android.database.sqlite.SQLiteQueryBuilder: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.sqlite.SQLiteQueryBuilder: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.UriMatcher: int match(android.net.Uri)>
ignoring: <java.lang.RuntimeException: void <init>()> -> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.IllegalArgumentException: void <init>(java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentProvider: android.content.Context getContext()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
ignoring: <java.lang.String: void <init>()> -> <android.net.StampUri: java.lang.String getLastPathSegment()>
ignoring: <java.lang.Object: void <init>()> -> <android.content.UriMatcher: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.UriMatcher: void <init>(int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
ignoring: <java.net.URL: void <init>(java.lang.String)> -> <org.apac.android.butane.Listen$atask: java.lang.Void doInBackground(java.lang.String[])>
ignoring: <java.net.URL: java.io.InputStream openStream()> -> <org.apac.android.butane.Listen$atask: java.lang.Void doInBackground(java.lang.String[])>
ignoring: <java.net.URL: void <init>(java.lang.String)> -> <org.apac.android.butane.SMS_Receiver$atask: java.lang.Void doInBackground(java.lang.String[])>
ignoring: <java.net.URL: java.io.InputStream openStream()> -> <org.apac.android.butane.SMS_Receiver$atask: java.lang.Void doInBackground(java.lang.String[])>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues fixLineEndings(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues fixLineEndings(android.content.ContentValues)>
ignoring: <java.lang.String: boolean contains(java.lang.CharSequence)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues fixLineEndings(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues fixLineEndings(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.Object get(java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.Object get(java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Object: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Throwable: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.Locale: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.StackTraceElement: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Class: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.io.File: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.URL: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Package: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.charset.CoderResult: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.charset.CodingErrorAction: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.ByteOrder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.URI: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.io.FileDescriptor: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.Proxy: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.channels.FileChannel$MapMode: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.InetAddress: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.security.CodeSigner: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.NetworkInterface: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.security.Timestamp: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.Date: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.Intent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.View: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.Bundle: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.res.Configuration: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.app.Fragment: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.IntentSender: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ComponentName: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.app.PendingIntent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ClipData: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Rect: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.Intent$ShortcutIconResource: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.Display: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.res.TypedArray: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.Loader: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Matrix: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Point: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.Handler: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.WindowId: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.util.SparseArray: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.DragEvent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.util.DisplayMetrics: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.RectF: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Region: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.accessibility.AccessibilityRecord: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.Message: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.net.Uri$Builder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.util.TypedValue: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.UserHandle: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.Looper: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.res.ColorStateList: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.res.AssetFileDescriptor: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.ParcelFileDescriptor: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentProviderResult: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.accounts.Account: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.SyncAdapterType: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ClipData$Item: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ClipDescription: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.PackageInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.FeatureInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ResolveInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.util.SparseBooleanArray: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.InputDevice: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.inputmethod.CompletionInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.inputmethod.CorrectionInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Paint$FontMetricsInt: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.animation.Transformation: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Thread: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.PatternMatcher: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.Socket: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Boolean: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ConfigurationInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.Surface: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.ThreadGroup: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.AbstractMap$SimpleEntry: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.animation.PropertyValuesHolder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.ServerSocket: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.location.Criteria: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.location.Location: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.ServiceState: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.SignalStrength: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.regex.Pattern: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.regex.Matcher: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.app.Notification: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.preference.Preference: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.net.http.SslCertificate: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintAttributes: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PageRange: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.net.http.SslError: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <javax.security.auth.x500.X500Principal: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintAttributes$MediaSize: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintAttributes$Resolution: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintAttributes$Margins: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintDocumentInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.text.DateFormatSymbols: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.text.FieldPosition: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.text.ParsePosition: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.Currency: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Character: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Character$Subset: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.StringBuffer: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.reflect.Constructor: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.reflect.Field: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.reflect.Method: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Enum: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.WindowManager$LayoutParams: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.net.StampUri: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.KeyEvent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.MotionEvent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.animation.ValueAnimator: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.accessibility.AccessibilityEvent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Byte: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Short: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Integer: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Long: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Float: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Double: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.math.BigInteger: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ApplicationInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.PermissionInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.PermissionGroupInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.InstrumentationInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.database.sqlite.SQLiteDatabase: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.AbstractMap: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.cdma.CdmaCellLocation: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.gsm.GsmCellLocation: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.Hashtable: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.Buffer: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.CharBuffer: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.URLConnection: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ActivityInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ServiceInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ProviderInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.database.sqlite.SQLiteStatement: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.database.sqlite.SQLiteQuery: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.AbstractCollection: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.widget.TextView$SavedState: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String trim()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.String: int length()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Object: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Throwable: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.Locale: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.StackTraceElement: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Class: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.io.File: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.URL: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Package: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.charset.CoderResult: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.charset.CodingErrorAction: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.ByteOrder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.URI: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.io.FileDescriptor: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.Proxy: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.channels.FileChannel$MapMode: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.InetAddress: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.security.CodeSigner: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.NetworkInterface: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.security.Timestamp: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.Date: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.Intent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.View: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.Bundle: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.res.Configuration: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.app.Fragment: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.IntentSender: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ComponentName: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.app.PendingIntent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ClipData: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Rect: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.Intent$ShortcutIconResource: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.Display: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.res.TypedArray: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.Loader: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Matrix: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Point: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.Handler: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.WindowId: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.util.SparseArray: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.DragEvent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.util.DisplayMetrics: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.RectF: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Region: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.accessibility.AccessibilityRecord: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.Message: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.net.Uri$Builder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.util.TypedValue: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.UserHandle: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.Looper: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.res.ColorStateList: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.res.AssetFileDescriptor: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.ParcelFileDescriptor: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentProviderResult: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.accounts.Account: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.SyncAdapterType: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ClipData$Item: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ClipDescription: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.PackageInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.FeatureInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ResolveInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.util.SparseBooleanArray: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.InputDevice: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.inputmethod.CompletionInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.inputmethod.CorrectionInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.graphics.Paint$FontMetricsInt: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.animation.Transformation: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Thread: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.os.PatternMatcher: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.Socket: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Boolean: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ConfigurationInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.Surface: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.ThreadGroup: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.AbstractMap$SimpleEntry: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.animation.PropertyValuesHolder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.ServerSocket: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.location.Criteria: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.location.Location: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.ServiceState: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.SignalStrength: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.regex.Pattern: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.regex.Matcher: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.app.Notification: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.preference.Preference: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.net.http.SslCertificate: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintAttributes: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PageRange: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.net.http.SslError: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <javax.security.auth.x500.X500Principal: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintAttributes$MediaSize: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintAttributes$Resolution: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintAttributes$Margins: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.print.PrintDocumentInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.text.DateFormatSymbols: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.text.FieldPosition: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.text.ParsePosition: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.Currency: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Character: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Character$Subset: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.StringBuffer: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.StringBuilder: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.reflect.Constructor: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.reflect.Field: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.reflect.Method: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Enum: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.WindowManager$LayoutParams: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.net.StampUri: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.KeyEvent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.MotionEvent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.animation.ValueAnimator: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.view.accessibility.AccessibilityEvent: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Byte: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Short: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Integer: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Long: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Float: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.Double: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.math.BigInteger: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ApplicationInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.PermissionInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.PermissionGroupInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.InstrumentationInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.database.sqlite.SQLiteDatabase: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.AbstractMap: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.cdma.CdmaCellLocation: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.telephony.gsm.GsmCellLocation: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.Hashtable: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.Buffer: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.nio.CharBuffer: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.net.URLConnection: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ActivityInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ServiceInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.pm.ProviderInfo: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.database.sqlite.SQLiteStatement: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.database.sqlite.SQLiteQuery: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.util.AbstractCollection: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.widget.TextView$SavedState: java.lang.String toString()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.String: int indexOf(int)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String substring(int,int)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.String: int length()> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String substring(int,int)> -> <org.apac.android.butane.pageparser.Standard: android.content.ContentValues addSubject(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String substring(int)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <java.lang.String: int indexOf(java.lang.String)> -> <org.apac.android.butane.pageparser.LabeledFields: android.content.ContentValues cleanupLabeledFields(android.content.ContentValues)>
ignoring: <android.content.ContentValues: java.lang.String getAsString(java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues parseColonLineEndings(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues parseColonLineEndings(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues parseColonLineEndings(android.content.ContentValues)>
ignoring: <android.content.ContentValues: void put(java.lang.String,java.lang.String)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues parseColonLineEndings(android.content.ContentValues)>
ignoring: <java.lang.String: java.lang.String[] split(java.lang.String,int)> -> <org.apac.android.butane.pageparser.Go2Mobile: android.content.ContentValues parseColonLineEndings(android.content.ContentValues)>
ignoring: <java.lang.Object: void <init>()> -> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
ignoring: <java.lang.Object: void <init>()> -> <android.content.ContentResolver: void <init>(android.content.Context)>
ignoring: <android.test.mock.MockContentProvider: void <init>(android.content.Context)> -> <android.content.ContentResolver: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentResolver: void <init>(android.content.Context)>
ignoring: <edu.stanford.stamp.harness.Callback: void <init>()> -> <android.widget.BaseAdapter$1: void <init>(android.widget.BaseAdapter)>
ignoring: <java.lang.Exception: void <init>()> -> <java.lang.RuntimeException: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.RuntimeException: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.net.URL: void <init>(java.lang.String)>
ignoring: <java.net.StampURLInputStream: void <init>()> -> <java.net.URL: java.io.InputStream openStream()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentValues: java.lang.Object get(java.lang.String)>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Object: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Throwable: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Locale: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.StackTraceElement: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Class: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.io.File: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.net.URL: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Package: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.nio.charset.CoderResult: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.nio.charset.CodingErrorAction: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.nio.ByteOrder: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.net.URI: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.FileDescriptor: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.net.Proxy: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.nio.channels.FileChannel$MapMode: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.net.InetAddress: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.security.CodeSigner: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.net.NetworkInterface: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.security.Timestamp: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.View: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Bundle: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.res.Configuration: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Fragment: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.IntentSender: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ComponentName: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.PendingIntent: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ClipData: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.Rect: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Intent$ShortcutIconResource: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.Display: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.res.TypedArray: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.Loader: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.Matrix: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.Point: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Handler: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.WindowId: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.SparseArray: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.DragEvent: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.DisplayMetrics: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.RectF: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.Region: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.accessibility.AccessibilityRecord: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <android.os.Message: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.net.Uri$Builder: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.TypedValue: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.UserHandle: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.Looper: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.res.ColorStateList: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.res.AssetFileDescriptor: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.ParcelFileDescriptor: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentValues: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentProviderResult: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.accounts.Account: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.SyncAdapterType: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ClipData$Item: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ClipDescription: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <android.content.pm.PackageInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.FeatureInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.ResolveInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.util.SparseBooleanArray: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.InputDevice: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.inputmethod.CompletionInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.inputmethod.CorrectionInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.graphics.Paint$FontMetricsInt: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.animation.Transformation: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Thread: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.os.PatternMatcher: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.net.Socket: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Boolean: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.ConfigurationInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.Surface: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.ThreadGroup: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractMap$SimpleImmutableEntry: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractMap$SimpleEntry: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.animation.PropertyValuesHolder: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.net.ServerSocket: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.location.Criteria: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <android.location.Location: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.ServiceState: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.SignalStrength: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.regex.Pattern: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.regex.Matcher: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.app.Notification: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.preference.Preference: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.SmsMessage$SubmitPdu: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.net.http.SslCertificate: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.print.PrintAttributes: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.print.PageRange: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.net.http.SslError: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <javax.security.auth.x500.X500Principal: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.print.PrintAttributes$MediaSize: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.print.PrintAttributes$Resolution: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.print.PrintAttributes$Margins: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.print.PrintDocumentInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.DateFormatSymbols: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.FieldPosition: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.ParsePosition: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.text.AttributedCharacterIterator$Attribute: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Currency: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Character: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Character$Subset: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.StringBuffer: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.reflect.Constructor: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.reflect.Field: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.reflect.Method: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Enum: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.WindowManager$LayoutParams: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.KeyEvent: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.MotionEvent: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.animation.ValueAnimator: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.view.accessibility.AccessibilityEvent: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Byte: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Short: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Integer: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Long: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Float: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.lang.Double: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.math.BigInteger: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.ApplicationInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.PermissionInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.PermissionGroupInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.InstrumentationInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.sqlite.SQLiteDatabase: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractMap: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.cdma.CdmaCellLocation: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.telephony.gsm.GsmCellLocation: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.Hashtable: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.nio.Buffer: java.lang.String toString()>
ignoring: <java.lang.String: void <init>()> -> <java.nio.CharBuffer: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.net.URLConnection: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.ActivityInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.ServiceInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.pm.ProviderInfo: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.sqlite.SQLiteStatement: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.database.sqlite.SQLiteQuery: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.util.AbstractCollection: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.widget.TextView$SavedState: java.lang.String toString()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: int indexOf(int)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)>
ignoring: <java.lang.String: java.lang.String toLowerCase()> -> <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)>
ignoring: <java.lang.String: java.lang.String substring(int)> -> <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)>
ignoring: <java.lang.String: java.lang.String substring(int,int)> -> <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)>
ignoring: <java.lang.String: int indexOf(java.lang.String)> -> <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)>
ignoring: <java.lang.String: int length()> -> <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)>
ignoring: <java.lang.String: int indexOf(java.lang.String,int)> -> <org.apac.android.butane.pageparser.LabeledFields: java.lang.String getLabeledValue(java.lang.String,java.lang.String)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: int indexOf(java.lang.String)>
ignoring: <android.content.ContentProvider: void <init>()> -> <android.test.mock.MockContentProvider: void <init>(android.content.Context)>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.test.mock.MockContentProvider: void <init>(android.content.Context)>
ignoring: <java.io.InputStream: void <init>()> -> <java.net.StampURLInputStream: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.String: int indexOf(java.lang.String,int)>
ignoring: <java.lang.Object: void <init>()> -> <android.content.ContentProvider: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <android.content.ContentProvider: void <init>()>
ignoring: <java.lang.Object: void <init>()> -> <java.io.InputStream: void <init>()>
ignoring: <java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.io.InputStream: void <init>()>
SAVING rel chaIM size: 0
LEAVE: base-java
Exclusive time: 00:00:07:075 hh:mm:ss:ms
Inclusive time: 00:00:07:075 hh:mm:ss:ms
ENTER: annot-java at Fri Jan 31 09:07:58 PST 2014
Unsupported annotation type requestLocationUpdates:(Ljava/lang/String;JFLandroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
Unsupported annotation type requestLocationUpdates:(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
Unsupported annotation type requestSingleUpdate:(Ljava/lang/String;Landroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
Unsupported annotation type requestSingleUpdate:(Landroid/location/Criteria;Landroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
Unsupported annotation type addProximityAlert:(DDFJLandroid/app/PendingIntent;)V@android.location.LocationManager $FINE_LOCATION !INTENT
SAVING rel ArgArgTransfer size: 178
SAVING rel ArgRetTransfer size: 472
SAVING rel ArgArgFlow size: 146
SAVING dom L size: 46
SAVING rel SrcLabel size: 31
SAVING rel SinkLabel size: 15
SAVING rel InLabelArg size: 36
SAVING rel InLabelRet size: 67
SAVING rel OutLabelArg size: 33
SAVING rel OutLabelRet size: 0
LEAVE: annot-java
Exclusive time: 00:00:00:181 hh:mm:ss:ms
Inclusive time: 00:00:00:181 hh:mm:ss:ms
ENTER: contexts-java at Fri Jan 31 09:07:59 PST 2014
numSCCs: 34
SAVING dom C size: 48
SAVING rel CI size: 28
SAVING rel CC size: 47
SAVING rel CH size: 19
SAVING rel CM size: 34
LEAVE: contexts-java
Exclusive time: 00:00:00:180 hh:mm:ss:ms
Inclusive time: 00:00:00:180 hh:mm:ss:ms
ENTER: context-label-java at Fri Jan 31 09:07:59 PST 2014
SAVING dom CL size: 0
SAVING rel CCL size: 0
SAVING rel LCL size: 0
LEAVE: context-label-java
Exclusive time: 00:00:00:096 hh:mm:ss:ms
Inclusive time: 00:00:00:096 hh:mm:ss:ms
ENTER: pre-dlog at Fri Jan 31 09:07:59 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Setting variable ordering to L0_Z0_I0xM0_CL0_V0xV1_U0xU1, done.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/chaIM.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/LCL.bdd is zero.
Stratifying: 
list1:
  list2:
    srcCtxtLabel(cl:CL0) :- LCL(l:L0,cl:CL0), SrcLabel(l:L0).
    sinkCtxtLabel(cl:CL0) :- LCL(l:L0,cl:CL0), SinkLabel(l:L0).
    returnPrim(u:U1,v:U0,i:I0) :- chaIM(i:I0,m:M0), MmethPrimRet(m:M0,z:Z0,v:U0), IinvkPrimRet(i:I0,z:Z0,u:U1).
    param(u:V0,v:V1,i:I0) :- chaIM(i:I0,m:M0), MmethArg(m:M0,z:Z0,u:V0), IinvkArg(i:I0,z:Z0,v:V1).
    return(u:V1,v:V0,i:I0) :- chaIM(i:I0,m:M0), MmethRet(m:M0,z:Z0,v:V0), IinvkRet(i:I0,z:Z0,u:V1).
    paramPrim(u:U0,v:U1,i:I0) :- chaIM(i:I0,m:M0), MmethPrimArg(m:M0,z:Z0,u:U0), IinvkPrimArg(i:I0,z:Z0,v:U1).
done. (10 ms)
Solving: 
done. (1 ms)
SOLVE_TIME=1
MAX_NODES=499979
FINAL_NODES=81447
Rule param(u:V0,v:V1,i:I0) :- chaIM(i:I0,m:M0), MmethArg(m:M0,z:Z0,u:V0), IinvkArg(i:I0,z:Z0,v:V1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule return(u:V1,v:V0,i:I0) :- chaIM(i:I0,m:M0), MmethRet(m:M0,z:Z0,v:V0), IinvkRet(i:I0,z:Z0,u:V1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule paramPrim(u:U0,v:U1,i:I0) :- chaIM(i:I0,m:M0), MmethPrimArg(m:M0,z:Z0,u:U0), IinvkPrimArg(i:I0,z:Z0,v:U1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule returnPrim(u:U1,v:U0,i:I0) :- chaIM(i:I0,m:M0), MmethPrimRet(m:M0,z:Z0,v:U0), IinvkPrimRet(i:I0,z:Z0,u:U1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule srcCtxtLabel(cl:CL0) :- LCL(l:L0,cl:CL0), SrcLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sinkCtxtLabel(cl:CL0) :- LCL(l:L0,cl:CL0), SinkLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Relation param: 0 nodes, 0.0 elements ((none))
Relation return: 0 nodes, 0.0 elements ((none))
Relation paramPrim: 0 nodes, 0.0 elements ((none))
Relation returnPrim: 0 nodes, 0.0 elements ((none))
Relation srcCtxtLabel: 0 nodes, 0.0 elements ((none))
Relation sinkCtxtLabel: 0 nodes, 0.0 elements ((none))
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pre.dlog '
LEAVE: pre-dlog
Exclusive time: 00:00:00:388 hh:mm:ss:ms
Inclusive time: 00:00:00:388 hh:mm:ss:ms
ENTER: typefilter-dlog at Fri Jan 31 09:07:59 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/typefilter.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Setting variable ordering to V0_T0_H0_C0, done.
Stratifying: 
list1:
  list2:
    typeFilter(v:V0,o:C0) :- VT(v:V0,t:T0), HTFilter(h:H0,t:T0), CH(o:C0,h:H0).
done. (11 ms)
Solving: 
done. (15 ms)
SOLVE_TIME=15
MAX_NODES=499979
FINAL_NODES=67036
Rule typeFilter(v:V0,o:C0) :- VT(v:V0,t:T0), HTFilter(h:H0,t:T0), CH(o:C0,h:H0).
   Updates: 1
   Time: 13 ms
   Longest Iteration: 0 (0 ms)
Relation typeFilter: 971 nodes, 3070.0 elements (V0,C0)
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/typefilter.dlog '
LEAVE: typefilter-dlog
Exclusive time: 00:00:00:381 hh:mm:ss:ms
Inclusive time: 00:00:00:381 hh:mm:ss:ms
ENTER: pt-dlog at Fri Jan 31 09:08:00 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pt.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Setting variable ordering to M0_C0xC1xC2_V0xV1_H0xF0_I0, done.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/param.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/return.bdd is zero.
Stratifying: 
list1:
  list2:
    pt(c:C0,v:V0,o:C1) :- Alloc(v:V0,h:H0), MV(m:M0,v:V0), CM(c:C0,m:M0), CC(c:C0,o:C1), CH(o:C1,h:H0).
    loop3:
      loop5:
        loop7:
          loop9:
            loop11:
              loop13:
                pt(c:C0,v:V1,o:C1) :- pt(c:C0,u:V0,o:C1), Assign(v:V1,u:V0), typeFilter(v:V1,o:C1).
              pt(d:C2,u:V1,o:C1) :- pt(c:C0,v:V0,o:C1), param(u:V1,v:V0,i:I0), typeFilter(u:V1,o:C1), CC(c:C0,d:C2), CI(d:C2,i:I0).
            pt(c:C0,y:V1,o2:C2) :- pt(c:C0,x:V0,o1:C1), Load(y:V1,x:V0,f:F0), fpt(o1:C1,f:F0,o2:C2).
          pt(c:C2,u:V1,o:C1) :- pt(d:C0,v:V0,o:C1), return(u:V1,v:V0,i:I0), CI(d:C0,i:I0), CC(c:C2,d:C0), typeFilter(u:V1,o:C1).
        fpt(o1:C2,f:F0,o2:C1) :- pt(c:C0,v:V0,o2:C1), Store(u:V1,f:F0,v:V0), pt(c:C0,u:V1,o1:C2).
      fptStat(f:F0,o:C1) :- pt(_:C0,v:V0,o:C1), StoreStat(f:F0,v:V0).
      pt(c:C1,y:V0,o:C0) :- LoadStat(y:V0,f:F0), fptStat(f:F0,o:C0), MV(m:M0,y:V0), CM(c:C1,m:M0).
done. (18 ms)
Solving: 
done. (42 ms)
SOLVE_TIME=42
MAX_NODES=499979
FINAL_NODES=46124
Rule pt(d:C2,u:V1,o:C1) :- pt(c:C0,v:V0,o:C1), param(u:V1,v:V0,i:I0), typeFilter(u:V1,o:C1), CC(c:C0,d:C2), CI(d:C2,i:I0).
   Updates: 2
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C2,u:V1,o:C1) :- pt(d:C0,v:V0,o:C1), return(u:V1,v:V0,i:I0), CI(d:C0,i:I0), CC(c:C2,d:C0), typeFilter(u:V1,o:C1).
   Updates: 2
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C0,y:V1,o2:C2) :- pt(c:C0,x:V0,o1:C1), Load(y:V1,x:V0,f:F0), fpt(o1:C1,f:F0,o2:C2).
   Updates: 2
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule fptStat(f:F0,o:C1) :- pt(_:C0,v:V0,o:C1), StoreStat(f:F0,v:V0).
   Updates: 2
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule fpt(o1:C2,f:F0,o2:C1) :- pt(c:C0,v:V0,o2:C1), Store(u:V1,f:F0,v:V0), pt(c:C0,u:V1,o1:C2).
   Updates: 2
   Time: 2 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C0,v:V1,o:C1) :- pt(c:C0,u:V0,o:C1), Assign(v:V1,u:V0), typeFilter(v:V1,o:C1).
   Updates: 2
   Time: 5 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C0,v:V0,o:C1) :- Alloc(v:V0,h:H0), MV(m:M0,v:V0), CM(c:C0,m:M0), CC(c:C0,o:C1), CH(o:C1,h:H0).
   Updates: 1
   Time: 16 ms
   Longest Iteration: 0 (0 ms)
Rule pt(c:C1,y:V0,o:C0) :- LoadStat(y:V0,f:F0), fptStat(f:F0,o:C0), MV(m:M0,y:V0), CM(c:C1,m:M0).
   Updates: 2
   Time: 17 ms
   Longest Iteration: 0 (0 ms)
Relation pt: 244 nodes, 23.0 elements (V0,C0,C1)
Relation fpt: 0 nodes, 0.0 elements ((none))
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/pt.dlog '
LEAVE: pt-dlog
Exclusive time: 00:00:00:457 hh:mm:ss:ms
Inclusive time: 00:00:00:457 hh:mm:ss:ms
ENTER: taint-lim-dlog at Fri Jan 31 09:08:00 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Adding missing domain "C2" to bddvarorder.
Setting variable ordering to L0_Z0xZ1_M0_CL0xCL1_C0xC2xC1_V0xV1_U0xU1_F0_I0, done.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/fpt.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/paramPrim.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/returnPrim.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/CCL.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/LCL.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/sinkCtxtLabel.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/srcCtxtLabel.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/OutLabelRet.bdd is zero.
Stratifying: 
list1:
  list2:
    transferRefRef(u:V0,v:V1) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethArg(m:M0,z1:Z1,v:V1).
    flowRefRef(u:V0,v:V1) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethArg(m:M0,z1:Z1,v:V1).
    varInLabel(v:V0,l:L0) :- InLabelArg(l:L0,m:M0,z:Z0), MmethArg(m:M0,z:Z0,v:V0).
    varOutLabel(v:V0,l:L0) :- OutLabelArg(l:L0,m:M0,z:Z0), MmethArg(m:M0,z:Z0,v:V0).
    transferRefRef(u:V0,v:V1) :- ArgRetTransfer(m:M0,z:Z0), MmethArg(m:M0,z:Z0,u:V0), MmethRet(m:M0,_:Z1,v:V1).
    transferObjRef(o:C1,c:C0,v:V1) :- transferRefRef(u:V0,v:V1), pt(c:C0,u:V0,o:C1).
    varOutLabel(v:V0,l:L0) :- OutLabelRet(l:L0,m:M0), MmethRet(m:M0,_:Z0,v:V0).
    sink(o:C1,cl:CL0) :- varOutLabel(v:V0,l:L0), MV(m:M0,v:V0), CM(c:C0,m:M0), pt(c:C0,v:V0,o:C1), CCL(c:C0,cl:CL0), LCL(l:L0,cl:CL0).
    varInLabel(v:V0,l:L0) :- InLabelRet(l:L0,m:M0), MmethRet(m:M0,_:Z0,v:V0).
    labelIn(o:C1,cl:CL0) :- varInLabel(v:V0,l:L0), MV(m:M0,v:V0), CM(c:C0,m:M0), pt(c:C0,v:V0,o:C1), CCL(c:C0,cl:CL0), LCL(l:L0,cl:CL0).
    transferPrimRef(u:U0,v:V0) :- ArgRetTransfer(m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,u:U0), MmethRet(m:M0,_:Z1,v:V0).
    transferPrimPrim(u:U0,v:U1) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethPrimArg(m:M0,z1:Z1,v:U1).
    transferPrimRef(u:U0,v:V0) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethArg(m:M0,z1:Z1,v:V0).
    transferRefPrim(u:V0,v:U0) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethPrimArg(m:M0,z1:Z1,v:U0).
    varOutLabelPrim(v:U0,l:L0) :- OutLabelArg(l:L0,m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,v:U0).
    flowPrimRef(u:U0,v:V0) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethArg(m:M0,z1:Z1,v:V0).
    varInLabelPrim(v:U0,l:L0) :- InLabelArg(l:L0,m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,v:U0).
    flowPrimPrim(u:U0,v:U1) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethPrimArg(m:M0,z1:Z1,v:U1).
    flowRefPrim(u:V0,v:U0) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethPrimArg(m:M0,z1:Z1,v:U0).
    transferPrimPrim(u:U0,v:U1) :- ArgRetTransfer(m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,u:U0), MmethPrimRet(m:M0,_:Z1,v:U1).
    transferRefPrim(u:V0,v:U0) :- ArgRetTransfer(m:M0,z:Z0), MmethArg(m:M0,z:Z0,u:V0), MmethPrimRet(m:M0,_:Z1,v:U0).
    transferObjPrim(o:C1,c:C0,v:U0) :- transferRefPrim(u:V0,v:U0), pt(c:C0,u:V0,o:C1).
    varOutLabelPrim(v:U0,l:L0) :- OutLabelRet(l:L0,m:M0), MmethPrimRet(m:M0,_:Z0,v:U0).
    sinkPrim(c:C0,u:U0,cl:CL0) :- varOutLabelPrim(u:U0,l:L0), CM(c:C0,m:M0), MU(m:M0,u:U0), LCL(l:L0,cl:CL0), CCL(c:C0,cl:CL0).
    varInLabelPrim(v:U0,l:L0) :- InLabelRet(l:L0,m:M0), MmethPrimRet(m:M0,_:Z0,v:U0).
    labelPrim(c:C0,v:U0,cl:CL0) :- varInLabelPrim(v:U0,l:L0), CM(c:C0,m:M0), MU(m:M0,v:U0), LCL(l:L0,cl:CL0), CCL(c:C0,cl:CL0).
    loop3:
      transferObjPrim(o2:C2,c:C1,v:U0) :- transferObjPrim(o1:C0,c:C1,v:U0), fpt(o1:C0,0:F0,o2:C2).
    loop5:
      transferObjRef(o2:C2,c:C1,v:V0) :- transferObjRef(o1:C0,c:C1,v:V0), fpt(o1:C0,0:F0,o2:C2).
    loop7:
      labelIn(o2:C1,l:CL0) :- labelIn(o1:C0,l:CL0), fpt(o1:C0,_:F0,o2:C1).
    label(o:C0,l:CL0) :- labelIn(o:C0,l:CL0).
    labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,_:F0), labelIn(o:C0,l:CL0), pt(c:C1,x:V0,o:C0).
    loop9:
      loop11:
        loop13:
          loop15:
            loop17:
              loop19:
                loop21:
                  loop23:
                    loop25:
                      labelPrim(c:C1,v:U0,l:CL0) :- label(o:C0,l:CL0), transferObjPrim(o:C0,c:C1,v:U0).
                      loop27:
                        loop29:
                          loop31:
                            labelPrim(d:C1,u:U1,l:CL0) :- labelPrim(c:C0,v:U0,l:CL0), paramPrim(u:U1,v:U0,i:I0), CC(c:C0,d:C1), CI(d:C1,i:I0).
                          labelXferOut(o:C1,l:CL0) :- labelPrim(c:C0,u:U0,l:CL0), transferPrimRef(u:U0,v:V0), pt(c:C0,v:V0,o:C1).
                          labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,0:F0), labelXferOut(o:C0,l:CL0), pt(c:C1,x:V0,o:C0).
                        labelXferOut(o2:C1,l:CL0) :- labelXferOut(o1:C0,l:CL0), fpt(o1:C0,0:F0,o2:C1).
                      label(o:C0,l:CL0) :- labelXferOut(o:C0,l:CL0).
                    labelXferOut(o2:C2,l:CL0) :- label(o1:C0,l:CL0), transferObjRef(o1:C0,c:C1,v:V0), pt(c:C1,v:V0,o2:C2).
                  labelPrim(c:C1,u:U1,l:CL0) :- labelPrim(d:C0,v:U0,l:CL0), returnPrim(u:U1,v:U0,i:I0), CI(d:C0,i:I0), CC(c:C1,d:C0).
                labelPrim(c:C0,v:U1,l:CL0) :- labelPrim(c:C0,u:U0,l:CL0), transferPrimPrim(u:U0,v:U1).
              labelPrim(c:C0,v:U0,l:CL0) :- AssignPrim(v:U0,u:U1), labelPrim(c:C0,u:U1,l:CL0).
            labelPrimFldStat(f:F0,l:CL0) :- StoreStatPrim(f:F0,v:U0), labelPrim(_:C0,v:U0,l:CL0).
            labelPrim(c:C0,y:U0,l:CL0) :- LoadStatPrim(y:U0,f:F0), labelPrimFldStat(f:F0,l:CL0), MU(m:M0,y:U0), CM(c:C0,m:M0).
          labelPrimFld(o:C1,f:F0,l:CL0) :- labelPrim(c:C0,v:U0,l:CL0), StorePrim(u:V0,f:F0,v:U0), pt(c:C0,u:V0,o:C1).
          labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,f:F0), labelPrimFld(o:C0,f:F0,l:CL0), pt(c:C1,x:V0,o:C0).
        labelPrim(c:C1,v:U0,l:CL0) :- labelPrimFld(o:C0,0:F0,l:CL0), transferObjPrim(o:C0,c:C1,v:U0).
      labelXferOut(o2:C2,l:CL0) :- labelPrimFld(o1:C0,0:F0,l:CL0), transferObjRef(o1:C0,c:C1,v:V0), pt(c:C1,v:V0,o2:C2).
    sinkPrim(c:C0,u:U0,l:CL0) :- flowPrimPrim(u:U0,v:U1), labelPrim(c:C0,v:U1,l:CL0), sinkCtxtLabel(l:CL0).
    sink(o:C1,l:CL0) :- pt(c:C0,u:V0,o:C1), flowRefPrim(u:V0,v:U0), labelPrim(c:C0,v:U0,l:CL0), sinkCtxtLabel(l:CL0).
    labelRef(c:C0,v:V0,l:CL0) :- pt(c:C0,v:V0,o:C1), label(o:C1,l:CL0).
    sinkPrim(c:C0,u:U0,l:CL0) :- flowPrimRef(u:U0,v:V0), labelRef(c:C0,v:V0,l:CL0), sinkCtxtLabel(l:CL0).
    flow(src:CL1,sink:CL0) :- sinkPrim(d:C0,u:U0,sink:CL0), labelPrim(d:C0,u:U0,src:CL1), srcCtxtLabel(src:CL1).
    sink(o:C1,l:CL0) :- pt(c:C0,u:V0,o:C1), flowRefRef(u:V0,v:V1), labelRef(c:C0,v:V1,l:CL0), sinkCtxtLabel(l:CL0).
    loop33:
      sink(o2:C1,l:CL0) :- sink(o1:C0,l:CL0), fpt(o1:C0,_:F0,o2:C1).
    flow(src:CL1,sink:CL0) :- sink(o:C0,sink:CL0), label(o:C0,src:CL1), srcCtxtLabel(src:CL1).
    flow(src:CL1,sink:CL0) :- sink(o:C0,sink:CL0), labelPrimFld(o:C0,_:F0,src:CL1), srcCtxtLabel(src:CL1).
done. (70 ms)
Solving: 
done. (37 ms)
SOLVE_TIME=37
MAX_NODES=499979
FINAL_NODES=47966
Rule varInLabel(v:V0,l:L0) :- InLabelRet(l:L0,m:M0), MmethRet(m:M0,_:Z0,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varInLabel(v:V0,l:L0) :- InLabelArg(l:L0,m:M0,z:Z0), MmethArg(m:M0,z:Z0,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varInLabelPrim(v:U0,l:L0) :- InLabelRet(l:L0,m:M0), MmethPrimRet(m:M0,_:Z0,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varInLabelPrim(v:U0,l:L0) :- InLabelArg(l:L0,m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varOutLabel(v:V0,l:L0) :- OutLabelRet(l:L0,m:M0), MmethRet(m:M0,_:Z0,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varOutLabel(v:V0,l:L0) :- OutLabelArg(l:L0,m:M0,z:Z0), MmethArg(m:M0,z:Z0,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varOutLabelPrim(v:U0,l:L0) :- OutLabelRet(l:L0,m:M0), MmethPrimRet(m:M0,_:Z0,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule varOutLabelPrim(v:U0,l:L0) :- OutLabelArg(l:L0,m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferRefPrim(u:V0,v:U0) :- ArgRetTransfer(m:M0,z:Z0), MmethArg(m:M0,z:Z0,u:V0), MmethPrimRet(m:M0,_:Z1,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferPrimRef(u:U0,v:V0) :- ArgRetTransfer(m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,u:U0), MmethRet(m:M0,_:Z1,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule flowPrimRef(u:U0,v:V0) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethArg(m:M0,z1:Z1,v:V0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sink(o:C1,cl:CL0) :- varOutLabel(v:V0,l:L0), MV(m:M0,v:V0), CM(c:C0,m:M0), pt(c:C0,v:V0,o:C1), CCL(c:C0,cl:CL0), LCL(l:L0,cl:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sink(o:C1,l:CL0) :- pt(c:C0,u:V0,o:C1), flowRefPrim(u:V0,v:U0), labelPrim(c:C0,v:U0,l:CL0), sinkCtxtLabel(l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sink(o2:C1,l:CL0) :- sink(o1:C0,l:CL0), fpt(o1:C0,_:F0,o2:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sinkPrim(c:C0,u:U0,cl:CL0) :- varOutLabelPrim(u:U0,l:L0), CM(c:C0,m:M0), MU(m:M0,u:U0), LCL(l:L0,cl:CL0), CCL(c:C0,cl:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sinkPrim(c:C0,u:U0,l:CL0) :- flowPrimRef(u:U0,v:V0), labelRef(c:C0,v:V0,l:CL0), sinkCtxtLabel(l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule sinkPrim(c:C0,u:U0,l:CL0) :- flowPrimPrim(u:U0,v:U1), labelPrim(c:C0,v:U1,l:CL0), sinkCtxtLabel(l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferObjPrim(o:C1,c:C0,v:U0) :- transferRefPrim(u:V0,v:U0), pt(c:C0,u:V0,o:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferObjRef(o2:C2,c:C1,v:V0) :- transferObjRef(o1:C0,c:C1,v:V0), fpt(o1:C0,0:F0,o2:C2).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferObjPrim(o2:C2,c:C1,v:U0) :- transferObjPrim(o1:C0,c:C1,v:U0), fpt(o1:C0,0:F0,o2:C2).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule flow(src:CL1,sink:CL0) :- sink(o:C0,sink:CL0), label(o:C0,src:CL1), srcCtxtLabel(src:CL1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule flow(src:CL1,sink:CL0) :- sinkPrim(d:C0,u:U0,sink:CL0), labelPrim(d:C0,u:U0,src:CL1), srcCtxtLabel(src:CL1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule flow(src:CL1,sink:CL0) :- sink(o:C0,sink:CL0), labelPrimFld(o:C0,_:F0,src:CL1), srcCtxtLabel(src:CL1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelIn(o:C1,cl:CL0) :- varInLabel(v:V0,l:L0), MV(m:M0,v:V0), CM(c:C0,m:M0), pt(c:C0,v:V0,o:C1), CCL(c:C0,cl:CL0), LCL(l:L0,cl:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelIn(o2:C1,l:CL0) :- labelIn(o1:C0,l:CL0), fpt(o1:C0,_:F0,o2:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule label(o:C0,l:CL0) :- labelIn(o:C0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelXferOut(o2:C2,l:CL0) :- label(o1:C0,l:CL0), transferObjRef(o1:C0,c:C1,v:V0), pt(c:C1,v:V0,o2:C2).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelXferOut(o:C1,l:CL0) :- labelPrim(c:C0,u:U0,l:CL0), transferPrimRef(u:U0,v:V0), pt(c:C0,v:V0,o:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule label(o:C0,l:CL0) :- labelXferOut(o:C0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelXferOut(o2:C2,l:CL0) :- labelPrimFld(o1:C0,0:F0,l:CL0), transferObjRef(o1:C0,c:C1,v:V0), pt(c:C1,v:V0,o2:C2).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelXferOut(o2:C1,l:CL0) :- labelXferOut(o1:C0,l:CL0), fpt(o1:C0,0:F0,o2:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelRef(c:C0,v:V0,l:CL0) :- pt(c:C0,v:V0,o:C1), label(o:C1,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C0,v:U0,cl:CL0) :- varInLabelPrim(v:U0,l:L0), CM(c:C0,m:M0), MU(m:M0,v:U0), LCL(l:L0,cl:CL0), CCL(c:C0,cl:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C0,v:U0,l:CL0) :- AssignPrim(v:U0,u:U1), labelPrim(c:C0,u:U1,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrimFld(o:C1,f:F0,l:CL0) :- labelPrim(c:C0,v:U0,l:CL0), StorePrim(u:V0,f:F0,v:U0), pt(c:C0,u:V0,o:C1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,f:F0), labelPrimFld(o:C0,f:F0,l:CL0), pt(c:C1,x:V0,o:C0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrimFldStat(f:F0,l:CL0) :- StoreStatPrim(f:F0,v:U0), labelPrim(_:C0,v:U0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C0,y:U0,l:CL0) :- LoadStatPrim(y:U0,f:F0), labelPrimFldStat(f:F0,l:CL0), MU(m:M0,y:U0), CM(c:C0,m:M0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(d:C1,u:U1,l:CL0) :- labelPrim(c:C0,v:U0,l:CL0), paramPrim(u:U1,v:U0,i:I0), CC(c:C0,d:C1), CI(d:C1,i:I0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,u:U1,l:CL0) :- labelPrim(d:C0,v:U0,l:CL0), returnPrim(u:U1,v:U0,i:I0), CI(d:C0,i:I0), CC(c:C1,d:C0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,v:U0,l:CL0) :- label(o:C0,l:CL0), transferObjPrim(o:C0,c:C1,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C0,v:U1,l:CL0) :- labelPrim(c:C0,u:U0,l:CL0), transferPrimPrim(u:U0,v:U1).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,v:U0,l:CL0) :- labelPrimFld(o:C0,0:F0,l:CL0), transferObjPrim(o:C0,c:C1,v:U0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule transferPrimPrim(u:U0,v:U1) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethPrimArg(m:M0,z1:Z1,v:U1).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule transferPrimPrim(u:U0,v:U1) :- ArgRetTransfer(m:M0,z:Z0), MmethPrimArg(m:M0,z:Z0,u:U0), MmethPrimRet(m:M0,_:Z1,v:U1).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule flowRefRef(u:V0,v:V1) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethArg(m:M0,z1:Z1,v:V1).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule flowRefPrim(u:V0,v:U0) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethPrimArg(m:M0,z1:Z1,v:U0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule flowPrimPrim(u:U0,v:U1) :- ArgArgFlow(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethPrimArg(m:M0,z1:Z1,v:U1).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule sink(o:C1,l:CL0) :- pt(c:C0,u:V0,o:C1), flowRefRef(u:V0,v:V1), labelRef(c:C0,v:V1,l:CL0), sinkCtxtLabel(l:CL0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule transferObjRef(o:C1,c:C0,v:V1) :- transferRefRef(u:V0,v:V1), pt(c:C0,u:V0,o:C1).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,_:F0), labelIn(o:C0,l:CL0), pt(c:C1,x:V0,o:C0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule labelPrim(c:C1,y:U0,l:CL0) :- LoadPrim(y:U0,x:V0,0:F0), labelXferOut(o:C0,l:CL0), pt(c:C1,x:V0,o:C0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule transferRefPrim(u:V0,v:U0) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethPrimArg(m:M0,z1:Z1,v:U0).
   Updates: 1
   Time: 2 ms
   Longest Iteration: 0 (0 ms)
Rule transferPrimRef(u:U0,v:V0) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethPrimArg(m:M0,z0:Z0,u:U0), MmethArg(m:M0,z1:Z1,v:V0).
   Updates: 1
   Time: 5 ms
   Longest Iteration: 0 (0 ms)
Rule transferRefRef(u:V0,v:V1) :- ArgRetTransfer(m:M0,z:Z0), MmethArg(m:M0,z:Z0,u:V0), MmethRet(m:M0,_:Z1,v:V1).
   Updates: 1
   Time: 8 ms
   Longest Iteration: 0 (0 ms)
Rule transferRefRef(u:V0,v:V1) :- ArgArgTransfer(m:M0,z0:Z0,z1:Z1), MmethArg(m:M0,z0:Z0,u:V0), MmethArg(m:M0,z1:Z1,v:V1).
   Updates: 1
   Time: 11 ms
   Longest Iteration: 0 (0 ms)
Relation labelRef: 0 nodes, 0.0 elements ((none))
Relation labelPrim: 0 nodes, 0.0 elements ((none))
Relation flow: 0 nodes, 0.0 elements ((none))
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/taint-lim.dlog '
LEAVE: taint-lim-dlog
Exclusive time: 00:00:00:573 hh:mm:ss:ms
Inclusive time: 00:00:00:573 hh:mm:ss:ms
ENTER: jimpleprinter at Fri Jan 31 09:08:01 PST 2014
++stamp.print.allclasses = true
ENTERING JIMPLE PRINTER
EXITING PRINTER
LEAVE: jimpleprinter
Exclusive time: 00:00:05:626 hh:mm:ss:ms
Inclusive time: 00:00:05:626 hh:mm:ss:ms
ENTER: post-dlog at Fri Jan 31 09:08:06 PST 2014
Starting command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog '
Initializing BDD library (500000 nodes, cache size 125000, min free 0.2%)
Using BDD library JFactory 1.28
No machine learning library found, learning disabled.
Eliminating unused domain "C1" from bddvarorder.
Setting variable ordering to Z0_M0_C0_V0_U0_I0_L0_CL0, done.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/chaIM.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/labelRef.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/labelPrim.bdd is zero.
Warning: /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb/OutLabelRet.bdd is zero.
Stratifying: 
list1:
  list2:
    out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), OutLabelArg(l:L0,m:M0,_:Z0).
    out_reachableM(m:M0) :- CM(_:C0,m:M0).
    out_taintedPrimVar(l:CL0,v:U0) :- labelPrim(_:C0,v:U0,l:CL0).
    out_taintedStub(m:M0) :- out_taintedPrimVar(_:CL0,v:U0), MmethPrimArg(m:M0,_:Z0,v:U0), Stub(m:M0).
    out_taintedRefVar(l:CL0,v:V0) :- labelRef(_:C0,v:V0,l:CL0).
    out_taintedStub(m:M0) :- out_taintedRefVar(_:CL0,v:V0), MmethArg(m:M0,_:Z0,v:V0), Stub(m:M0).
    out_taintSrc(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelArg(l:L0,m:M0,_:Z0), SrcLabel(l:L0).
    out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), OutLabelRet(l:L0,m:M0).
    out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelArg(l:L0,m:M0,_:Z0), SinkLabel(l:L0).
    out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelRet(l:L0,m:M0), SinkLabel(l:L0).
    out_taintSrc(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelRet(l:L0,m:M0), SrcLabel(l:L0).
done. (15 ms)
Solving: 
done. (5 ms)
SOLVE_TIME=5
MAX_NODES=499979
FINAL_NODES=14755
Rule out_taintedPrimVar(l:CL0,v:U0) :- labelPrim(_:C0,v:U0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintedRefVar(l:CL0,v:V0) :- labelRef(_:C0,v:V0,l:CL0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSrc(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelArg(l:L0,m:M0,_:Z0), SrcLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelArg(l:L0,m:M0,_:Z0), SinkLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelRet(l:L0,m:M0), SinkLabel(l:L0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), OutLabelRet(l:L0,m:M0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintedStub(m:M0) :- out_taintedRefVar(_:CL0,v:V0), MmethArg(m:M0,_:Z0,v:V0), Stub(m:M0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintedStub(m:M0) :- out_taintedPrimVar(_:CL0,v:U0), MmethPrimArg(m:M0,_:Z0,v:U0), Stub(m:M0).
   Updates: 1
   Time: 0 ms
   Longest Iteration: 0 (0 ms)
Rule out_reachableM(m:M0) :- CM(_:C0,m:M0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSrc(l:L0,m:M0) :- chaIM(_:I0,m:M0), InLabelRet(l:L0,m:M0), SrcLabel(l:L0).
   Updates: 1
   Time: 1 ms
   Longest Iteration: 0 (0 ms)
Rule out_taintSink(l:L0,m:M0) :- chaIM(_:I0,m:M0), OutLabelArg(l:L0,m:M0,_:Z0).
   Updates: 1
   Time: 2 ms
   Longest Iteration: 0 (0 ms)
Relation out_reachableM: 153 nodes, 34.0 elements (M0)
Relation out_taintedRefVar: 0 nodes, 0.0 elements ((none))
Relation out_taintedPrimVar: 0 nodes, 0.0 elements ((none))
Relation out_taintSrc: 0 nodes, 0.0 elements ((none))
Relation out_taintSink: 0 nodes, 0.0 elements ((none))
Relation out_taintedStub: 0 nodes, 0.0 elements ((none))
Finished command: 'java -ea -Xmx4096m -cp /home/obastani/Documents/projects/stamp/shord/bin/stamp.main.jar:/home/obastani/Documents/projects/stamp/shord/lib/soot.jar:/home/obastani/Documents/projects/stamp/shord/lib/commons-lang3-3.1.jar:/home/obastani/Documents/projects/stamp/shord/lib/stamp.chord.jar:/home/obastani/Documents/projects/stamp/shord/lib/automaton.jar:/home/obastani/Documents/projects/stamp/shord/lib/droidrecord_reader.jar -Dverbose=2 -Dbdd=j -Dbasedir=/home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/bddbddb net.sf.bddbddb.Solver /home/obastani/Documents/projects/stamp/shord/stamp_output/_home_obastani_Documents_projects_stamp_stamptest_DarpaApps_1A_Butane/chord_output/dlog/post.dlog '
LEAVE: post-dlog
Exclusive time: 00:00:00:387 hh:mm:ss:ms
Inclusive time: 00:00:00:387 hh:mm:ss:ms
ENTER: post-java at Fri Jan 31 09:08:07 PST 2014
SOLVERGENPATHS
No path solver found so no path visualization could be generated.
To visualize paths run with -Dstamp.backend=solvergen
binding org.apac.android.butane.ReplyEditor$1 org.apac.android.butane.ReplyEditor$org.apac.android.butane.ReplyEditor#java.lang.Object#92
binding org.apac.android.butane.ReplyEditor$2 org.apac.android.butane.ReplyEditor$org.apac.android.butane.ReplyEditor#java.lang.Object#102
binding org.apac.android.butane.ReplyEditor$3 org.apac.android.butane.ReplyEditor$org.apac.android.butane.ReplyEditor#java.lang.Object#110
binding org.apac.android.butane.ReplyEditor$4 org.apac.android.butane.ReplyEditor$org.apac.android.butane.ReplyEditor#java.lang.Object#118
Error in Missing Models Report Generation. Perhaps analysis was run without JCFL?
java.lang.NullPointerException
	at stamp.reporting.MissingModels.generate(MissingModels.java:27)
	at stamp.reporting.XMLReport.write(XMLReport.java:55)
	at stamp.reporting.Postmortem.processReports(Postmortem.java:43)
	at stamp.reporting.Postmortem.run(Postmortem.java:88)
	at shord.project.ClassicProject.runTask(ClassicProject.java:398)
	at shord.project.ClassicProject.runTask(ClassicProject.java:419)
	at shord.project.ClassicProject.run(ClassicProject.java:112)
	at shord.project.Main.run(Main.java:84)
	at shord.project.Main.main(Main.java:55)
Exception in All Missing Models Generation. Maybe was run without JCFL?
java.lang.NullPointerException
	at stamp.reporting.AllMissingModels.generate(AllMissingModels.java:32)
	at stamp.reporting.XMLReport.write(XMLReport.java:55)
	at stamp.reporting.Postmortem.processReports(Postmortem.java:43)
	at stamp.reporting.Postmortem.run(Postmortem.java:88)
	at shord.project.ClassicProject.runTask(ClassicProject.java:398)
	at shord.project.ClassicProject.runTask(ClassicProject.java:419)
	at shord.project.ClassicProject.run(ClassicProject.java:112)
	at shord.project.Main.run(Main.java:84)
	at shord.project.Main.main(Main.java:55)
LEAVE: post-java
Exclusive time: 00:00:02:062 hh:mm:ss:ms
Inclusive time: 00:00:02:062 hh:mm:ss:ms
ENTER: dynfeatures-java at Fri Jan 31 09:08:09 PST 2014
stmt count = 6368
invoke count = 0
field read count = 0
LEAVE: dynfeatures-java
Exclusive time: 00:00:00:004 hh:mm:ss:ms
Inclusive time: 00:00:00:004 hh:mm:ss:ms
Chord run completed at: Jan 31, 2014 9:08:09 AM
Total time: 00:00:20:446 hh:mm:ss:ms
