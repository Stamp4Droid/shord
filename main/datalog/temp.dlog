# abstract objects
# base escaping objects
sink(o,cl) :- varOutLabel(v,l), MV(m,v), CM(c,m), pt(c,v,o), CCL(c,cl), LCL(l,cl).
# conditional escaping
sink(o2,l)  :- pt(c,u,o2), flowRefRef(u,v), pt(c,v,o1), label(o1,l), sinkCtxtLabel(l).
# nested escaping (regular and conditional)
sink(o2,l) :- sink(o1,l), fpt(o1,_,o2).

# passthroughs

# base cases
transferObjRef(o,c,v)   :- transferRefRef(u,v), pt(c,u,o).
# nested entry: behaves like nested escaping
transferObjRef(o2,c,v)  :- transferObjRef(o1,c,v), fpt(o1,0,o2).

# complete flow

# basic connection of tainting and escaping
flow(src,sink) :- sink(o,sink), label(o,src), srcCtxtLabel(src).

# (forward) label flow
# abstract objects
# label introduction
labelIn(o,cl)      :- varInLabel(v,l), MV(m,v), CM(c,m), pt(c,v,o), CCL(c,cl), LCL(l,cl).
# nested tainting
labelIn(o2,l)      :- labelIn(o1,l), fpt(o1,_,o2).
label(o,l)         :- labelIn(o,l).
# passthrough handling
labelXferOut(o2,l) :- label(o1,l), transferObjRef(o1,c,v), pt(c,v,o2).
label(o,l)         :- labelXferOut(o,l).
# nested passthrough exit
labelXferOut(o2,l) :- labelXferOut(o1,l), fpt(o1,0,o2).


