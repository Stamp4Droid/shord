###################
# CONFIGURATION
###################

# name=cfl-taint-full-active-dlog

.include "Z.dom"
.include "M.dom"
.include "C.dom"
.include "V.dom"
.include "U.dom"
.include "F.dom"
.include "I.dom"
.include "CL.dom"

.bddvarorder Z0xZ1_M0_CL0xCL1_C0xC1xC2_V0xV1_U0xU1_F0_I0

###################
# INPUT: TAINT RELATIONS
###################

pt(c:C,v:V,o:C)    input
fpt(o1:C,f:F,o2:C) input

PtFull(c:C,v:V,o:C)    input
FptFull(o1:C,f:F,o2:C) input

LoadPrimCtxt(c:C,v:U,u:V,f:F) input
LoadStatPrimCtxt(c:C,v:U,f:F) input
StorePrimCtxt(c:C,v:V,f:F,u:U) input
StoreStatPrimCtxt(c:C,f:F,v:U) input

AssignPrimCtxt(c:C,v:U,u:U) input
AssignPrimCCtxt(c:C,v:U,d:C,u:U) input

# Src label
Src2RefT(c:C,cl:CL,v:V) input
Src2PrimT(c:C,cl:CL,v:U) input

# Sink label
Sink2RefT(c:C,cl:CL,v:V) input
Sink2PrimT(c:C,cl:CL,v:U) input

# Sink full label (out labels)
SinkF2RefF(c:C,cl:CL,v:V) input
SinkF2PrimF(c:C,cl:CL,v:U) input

# Transfer
Ref2RefT(c:C,v:V,u:V) input
Ref2PrimT(c:C,v:V,u:U) input
Prim2RefT(c:C,v:U,u:V) input
Prim2PrimT(c:C,v:U,u:U) input

# Flow (!)
Ref2RefF(c:C,v:V,u:V) input
Ref2PrimF(c:C,v:V,u:U) input
Prim2RefF(c:C,v:U,u:V) input
Prim2PrimF(c:C,v:U,u:U) input

Obj2RefT(c:C,o:C,v:V) input
Obj2PrimT(c:C,o:C,v:U) input

Src2ObjT(cl:CL,o:C) input
Sink2ObjT(cl:CL,o:C) input

# Sink_full-obj flow
SinkF2Obj(cl:CL,o:C) input

# Sink_full-prim flow
SinkF2Prim(c:C,cl:CL,v:U) input

Src2Sink(src:CL,sink:CL) input

# Src-obj flow

Src2Obj(cl:CL,o:C) input
Src2ObjX(cl:CL,o2:C) input

# Sink-obj flow

Sink2Obj(cl:CL,o:C) input
Sink2ObjX(cl:CL,o2:C) input

# Src-prim flow

Src2Prim(c:C,cl:CL,v:U) input
Src2PrimFld(cl:CL,o:C,f:F) input
Src2PrimFldStat(cl:CL,f:F) input

# Sink-prim flow

Sink2Prim(c:C,cl:CL,v:U) input
Sink2PrimFld(cl:CL,o:C,f:F) input
Sink2PrimFldStat(cl:CL,f:F) input

flow4(src:CL,sink:CL) input

###################
# INPUT: PARTIAL FLOW RELATIONS
###################

Assign(v:V,u:V) input              # v = u
param(u:V,v:V,i:I)  input   # u is the formal parameter, v is actual arg, i is invocation stmt
return(u:V,v:V,i:I) input   # u is the lhs at callsite, v is the return var, i is invocation stmt
Store(v:V,f:F,u:V) input           # v.f = u
Load(v:V,u:V,f:F) input            # v = u.f
CI(c:C,i:I) input # stmt i is the top element in the k-limited callstack c
CC(c:C,d:C) input # there exists i s.t. c++[i] = d

PreFlowsToA(c:C,o:C,v:V) input
PreFlowsToR(c:C,o:C,v:V) input
PostFlowsToA(c:C,v:V,d:C,u:V) input
PostFlowsToR(c:C,v:V,d:C,u:V) input
MidFlowsToAA(c:C,v:V,d:C,u:V) input
MidFlowsToAR(c:C,v:V,d:C,u:V) input
MidFlowsToRA(c:C,v:V,d:C,u:V) input
MidFlowsToRR(c:C,v:V,d:C,u:V) input

typeFilter(v:V,o:C) input   # type wise, v can point-to o

PreFlowsToFullA(c:C,o:C,v:V) input
PreFlowsToFullR(c:C,o:C,v:V) input
Transfer(c:C,v:V,u:V) input

###################
# OUTPUT: ACTIVE OBJS AND REFS
###################

Varg(v:V,c:C) input
Vret(v:V,c:C) input

###################
# OUTPUT: ACTIVE OBJS AND REFS
###################

ActiveRef(c:C,v:V) output
ActiveObj(o:C) output

ActiveVarg(v:V) output
ActiveVret(v:V) output

###################
# OUTPUT: ACTIVE PARTIAL FLOW RELATIONS
###################

PreFlowsToAActive(c:C,o:C,v:V) output
PreFlowsToRActive(c:C,o:C,v:V) output
PostFlowsToAActive(c:C,v:V,d:C,u:V) output
PostFlowsToRActive(c:C,v:V,d:C,u:V) output
MidFlowsToAAActive(c:C,v:V,d:C,u:V) output
MidFlowsToARActive(c:C,v:V,d:C,u:V) output
MidFlowsToRAActive(c:C,v:V,d:C,u:V) output
MidFlowsToRRActive(c:C,v:V,d:C,u:V) output

typeFilterActive(v:V,o:C) output   # type wise, v can point-to o

PreFlowsToFullAActive(c:C,o:C,v:V) output
PreFlowsToFullRActive(c:C,o:C,v:V) output
TransferActive(c:C,v:V,u:V) output
TransferActive2(v:V,u:V) output

PtFullActive(c:C,v:V,o:C) output
FptFullActive(o1:C,f:F,o2:C) output

###################
# RULES: ACTIVE VARG AND VRET
###################

ActiveVarg(v) :- Varg(v,c), ActiveRef(c,v).
ActiveVret(v) :- Vret(v,c), ActiveRef(c,v).

###################
# RULES: OBJECT ANNOTATIONS
###################

ActiveRef(c,v) :- Obj2RefT(c,o,u), PtFull(c,v,o), Ref2RefT(c,v,u). # pt is backwards
ActiveObj(o) :- Obj2RefT(c,o,u), PtFull(c,v,o), Ref2RefT(c,v,u). # pt is backwards

ActiveRef(c,v) :- Obj2PrimT(c,o,u), PtFull(c,v,o), Ref2PrimT(c,v,u). # pt is backwards
ActiveObj(o) :- Obj2PrimT(c,o,u), PtFull(c,v,o), Ref2PrimT(c,v,u). # pt is backwards

ActiveObj(o2) :- Obj2RefT(c,o1,v), FptFull(o2,0,o1), Obj2RefT(c,o2,v). # fpt is backwards
ActiveObj(o1) :- Obj2RefT(c,o1,v), FptFull(o2,0,o1), Obj2RefT(c,o2,v). # fpt is backwards

ActiveObj(o2) :- Obj2PrimT(c,o1,v), FptFull(o2,0,o1), Obj2PrimT(c,o2,v). # fpt is backwards
ActiveObj(o1) :- Obj2PrimT(c,o1,v), FptFull(o2,0,o1), Obj2PrimT(c,o2,v). # fpt is backwards

ActiveRef(c,v) :- Src2ObjT(cl,o), Src2RefT(c,cl,v), PtFull(c,v,o).
ActiveObj(o) :- Src2ObjT(cl,o), Src2RefT(c,cl,v), PtFull(c,v,o).

ActiveObj(o2) :- Src2ObjT(cl,o2), Src2ObjT(cl,o1), FptFull(o1,_,o2).
ActiveObj(o1) :- Src2ObjT(cl,o2), Src2ObjT(cl,o1), FptFull(o1,_,o2).

ActiveRef(c,v) :- Sink2ObjT(cl,o), Sink2RefT(c,cl,v), PtFull(c,v,o).
ActiveObj(o) :- Sink2ObjT(cl,o), Sink2RefT(c,cl,v), PtFull(c,v,o).

ActiveObj(o2) :- Sink2ObjT(cl,o2), Sink2ObjT(cl,o1), FptFull(o1,_,o2).
ActiveObj(o1) :- Sink2ObjT(cl,o2), Sink2ObjT(cl,o1), FptFull(o1,_,o2).

ActiveRef(c,v) :- SinkF2Obj(cl,o), SinkF2RefF(c,cl,v), PtFull(c,v,o).
ActiveObj(o) :- SinkF2Obj(cl,o), SinkF2RefF(c,cl,v), PtFull(c,v,o).

ActiveRef(c,v) :- SinkF2Obj(cl,o2), Sink2Obj(cl,o1), PtFull(c,v,o1), Ref2RefF(c,u,v), PtFull(c,u,o2). # first pt, Ref2RefF are backwards
ActiveObj(o2) :- SinkF2Obj(cl,o2), Sink2Obj(cl,o1), PtFull(c,v,o1), Ref2RefF(c,u,v), PtFull(c,u,o2). # first pt, Ref2RefF are backwards

ActiveRef(c,u) :- SinkF2Obj(cl,o), Sink2Prim(c,cl,v), Ref2PrimF(c,u,v), PtFull(c,u,o). # Ref2PrimF is backwards
ActiveObj(o) :- SinkF2Obj(cl,o), Sink2Prim(c,cl,v), Ref2PrimF(c,u,v), PtFull(c,u,o). # Ref2PrimF is backwards

ActiveObj(o2) :- SinkF2Obj(cl,o2), SinkF2Obj(cl,o1), FptFull(o1,_,o2).
ActiveObj(o1) :- SinkF2Obj(cl,o2), SinkF2Obj(cl,o1), FptFull(o1,_,o2).

ActiveRef(c,v) :- SinkF2Prim(c,cl,u), Sink2Obj(cl,o), PtFull(c,v,o), Prim2RefF(c,u,v). # pt, Prim2RefF are backwards
ActiveObj(o) :- SinkF2Prim(c,cl,u), Sink2Obj(cl,o), PtFull(c,v,o), Prim2RefF(c,u,v). # pt, Prim2RefF are backwards

ActiveRef(c,v) :- Src2ObjX(cl,o2), Src2Obj(cl,o1), Obj2RefT(c,o1,v), PtFull(c,v,o2).
ActiveObj(o2) :- Src2ObjX(cl,o2), Src2Obj(cl,o1), Obj2RefT(c,o1,v), PtFull(c,v,o2).

ActiveRef(c,u) :- Src2ObjX(cl,o), Src2Prim(c,cl,v), Prim2RefT(c,v,u), PtFull(c,u,o).
ActiveObj(o) :- Src2ObjX(cl,o), Src2Prim(c,cl,v), Prim2RefT(c,v,u), PtFull(c,u,o).

ActiveRef(c,v) :- Src2ObjX(cl,o2), Src2PrimFld(cl,o1,0), Obj2RefT(c,o1,v), PtFull(c,v,o2).
ActiveObj(o2) :- Src2ObjX(cl,o2), Src2PrimFld(cl,o1,0), Obj2RefT(c,o1,v), PtFull(c,v,o2).

ActiveObj(o1) :- Src2ObjX(cl,o2), Src2ObjX(cl,o1), FptFull(o1,0,o2).
ActiveObj(o2) :- Src2ObjX(cl,o2), Src2ObjX(cl,o1), FptFull(o1,0,o2).

ActiveRef(c,v) :- Sink2ObjX(cl,o2), Sink2Obj(cl,o1), Obj2RefT(c,o1,v), PtFull(c,v,o2).
ActiveObj(o2) :- Sink2ObjX(cl,o2), Sink2Obj(cl,o1), Obj2RefT(c,o1,v), PtFull(c,v,o2).

ActiveRef(c,u) :- Sink2ObjX(cl,o), Sink2Prim(c,cl,v), Prim2RefT(c,v,u), PtFull(c,u,o).
ActiveObj(o) :- Sink2ObjX(cl,o), Sink2Prim(c,cl,v), Prim2RefT(c,v,u), PtFull(c,u,o).

ActiveRef(c,v) :- Sink2ObjX(cl,o2), Sink2PrimFld(cl,o1,0), Obj2RefT(c,o1,v), PtFull(c,v,o2).
ActiveObj(o2) :- Sink2ObjX(cl,o2), Sink2PrimFld(cl,o1,0), Obj2RefT(c,o1,v), PtFull(c,v,o2).

ActiveObj(o1) :- Sink2ObjX(cl,o2), Sink2ObjX(cl,o1), FptFull(o1,0,o2).
ActiveObj(o2) :- Sink2ObjX(cl,o2), Sink2ObjX(cl,o1), FptFull(o1,0,o2).

ActiveRef(c,v) :- Src2Prim(c,cl,u), Src2ObjT(cl,o), PtFull(c,v,o), LoadPrimCtxt(c,u,v,_). # pt is backwards, LoadPrimCtxt is flipped
ActiveObj(o) :- Src2Prim(c,cl,u), Src2ObjT(cl,o), PtFull(c,v,o), LoadPrimCtxt(c,u,v,_). # pt is backwards, LoadPrimCtxt is flipped

ActiveRef(c,v) :- Src2Prim(c,cl,u), Src2ObjX(cl,o), PtFull(c,v,o), LoadPrimCtxt(c,u,v,0). # pt is backwards, LoadPrimCtxt is flipped
ActiveObj(o) :- Src2Prim(c,cl,u), Src2ObjX(cl,o), PtFull(c,v,o), LoadPrimCtxt(c,u,v,0). # pt is backwards, LoadPrimCtxt is flipped

ActiveRef(c,v) :- Src2Prim(c,cl,u), Src2PrimFld(cl,o,f), PtFull(c,v,o), LoadPrimCtxt(c,u,v,f). # pt is backwards, LoadPrim is flipped
ActiveObj(o) :- Src2Prim(c,cl,u), Src2PrimFld(cl,o,f), PtFull(c,v,o), LoadPrimCtxt(c,u,v,f). # pt is backwards, LoadPrim is flipped

ActiveRef(c,u) :- Src2PrimFld(cl,o,f), Src2Prim(c,cl,v), StorePrimCtxt(c,u,f,v), PtFull(c,u,o). # StorePrimCtxt is flipped
ActiveObj(o) :- Src2PrimFld(cl,o,f), Src2Prim(c,cl,v), StorePrimCtxt(c,u,f,v), PtFull(c,u,o). # StorePrimCtxt is flipped

ActiveRef(c,v) :- Sink2Prim(c,cl,u), Sink2ObjT(cl,o), PtFull(c,v,o), LoadPrimCtxt(c,u,v,_). # pt is backwards, LoadPrimCtxt is flipped
ActiveObj(o) :- Sink2Prim(c,cl,u), Sink2ObjT(cl,o), PtFull(c,v,o), LoadPrimCtxt(c,u,v,_). # pt is backwards, LoadPrimCtxt is flipped

ActiveRef(c,v) :- Sink2Prim(c,cl,u), Sink2ObjX(cl,o), PtFull(c,v,o), LoadPrimCtxt(c,u,v,0). # pt is backwards, LoadPrimCtxt is flipped
ActiveObj(o) :- Sink2Prim(c,cl,u), Sink2ObjX(cl,o), PtFull(c,v,o), LoadPrimCtxt(c,u,v,0). # pt is backwards, LoadPrimCtxt is flipped

ActiveRef(c,v) :- Sink2Prim(c,cl,u), Sink2PrimFld(cl,o,f), PtFull(c,v,o), LoadPrimCtxt(c,u,v,f). # pt is backwards, LoadPrim is flipped
ActiveObj(o) :- Sink2Prim(c,cl,u), Sink2PrimFld(cl,o,f), PtFull(c,v,o), LoadPrimCtxt(c,u,v,f). # pt is backwards, LoadPrim is flipped

ActiveRef(c,u) :- Sink2PrimFld(cl,o,f), Sink2Prim(c,cl,v), StorePrimCtxt(c,u,f,v), PtFull(c,u,o). # StorePrimCtxt is flipped
ActiveObj(o) :- Sink2PrimFld(cl,o,f), Sink2Prim(c,cl,v), StorePrimCtxt(c,u,f,v), PtFull(c,u,o). # StorePrimCtxt is flipped

###################
# RULES: INPUT
###################

PtFullActive(d,u,o) :- PtFull(d,u,o), ActiveRef(d,u), ActiveObj(o).
FptFullActive(o1,f,o2) :- FptFull(o1,f,o2), ActiveObj(o1), ActiveObj(o2).

###################
# RULES: EXTRA
###################

TransferActive2(v,u) :- TransferActive(_,v,u).

###################
# RULES: PARTIAL FLOWS
###################

# 1) o -> v_c
# 2) o -> v_c -> u_c -> w_d
PostFlowsToAActive(d,w,c,u) :- PreFlowsToAActive(d,o,w), pt(c,v,o), Store(u,_,v), PostFlowsToA(d,w,c,u).
PostFlowsToRActive(d,w,c,u) :- PreFlowsToRActive(d,o,w), pt(c,v,o), Store(u,_,v), PostFlowsToR(d,w,c,u).
# 3) o1 -> v_c -> u_c -> o2 -> w_c
PreFlowsToAActive(c,o2,w) :- PreFlowsToAActive(c,o1,w), pt(c,v,o1), Store(u,_,v), pt(c,u,o2), PreFlowsToA(c,o2,w).
PreFlowsToRActive(c,o2,w) :- PreFlowsToRActive(c,o1,w), pt(c,v,o1), Store(u,_,v), pt(c,u,o2), PreFlowsToR(c,o2,w).

# 2a) v_c -> u_d -> w_d
PostFlowsToAActive(c,v,d,u) :- PostFlowsToAActive(c,v,d,w), PostFlowsToA(c,v,d,u), Assign(w,u).
PostFlowsToRActive(c,v,d,u) :- PostFlowsToRActive(c,v,d,w), PostFlowsToR(c,v,d,u), Assign(w,u).

# 2b) v_c -> u_d -> w_b
PostFlowsToAActive(c,v,d,u) :- PostFlowsToAActive(c,v,b,w), PostFlowsToA(c,v,d,u), param(w,u,i), CC(d,b), CI(b,i).
PostFlowsToAActive(c,v,d,u) :- PostFlowsToAActive(c,v,b,w), PostFlowsToA(c,v,d,u), return(w,u,i), CC(b,d), CI(d,i).
PostFlowsToRActive(c,v,d,u) :- PostFlowsToRActive(c,v,b,w), PostFlowsToR(c,v,d,u), param(w,u,i), CC(d,b), CI(b,i).
PostFlowsToRActive(c,v,d,u) :- PostFlowsToRActive(c,v,b,w), PostFlowsToR(c,v,d,u), return(w,u,i), CC(b,d), CI(d,i).

# 3) v_c -> u_d -> w_d -> o -> x_b -> y_b
PostFlowsToAActive(c,v,d,u) :- PostFlowsToAActive(c,v,b,y), PostFlowsToA(c,v,d,u), Store(w,f,u), pt(d,w,o), pt(b,x,o), Load(y,x,f).
PostFlowsToRActive(c,v,d,u) :- PostFlowsToRActive(c,v,b,y), PostFlowsToR(c,v,d,u), Store(w,f,u), pt(d,w,o), pt(b,x,o), Load(y,x,f).

# 4) v_c -> o -> u_d -> w_d
PreFlowsToAActive(c,o,v) :- PostFlowsToAActive(c,v,d,w), PreFlowsToA(c,o,v), pt(d,u,o), Load(w,u,_).
PreFlowsToRActive(c,o,v) :- PostFlowsToRActive(c,v,d,w), PreFlowsToR(c,o,v), pt(d,u,o), Load(w,u,_).

# 5) v_c -> u_d -> w_d
PostFlowsToAActive(c,v,d,u) :- PostFlowsToAActive(c,v,d,w), PostFlowsToA(c,v,d,u), Load(w,u,_).
PostFlowsToRActive(c,v,d,u) :- PostFlowsToRActive(c,v,d,w), PostFlowsToR(c,v,d,u), Load(w,u,_).

# 1) v_c -> u_d
PostFlowsToAActive(c,v,d,u) :- MidFlowsToAAActive(c,v,d,u), PostFlowsToA(c,v,d,u), Varg(u,d).
PostFlowsToAActive(c,v,d,u) :- MidFlowsToARActive(c,v,d,u), PostFlowsToA(c,v,d,u), Vret(u,d).
PostFlowsToAActive(c,v,d,u) :- MidFlowsToARActive(c,v,d,u), PostFlowsToA(c,v,d,u), Vret(u,d).
PostFlowsToRActive(c,v,d,u) :- MidFlowsToRAActive(c,v,d,u), PostFlowsToR(c,v,d,u), Varg(u,d).
PostFlowsToRActive(c,v,d,u) :- MidFlowsToRRActive(c,v,d,u), PostFlowsToR(c,v,d,u), Vret(u,d).

# 2) v_c -> u_d -> w_d -> x_b
PostFlowsToAActive(c,v,d,u) :- MidFlowsToAAActive(c,v,b,x), PostFlowsToA(c,v,d,u), Store(w,_,u), PostFlowsToA(b,x,d,w).
PostFlowsToAActive(b,x,d,w) :- MidFlowsToAAActive(c,v,b,x), PostFlowsToA(c,v,d,u), Store(w,_,u), PostFlowsToA(b,x,d,w).

PostFlowsToAActive(c,v,d,u) :- MidFlowsToARActive(c,v,b,x), PostFlowsToA(c,v,d,u), Store(w,_,u), PostFlowsToR(b,x,d,w).
PostFlowsToRActive(b,x,d,w) :- MidFlowsToARActive(c,v,b,x), PostFlowsToA(c,v,d,u), Store(w,_,u), PostFlowsToR(b,x,d,w).

PostFlowsToRActive(c,v,d,u) :- MidFlowsToRAActive(c,v,b,x), PostFlowsToR(c,v,d,u), Store(w,_,u), PostFlowsToA(b,x,d,w).
PostFlowsToAActive(b,x,d,w) :- MidFlowsToRAActive(c,v,b,x), PostFlowsToR(c,v,d,u), Store(w,_,u), PostFlowsToA(b,x,d,w).

PostFlowsToRActive(c,v,d,u) :- MidFlowsToRRActive(c,v,b,x), PostFlowsToR(c,v,d,u), Store(w,_,u), PostFlowsToR(b,x,d,w).
PostFlowsToRActive(b,x,d,w) :- MidFlowsToRRActive(c,v,b,x), PostFlowsToR(c,v,d,u), Store(w,_,u), PostFlowsToR(b,x,d,w).

# 3) v_c -> u_d -> w_d -> o -> x_b
PostFlowsToAActive(c,v,d,u) :- MidFlowsToAAActive(c,v,b,x), PostFlowsToA(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToA(b,o,x).
PreFlowsToAActive(b,o,x) :- MidFlowsToAAActive(c,v,b,x), PostFlowsToA(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToA(b,o,x).

PostFlowsToAActive(c,v,d,u) :- MidFlowsToARActive(c,v,b,x), PostFlowsToA(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToR(b,o,x).
PreFlowsToRActive(b,o,x) :- MidFlowsToARActive(c,v,b,x), PostFlowsToA(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToR(b,o,x).

PostFlowsToRActive(c,v,d,u) :- MidFlowsToRAActive(c,v,b,x), PostFlowsToR(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToA(b,o,x).
PreFlowsToAActive(b,o,x) :- MidFlowsToRAActive(c,v,b,x), PostFlowsToR(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToA(b,o,x).

PostFlowsToRActive(c,v,d,u) :- MidFlowsToRRActive(c,v,b,x), PostFlowsToR(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToR(b,o,x).
PreFlowsToRActive(b,o,x) :- MidFlowsToRRActive(c,v,b,x), PostFlowsToR(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToR(b,o,x).

# 4) v_c -> o -> u_d
PreFlowsToAActive(c,o,v) :- MidFlowsToAAActive(c,v,d,u), PreFlowsToA(c,o,v), PreFlowsToA(d,o,u).
PreFlowsToAActive(d,o,u) :- MidFlowsToAAActive(c,v,d,u), PreFlowsToA(c,o,v), PreFlowsToA(d,o,u).

PreFlowsToAActive(c,o,v) :- MidFlowsToARActive(c,v,d,u), PreFlowsToA(c,o,v), PreFlowsToR(d,o,u).
PreFlowsToRActive(d,o,u) :- MidFlowsToARActive(c,v,d,u), PreFlowsToA(c,o,v), PreFlowsToR(d,o,u).

PreFlowsToRActive(c,o,v) :- MidFlowsToRAActive(c,v,d,u), PreFlowsToR(c,o,v), PreFlowsToA(d,o,u).
PreFlowsToAActive(d,o,u) :- MidFlowsToRAActive(c,v,d,u), PreFlowsToR(c,o,v), PreFlowsToA(d,o,u).

PreFlowsToRActive(c,o,v) :- MidFlowsToRRActive(c,v,d,u), PreFlowsToR(c,o,v), PreFlowsToR(d,o,u).
PreFlowsToRActive(d,o,u) :- MidFlowsToRRActive(c,v,d,u), PreFlowsToR(c,o,v), PreFlowsToR(d,o,u).

###################
# RULES: FULL FLOWS
###################

# full flows

PreFlowsToAActive(c,o,v) :- PreFlowsToFullAActive(c,o,v), PreFlowsToA(c,o,v).
PreFlowsToRActive(c,o,v) :- PreFlowsToFullRActive(c,o,v), PreFlowsToR(c,o,v).

PreFlowsToAActive(c,o,v) :- PreFlowsToFullAActive(d,o,w), PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAA(c,u,d,w).
TransferActive(c,v,u) :- PreFlowsToFullAActive(d,o,w), PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAA(c,u,d,w).
MidFlowsToAAActive(c,u,d,w) :- PreFlowsToFullAActive(d,o,w), PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAA(c,u,d,w).

PreFlowsToAActive(c,o,v) :- PreFlowsToFullAActive(d,o,w), PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAR(c,u,d,w).
TransferActive(c,v,u) :- PreFlowsToFullAActive(d,o,w), PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAR(c,u,d,w).
MidFlowsToARActive(c,u,d,w) :- PreFlowsToFullAActive(d,o,w), PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAR(c,u,d,w).

PreFlowsToRActive(c,o,v) :- PreFlowsToFullRActive(d,o,w), PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRA(c,u,d,w).
TransferActive(c,v,u) :- PreFlowsToFullRActive(d,o,w), PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRA(c,u,d,w).
MidFlowsToRAActive(c,u,d,w) :- PreFlowsToFullRActive(d,o,w), PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRA(c,u,d,w).

PreFlowsToRActive(c,o,v) :- PreFlowsToFullRActive(d,o,w), PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRR(c,u,d,w).
TransferActive(c,v,u) :- PreFlowsToFullRActive(d,o,w), PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRR(c,u,d,w).
MidFlowsToRRActive(c,u,d,w) :- PreFlowsToFullRActive(d,o,w), PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRR(c,u,d,w).

###################
# RULES: OUTPUT
###################

PreFlowsToFullAActive(c,o,v) :- PtFullActive(d,u,o), PreFlowsToFullA(c,o,v), PostFlowsToA(c,v,d,u), typeFilter(u,o).
typeFilterActive(u,o) :- PtFullActive(d,u,o), PreFlowsToFullA(c,o,v), PostFlowsToA(c,v,d,u), typeFilter(u,o).

PreFlowsToFullAActive(c,o,v) :- PtFullActive(d,u,o), PreFlowsToFullA(c,o,v), PostFlowsToA(c,v,d,u), typeFilter(u,o).
PostFlowsToAActive(c,v,d,u) :- PtFullActive(d,u,o), PreFlowsToFullA(c,o,v), PostFlowsToA(c,v,d,u), typeFilter(u,o).
typeFilterActive(u,o) :- PtFullActive(d,u,o), PreFlowsToFullA(c,o,v), PostFlowsToA(c,v,d,u), typeFilter(u,o).

PreFlowsToFullRActive(c,o,v) :- PtFullActive(d,u,o), PreFlowsToFullR(c,o,v), PostFlowsToR(c,v,d,u), typeFilter(u,o).
PostFlowsToRActive(c,v,d,u) :- PtFullActive(d,u,o), PreFlowsToFullR(c,o,v), PostFlowsToR(c,v,d,u), typeFilter(u,o).
typeFilterActive(u,o) :- PtFullActive(d,u,o), PreFlowsToFullR(c,o,v), PostFlowsToR(c,v,d,u), typeFilter(u,o).

PtFullActive(c,v,o2) :- FptFullActive(o1,f,o2), PtFull(c,v,o2), Store(u,f,v), PtFull(c,u,o1).
PtFullActive(c,u,o1) :- FptFullActive(o1,f,o2), PtFull(c,v,o2), Store(u,f,v), PtFull(c,u,o1).
