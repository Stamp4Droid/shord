###################
# CONFIGURATION
###################

# name=cfl-new-dlog

.include "Z.dom"
.include "M.dom"
.include "C.dom"
.include "V.dom"
.include "U.dom"
.include "F.dom"
.include "I.dom"
.include "L.dom"
.include "CL.dom"

.bddvarorder L0_Z0xZ1_M0_CL0xCL1_C0xC1xC2_V0xV1_U0xU1_F0_I0


###################
# INPUT
###################

pt(c:C,v:V,o:C)    input
fpt(o1:C,f:F,o2:C) input

AssignPrim(v:U,u:U)     input # v = u
LoadPrim(y:U,x:V,f:F)   input # y = x.f
StorePrim(u:V,f:F,v:U)  input # u.f = v
LoadStatPrim(y:U,f:F)   input # y = f
StoreStatPrim(f:F,v:U)  input # f = v

paramPrim(u:U,v:U,i:I)  input # u: formal param, v: actual arg, i: invocation stmt
returnPrim(u:U,v:U,i:I) input # u: lhs at callsite, v: return var, i: invocation stmt

MU(m:M,u:U) input # u is a prim type variable in m
MV(m:M,v:V) input # v is a ref type variable in m
CM(c:C,m:M) input # c is a context of method m
CI(c:C,i:I) input # stmt i is the top element in the k-limited callstack c
CC(c:C,d:C) input # there exists i s.t. c++[i] = d

CCL(c:C,cl:CL) input 
LCL(l:L,cl:CL) input

srcCtxtLabel(l:CL) input
sinkCtxtLabel(l:CL) input

InLabelRet(l:L,m:M)           input
InLabelArg(l:L,m:M,z:Z)       input
OutLabelRet(l:L,m:M)          input
OutLabelArg(l:L,m:M,z:Z)      input
ArgRetTransfer(m:M,z:Z)       input
ArgArgTransfer(m:M,z0:Z,z1:Z) input
ArgArgFlow(m:M,z0:Z,z1:Z)     input

MmethArg(m:M,z:Z,v:V)     input
MmethRet(m:M,z:Z,v:V)     input
MmethPrimArg(m:M,z:Z,u:U) input
MmethPrimRet(m:M,z:Z,u:U) input

# stub information
Stub(m:M) input

###################
# OUTPUT: ANNOTATIONS
###################

# Src label

Src2RefArgT(c:C,cl:CL,v:V) output
Src2RefRetT(c:C,cl:CL,v:V) output
# Src2PrimArgT(c:C,cl:CL,v:U) output
Src2PrimRetT(c:C,cl:CL,v:U) output

Src2RefT(c:C,cl:CL,v:V) output
Src2PrimT(c:C,cl:CL,v:U) output

# Sink label

Sink2RefArgT(c:C,cl:CL,v:V) output
Sink2RefRetT(c:C,cl:CL,v:V) output
# Sink2PrimArgT(c:C,cl:CL,v:U) output
Sink2PrimRetT(c:C,cl:CL,v:U) output

Sink2RefT(c:C,cl:CL,v:V) output
Sink2PrimT(c:C,cl:CL,v:U) output

# Sink full label (out labels)

SinkF2RefArgF(c:C,cl:CL,v:V) output
SinkF2RefRetF(c:C,cl:CL,v:V) output
# SinkF2PrimArgF(c:C,cl:CL,v:U) output
SinkF2PrimRetF(c:C,cl:CL,v:U) output

SinkF2RefF(c:C,cl:CL,v:V) output
SinkF2PrimF(c:C,cl:CL,v:U) output

# Arg-arg transfer

RefArg2RefArgT(c:C,v:V,u:V) output
# RefArg2PrimArgT(c:C,v:V,u:U) output
PrimArg2RefArgT(c:C,v:U,u:V) output
# PrimArg2PrimArgT(c:C,v:U,u:U) output

Ref2RefT(c:C,v:V,u:V) output
Ref2PrimT(c:C,v:V,u:U) output
Prim2RefT(c:C,v:U,u:V) output
Prim2PrimT(c:C,v:U,u:U) output

# Arg-ret transfer

RefArg2RefRetT(c:C,v:V,u:V) output
RefArg2PrimRetT(c:C,v:V,u:U) output
PrimArg2RefRetT(c:C,v:U,u:V) output
PrimArg2PrimRetT(c:C,v:U,u:U) output

# Arg-arg flow (!)

RefArg2RefArgF(c:C,v:V,u:V) output
RefArg2PrimArgF(c:C,v:V,u:U) output
PrimArg2RefArgF(c:C,v:U,u:V) output
PrimArg2PrimArgF(c:C,v:U,u:U) output

Ref2RefF(c:C,v:V,u:V) output
Ref2PrimF(c:C,v:V,u:U) output
Prim2RefF(c:C,v:U,u:V) output
Prim2PrimF(c:C,v:U,u:U) output

###################
# OUTPUT: STUB ANNOTATIONS
###################

# stub annotations
RefArg2RefArgTStub(c:C,v:V,u:V,m:M,z1:Z,z2:Z) output
RefArg2RefRetTStub(c:C,v:V,u:V,m:M,z:Z) output

PrimArg2RefArgTStub(c:C,v:U,u:V,m:M,z1:Z,z2:Z) output
PrimArg2RefRetTStub(c:C,v:U,u:V,m:M,z:Z) output

RefArg2PrimRetTStub(c:C,v:V,u:U,m:M,z:Z) output
PrimArg2PrimRetTStub(c:C,v:U,u:U,m:M,z:Z) output

###################
# OUTPUT: PHANTOM ALLOCATIONS
###################

# phantom allocations
phAlloc(v:V,c:C)  output

###################
# OUTPUT: HELPER
###################

LoadPrimCtxt(c:C,v:U,u:V,f:F) output
LoadStatPrimCtxt(c:C,v:U,f:F) output
StorePrimCtxt(c:C,v:V,f:F,u:U) output
StoreStatPrimCtxt(c:C,f:F,v:U) output

AssignPrimCtxt(c:C,v:U,u:U) output
AssignPrimArgCCtxt(c:C,v:U,d:C,u:U) output
AssignPrimRetCCtxt(c:C,v:U,d:C,u:U) output
AssignPrimCCtxt(c:C,v:U,d:C,u:U) output

fptArr(o1:C,o2:C) output
LoadPrimCtxtArr(c:C,v:U,u:V) output
StorePrimCtxtArr(c:C,v:V,u:U) output

###################
# OUTPUT: RESULTS
###################

labelRef2(c:C,v:V,l:CL)  output # (c,v) is labeled with l
labelPrim2(c:C,v:U,l:CL) output # (c,v) is labeled with l
flow2(src:CL,sink:CL) output

###################
# INTERMEDIATE: OBJECT ANNOTATIONS
###################

Obj2RefT(c:C,o:C,v:V)
Obj2PrimT(c:C,o:C,v:U)

Src2ObjT(cl:CL,o:C)
Sink2ObjT(cl:CL,o:C)

###################
# INTERMEDIATE: SINKF
###################

# Sink_full-obj flow
SinkF2Obj(cl:CL,o:C)

# Sink_full-prim flow
SinkF2Prim(c:C,cl:CL,v:U)

###################
# INTERMEDIATE: SRC-SINK FLOW
###################

Src2Sink(src:CL,sink:CL)

###################
# INTERMEDIATE: LABEL FLOW
###################

# Src-obj flow

Src2Obj(cl:CL,o:C)
Src2ObjX(cl:CL,o2:C)

# Sink-obj flow

Sink2Obj(cl:CL,o:C)
Sink2ObjX(cl:CL,o2:C)

# Src-prim flow

Src2Prim(c:C,cl:CL,v:U)
Src2PrimFld(cl:CL,o:C,f:F)
Src2PrimFldStat(cl:CL,f:F)

# Sink-prim flow

Sink2Prim(c:C,cl:CL,v:U)
Sink2PrimFld(cl:CL,o:C,f:F)
Sink2PrimFldStat(cl:CL,f:F)

###################
# RULES: ANNOTATION
###################

# Src label

Src2RefArgT(c,cl,v)   :- CCL(c,cl), LCL(l,cl), CM(c,m), InLabelArg(l,m,z), MmethArg(m,z,v), srcCtxtLabel(cl).
Src2RefRetT(c,cl,v)   :- CCL(c,cl), LCL(l,cl), CM(c,m), InLabelRet(l,m), MmethRet(m,_,v), srcCtxtLabel(cl).
# Src2PrimArgT(c,cl,v)  :- CCL(c,cl), LCL(l,cl), CM(c,m), InLabelArg(l,m,z), MmethPrimArg(m,z,v), srcCtxtLabel(cl).
Src2PrimRetT(c,cl,v)  :- CCL(c,cl), LCL(l,cl), CM(c,m), InLabelRet(l,m), MmethPrimRet(m,_,v), srcCtxtLabel(cl).

Src2RefT(c,cl,v)    :- Src2RefArgT(c,cl,v).
Src2RefT(c,cl,v)    :- Src2RefRetT(c,cl,v).
# Src2PrimT(c,cl,v) :- Src2PrimArgT(c,cl,v).
Src2PrimT(c,cl,v)   :- Src2PrimRetT(c,cl,v).

# Sink label

Sink2RefArgT(c,cl,v)   :- CCL(c,cl), LCL(l,cl), CM(c,m), InLabelArg(l,m,z), MmethArg(m,z,v), sinkCtxtLabel(cl).
Sink2RefRetT(c,cl,v)   :- CCL(c,cl), LCL(l,cl), CM(c,m), InLabelRet(l,m), MmethRet(m,_,v), sinkCtxtLabel(cl).
# Sink2PrimArgT(c,cl,v)  :- CCL(c,cl), LCL(l,cl), CM(c,m), InLabelArg(l,m,z), MmethPrimArg(m,z,v), sinkCtxtLabel(cl).
Sink2PrimRetT(c,cl,v)  :- CCL(c,cl), LCL(l,cl), CM(c,m), InLabelRet(l,m), MmethPrimRet(m,_,v), sinkCtxtLabel(cl).

Sink2RefT(c,cl,v)    :- Sink2RefArgT(c,cl,v).
Sink2RefT(c,cl,v)    :- Sink2RefRetT(c,cl,v).
# Sink2PrimT(c,cl,v) :- Sink2PrimArgT(c,cl,v).
Sink2PrimT(c,cl,v)   :- Sink2PrimRetT(c,cl,v).

# Sink full label (out labels)

SinkF2RefArgF(c,cl,v)  :- CCL(c,cl), LCL(l,cl), CM(c,m), OutLabelArg(l,m,z), MmethArg(m,z,v).
SinkF2RefRetF(c,cl,v)  :- CCL(c,cl), LCL(l,cl), CM(c,m), OutLabelRet(l,m), MmethRet(m,_,v).
# SinkF2PrimArgF(c,cl,v) :- CCL(c,cl), LCL(l,cl), CM(c,m), OutLabelArg(l,m,z), MmethPrimArg(m,z,v).
SinkF2PrimRetF(c,cl,v) :- CCL(c,cl), LCL(l,cl), CM(c,m), OutLabelRet(l,m), MmethPrimRet(m,_,v).

SinkF2RefF(c,cl,v)  :- SinkF2RefArgF(c,cl,v).
SinkF2RefF(c,cl,v)  :- SinkF2RefRetF(c,cl,v).
# SinkF2PrimF(c,cl,v) :- SinkF2PrimArgF(c,cl,v).
SinkF2PrimF(c,cl,v) :- SinkF2PrimRetF(c,cl,v).

# Arg-arg transfer

RefArg2RefArgT(c,v,u)   :- ArgArgTransfer(m,z0,z1), MmethArg(m,z0,v), MmethArg(m,z1,u), CM(c,m).
# RefArg2PrimArgT(c,v,u)  :- ArgArgTransfer(m,z0,z1), MmethArg(m,z0,v), MmethPrimArg(m,z1,u), CM(c,m).
PrimArg2RefArgT(c,v,u)  :- ArgArgTransfer(m,z0,z1), MmethPrimArg(m,z0,v), MmethArg(m,z1,u), CM(c,m).
# PrimArg2PrimArgT(c,v,u) :- ArgArgTransfer(m,z0,z1), MmethPrimArg(m,z0,v), MmethPrimArg(m,z1,u), CM(c,m).

Ref2RefT(c,v,u)   :- RefArg2RefArgT(c,v,u).
# Ref2PrimT(c,v,u)  :- RefArg2PrimArgT(c,v,u).
Prim2RefT(c,v,u)  :- PrimArg2RefArgT(c,v,u).
# Prim2PrimT(c,v,u) :- PrimArg2PrimArgT(c,v,u).

# Arg-ret transfer

RefArg2RefRetT(c,v,u)   :- ArgRetTransfer(m,z), MmethArg(m,z,v), MmethRet(m,_,u), CM(c,m).
RefArg2PrimRetT(c,v,u)  :- ArgRetTransfer(m,z), MmethArg(m,z,v), MmethPrimRet(m,_,u), CM(c,m).
PrimArg2RefRetT(c,v,u)  :- ArgRetTransfer(m,z), MmethPrimArg(m,z,v), MmethRet(m,_,u), CM(c,m).
PrimArg2PrimRetT(c,v,u) :- ArgRetTransfer(m,z), MmethPrimArg(m,z,v), MmethPrimRet(m,_,u), CM(c,m).

Ref2RefT(c,v,u)   :- RefArg2RefRetT(c,v,u).
Ref2PrimT(c,v,u)  :- RefArg2PrimRetT(c,v,u).
Prim2RefT(c,v,u)  :- PrimArg2RefRetT(c,v,u).
Prim2PrimT(c,v,u) :- PrimArg2PrimRetT(c,v,u).

# Arg-arg flow (!)

RefArg2RefArgF(c,v,u)   :- ArgArgFlow(m,z0,z1), MmethArg(m,z0,v), MmethArg(m,z1,u), CM(c,m).
RefArg2PrimArgF(c,v,u)  :- ArgArgFlow(m,z0,z1), MmethArg(m,z0,v), MmethPrimArg(m,z1,u), CM(c,m).
PrimArg2RefArgF(c,v,u)  :- ArgArgFlow(m,z0,z1), MmethPrimArg(m,z0,v), MmethArg(m,z1,u), CM(c,m).
PrimArg2PrimArgF(c,v,u) :- ArgArgFlow(m,z0,z1), MmethPrimArg(m,z0,v), MmethPrimArg(m,z1,u), CM(c,m).

Ref2RefF(c,v,u)   :- RefArg2RefArgF(c,v,u).
Ref2PrimF(c,v,u)  :- RefArg2PrimArgF(c,v,u).
Prim2RefF(c,v,u)  :- PrimArg2RefArgF(c,v,u).
Prim2PrimF(c,v,u) :- PrimArg2PrimArgF(c,v,u).

##################
# RULES: STUB ANNOTATIONS
##################

# stub annotations
RefArg2RefArgTStub(c,v,u,m,z1,z2)  :- Stub(m), MmethArg(m,z1,v), MmethArg(m,z2,u), z1 != z2, CM(c,m).
RefArg2RefRetTStub(c,v,u,m,z)      :- Stub(m), MmethArg(m,z,v), MmethRet(m,_,u), CM(c,m).

PrimArg2RefArgTStub(c,v,u,m,z1,z2) :- Stub(m), MmethPrimArg(m,z1,v), MmethArg(m,z2,u), CM(c,m).
PrimArg2RefRetTStub(c,v,u,m,z)     :- Stub(m), MmethPrimArg(m,z,v), MmethRet(m,_,u), CM(c,m).

RefArg2PrimRetTStub(c,v,u,m,z)     :- Stub(m), MmethArg(m,z,v), MmethPrimRet(m,_,u), CM(c,m).
PrimArg2PrimRetTStub(c,v,u,m,z)    :- Stub(m), MmethPrimArg(m,z,v), MmethPrimRet(m,_,u), CM(c,m).

##################
# RULES: PHANTOM ALLOCATIONS
##################

# phantom allocations
phAlloc(v,c) :- Stub(m), CM(c,m), MmethRet(m,_,v).

###################
# RULES: OBJECT ANNOTATIONS
###################

Obj2RefT(c,o,u)   :- pt(c,v,o), Ref2RefT(c,v,u). # pt is backwards
Obj2PrimT(c,o,u)  :- pt(c,v,o), Ref2PrimT(c,v,u). # pt is backwards
Obj2RefT(c,o1,v)  :- fpt(o2,0,o1), Obj2RefT(c,o2,v). # fpt is backwards
Obj2PrimT(c,o1,v) :- fpt(o2,0,o1), Obj2PrimT(c,o2,v). # fpt is backwards

Src2ObjT(cl,o)  :- Src2RefT(c,cl,v), pt(c,v,o).
Src2ObjT(cl,o2) :- Src2ObjT(cl,o1), fpt(o1,_,o2).

Sink2ObjT(cl,o)  :- Sink2RefT(c,cl,v), pt(c,v,o).
Sink2ObjT(cl,o2) :- Sink2ObjT(cl,o1), fpt(o1,_,o2).

###################
# RULES: SINKF
###################

# Sink_full-obj flow

SinkF2Obj(cl,o)  :- SinkF2RefF(c,cl,v), pt(c,v,o).
SinkF2Obj(cl,o2) :- Sink2Obj(cl,o1), pt(c,v,o1), Ref2RefF(c,u,v), pt(c,u,o2). # first pt, Ref2RefF are backwards
SinkF2Obj(cl,o)  :- Sink2Prim(c,cl,v), Ref2PrimF(c,u,v), pt(c,u,o). # Ref2PrimF is backwards
SinkF2Obj(cl,o2) :- SinkF2Obj(cl,o1), fpt(o1,_,o2).

# Sink_full-prim flow

SinkF2Prim(c,cl,v) :- SinkF2PrimF(c,cl,v).
SinkF2Prim(c,cl,u) :- Sink2Obj(cl,o), pt(c,v,o), Prim2RefF(c,u,v). # pt, Prim2RefF are backwards
SinkF2Prim(c,cl,u) :- Sink2Prim(c,cl,v), Prim2PrimF(c,u,v). # Prim2PrimF is backwards

###################
# RULES: SRC-SINK FLOW
###################

Src2Sink(src,sink) :- Src2Obj(src,o), SinkF2Obj(sink,o). # SinkF2Obj is backwards
Src2Sink(src,sink) :- Src2Prim(c,src,v), SinkF2Prim(c,sink,v). # SinkF2Prim is backwards
Src2Sink(src,sink) :- Src2PrimFld(src,o,_), SinkF2Obj(sink,o). # SinkF2Obj is backwards

###################
# RULES: LABEL FLOW
###################

# Src-obj flow

Src2Obj(cl,o)   :- Src2ObjT(cl,o).
Src2Obj(cl,o)   :- Src2ObjX(cl,o).

Src2ObjX(cl,o2) :- Src2Obj(cl,o1), Obj2RefT(c,o1,v), pt(c,v,o2).
Src2ObjX(cl,o)  :- Src2Prim(c,cl,v), Prim2RefT(c,v,u), pt(c,u,o).
Src2ObjX(cl,o2) :- Src2PrimFld(cl,o1,0), Obj2RefT(c,o1,v), pt(c,v,o2).
Src2ObjX(cl,o2) :- Src2ObjX(cl,o1), fpt(o1,0,o2).

# Sink-obj flow

Sink2Obj(cl,o)   :- Sink2ObjT(cl,o).
Sink2Obj(cl,o)   :- Sink2ObjX(cl,o).

Sink2ObjX(cl,o2) :- Sink2Obj(cl,o1), Obj2RefT(c,o1,v), pt(c,v,o2).
Sink2ObjX(cl,o)  :- Sink2Prim(c,cl,v), Prim2RefT(c,v,u), pt(c,u,o).
Sink2ObjX(cl,o2) :- Sink2PrimFld(cl,o1,0), Obj2RefT(c,o1,v), pt(c,v,o2).
Sink2ObjX(cl,o2) :- Sink2ObjX(cl,o1), fpt(o1,0,o2).

# Helper

LoadPrimCtxt(c,v,u,f)      :- LoadPrim(v,u,f), MV(m,u), CM(c,m).
LoadStatPrimCtxt(c,v,f)    :- LoadStatPrim(v,f), MU(m,v), CM(c,m).
StorePrimCtxt(c,v,f,u)     :- StorePrim(v,f,u), MV(m,v), CM(c,m).
StoreStatPrimCtxt(c,f,v)   :- StoreStatPrim(f,v), MU(m,v), CM(c,m).

AssignPrimCtxt(c,v,u)       :- AssignPrim(v,u), MU(m,v), CM(c,m).
AssignPrimArgCCtxt(c,v,d,u) :- paramPrim(v,u,i), CC(d,c), CI(c,i).
AssignPrimRetCCtxt(c,v,d,u) :- returnPrim(v,u,i), CC(c,d), CI(d,i).
AssignPrimCCtxt(c,v,d,u)    :- AssignPrimArgCCtxt(c,v,d,u).
AssignPrimCCtxt(c,v,d,u)    :- AssignPrimRetCCtxt(c,v,d,u).

fptArr(o1,o2)           :- fpt(o1,0,o2).
LoadPrimCtxtArr(c,v,u)  :- LoadPrimCtxt(c,v,u,0).
StorePrimCtxtArr(c,v,u) :- StorePrimCtxt(c,v,0,u).

# Src-prim flow

Src2Prim(c,cl,v) :- Src2PrimT(c,cl,v).
Src2Prim(c,cl,u) :- Src2Prim(c,cl,v), AssignPrimCtxt(c,u,v). # AssignPrim is flipped
Src2Prim(d,cl,u) :- Src2Prim(c,cl,v), AssignPrimCCtxt(d,u,c,v). # AssignPrimCtxt is flipped

Src2Prim(c,cl,v) :- Src2Obj(cl,o), Obj2PrimT(c,o,v).
Src2Prim(c,cl,u) :- Src2Prim(c,cl,v), Prim2PrimT(c,v,u).

Src2Prim(c,cl,u) :- Src2ObjT(cl,o), pt(c,v,o), LoadPrimCtxt(c,u,v,_). # pt is backwards, LoadPrimCtxt is flipped
Src2Prim(c,cl,u) :- Src2ObjX(cl,o), pt(c,v,o), LoadPrimCtxt(c,u,v,0). # pt is backwards, LoadPrimCtxt is flipped
Src2Prim(c,cl,v) :- Src2PrimFld(cl,o,0), Obj2PrimT(c,o,v).

Src2Prim(c,cl,u) :- Src2PrimFld(cl,o,f), pt(c,v,o), LoadPrimCtxt(c,u,v,f). # pt is backwards, LoadPrim is flipped
Src2Prim(c,cl,u) :- Src2PrimFldStat(cl,f), LoadStatPrimCtxt(c,u,f). # LoadStatPrimCtxt is flipped

# Src-prim_fld flow

Src2PrimFld(cl,o,f)   :- Src2Prim(c,cl,v), StorePrimCtxt(c,u,f,v), pt(c,u,o). # StorePrimCtxt is flipped
Src2PrimFldStat(cl,f) :- Src2Prim(c,cl,v), StoreStatPrimCtxt(c,f,v). # StoreStatPrimCtxt is flipped

# Sink-prim flow

Sink2Prim(c,cl,v) :- Sink2PrimT(c,cl,v).
Sink2Prim(c,cl,u) :- Sink2Prim(c,cl,v), AssignPrimCtxt(c,u,v). # AssignPrim is flipped
Sink2Prim(d,cl,u) :- Sink2Prim(c,cl,v), AssignPrimCCtxt(d,u,c,v). # AssignPrimCtxt is flipped

Sink2Prim(c,cl,v) :- Sink2Obj(cl,o), Obj2PrimT(c,o,v).
Sink2Prim(c,cl,u) :- Sink2Prim(c,cl,v), Prim2PrimT(c,v,u).

Sink2Prim(c,cl,u) :- Sink2ObjT(cl,o), pt(c,v,o), LoadPrimCtxt(c,u,v,_). # pt is backwards, LoadPrimCtxt is flipped
Sink2Prim(c,cl,u) :- Sink2ObjX(cl,o), pt(c,v,o), LoadPrimCtxt(c,u,v,0). # pt is backwards, LoadPrimCtxt is flipped
Sink2Prim(c,cl,v) :- Sink2PrimFld(cl,o,0), Obj2PrimT(c,o,v).

Sink2Prim(c,cl,u) :- Sink2PrimFld(cl,o,f), pt(c,v,o), LoadPrimCtxt(c,u,v,f). # pt is backwards, LoadPrim is flipped
Sink2Prim(c,cl,u) :- Sink2PrimFldStat(cl,f), LoadStatPrimCtxt(c,u,f). # LoadStatPrimCtxt is flipped

# Sink-prim_fld flow

Sink2PrimFld(cl,o,f)   :- Sink2Prim(c,cl,v), StorePrimCtxt(c,u,f,v), pt(c,u,o). # StorePrimCtxt is flipped
Sink2PrimFldStat(cl,f) :- Sink2Prim(c,cl,v), StoreStatPrimCtxt(c,f,v). # StoreStatPrimCtxt is flipped

###################
# RULES: OUTPUT
###################

labelRef2(c,v,l)  :- Src2Obj(l,o), pt(c,v,o).
labelRef2(c,v,l)  :- Sink2Obj(l,o), pt(c,v,o).
labelPrim2(c,u,l) :- Src2Prim(c,l,u).
labelPrim2(c,u,l) :- Sink2Prim(c,l,u).
flow2(src,sink)   :- Src2Sink(src,sink).
