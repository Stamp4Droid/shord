##################
# CFL Initialization
##################

###################
# CONFIGURATION
###################

# name=cfl-alias-models-debug-dlog

.include "M.dom"
.include "V.dom"
.include "F.dom"
.include "I.dom"
.include "H.dom"

.bddvarorder M0xM1_H0xH1_V0xV1_I0_F0

##########
# INPUTS #
##########

ptd(v:V,o:H) input
fptd(o1:H,f:F,o2:H) input

Assign(v:V,u:V) input
Store(v:V,f:F,u:V) input
Load(v:V,u:V,f:F) input

param(v:V,u:V,i:I) input
return(v:V,u:V,i:I) input

StubParam(m:M,v:V) input
StubReturn(m:M,v:V) input

################
# INTERMEDIATE #
################

Flow(o:H,v:V) output
FlowField(o1:H,f:F,o2:H) output

Bassign(m:M,v:V) output
assignE(m:M,v:V) output

###########
# OUTPUTS #
###########

FlowPre(o:H,m:M) output
FlowPost(m:M,v:V) output
FlowPrePost(m1:M,m2:M) output

FlowFieldPost(m:M,f:F,o:H) output
FlowFieldAnyPost(m:M,o:H) output

#########
# RULES #
#########

# initialization

Flow(o,v) :- ptd(v,o).
FlowField(o1,f,o2) :- fptd(o2,f,o1).

Bassign(m,v) :- StubParam(m,v).
assignE(m,v) :- StubReturn(m,v).

# A_v rules

FlowPre(o,m) :- Flow(o,v), Bassign(m,v).
FlowPre(o,m) :- Flow(o,v), Store(u,_,v), FlowPost(m,u).
FlowPre(o,m) :- FlowField(o,_,op), FlowPre(op,m).

# A^v rules

FlowPost(m,v) :- assignE(m,v).
FlowPost(m,v) :- FlowPost(m,u), Assign(v,u).
FlowPost(m,v) :- FlowPost(m,u), param(v,u,_).
FlowPost(m,v) :- FlowPost(m,u), return(v,u,_).
FlowPost(m,v) :- FlowPost(m,u), Load(v,u,_).

FlowFieldPost(m,f,o) :- FlowPost(m,v), Store(u,f,v), Flow(o,u).
FlowFieldAnyPost(m,o) :- FlowPre(o,m).

FlowPost(m,v) :- FlowFieldPost(m,f,o), Flow(o,u), Load(v,u,f).
FlowPost(m,v) :- FlowFieldAnyPost(m,o), Flow(o,u), Load(v,u,_).

# A^w_v rules

FlowPrePost(m1,m2) :- FlowPost(m1,v), Bassign(m2,v).
FlowPrePost(m1,m2) :- FlowFieldPost(m1,_,o), FlowPre(o,m2).
FlowPrePost(m1,m2) :- FlowFieldAnyPost(m1,o), FlowPre(o,m2).
FlowPrePost(m1,m2) :- FlowPrePost(m2,m1).
FlowPrePost(m1,m2) :- FlowPost(m1,v), Store(u,_,v), FlowPost(m2,u).

FlowFieldAnyPost(m,o) :- FlowPrePost(m,mp), FlowPre(o,mp).

# Stitching rules

FlowNew(o,v) :- FlowPre(o,m), assignE(m,v).
FlowNew(o,v) :- FlowPre(o,m), FlowPost(m,u), Load(v,u,_).
# this is two rules in the context-free grammar
FlowNew(o,v) :- FlowPre(o,m), FlowPre(op,m), Flow(op,u), Load(v,u,_).

FlowPre(o,m) :- FlowPre(o,mp), FlowPrePost(mp,m).

FlowPost(m,v) :- FlowPrePost(m,mp), assignE(mp,v).
FlowPost(m,v) :- FlowPrePost(m,mp), FlowPost(mp,u), Load(v,u,_).

FlowPrePost(m1,m2) :- FlowPrePost(m1,mp), FlowPrePost(m2,mp).
