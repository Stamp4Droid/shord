##################
# CFL Initialization
##################

###################
# CONFIGURATION
###################

# name=cfl-alias-models-debug-dlog

.include "M.dom"
.include "C.dom"
.include "V.dom"
.include "F.dom"
.include "I.dom"
.include "H.dom"

.bddvarorder V0_V1_M0_C0_M1_C1_M2_C2_I0_F0_H0

##########
# INPUTS #
##########

Flow(o:C2,c:C0,v:V0) input
FlowField(o1:C,f:F,o2:C) input

HVFilter(v:V,h:H) input

Assign(v:V,u:V) input
param(v:V,u:V,i:I) input
return(v:V,u:V,i:I) input
Store(v:V,f:F,u:V) input
Load(v:V,u:V,f:F) input

CH(o:C,h:H) input

Bassign(c:C,v:V,m:M) input
assignE(m:M,c:C,v:V) input

###########
# OUTPUTS #
###########

FlowD(o:C,v:V) output
BassignD(v:V,m:M) output
assignED(m:M,v:V) output

FlowPreD(o:C,m:M) output
FlowPostD(m:M,v:V) output
FlowFieldPostD(m:M,f:F,o:C) output
FlowPrePostD(m1:M,m2:M) output

FlowFullPreD(o:C,m:M) output
FlowNewD(o:C,v:V) output

#########
# RULES #
#########

# initialization

FlowD(o,v) :- Flow(o,_,v).
BassignD(v,m) :- Bassign(_,v,m).
assignED(m,v) :- assignE(m,_,v).

# A_v rules

FlowPreD(o,m) :- FlowD(o,v), BassignD(v,m).
FlowPreD(o,m) :- FlowD(o,v), Store(u,_,v), FlowPostD(m,u).
FlowPreD(o,m) :- FlowField(o,_,op), FlowPreD(op,m).

# A^v rules

FlowPostD(m,v) :- assignED(m,v).
FlowPostD(m,v) :- FlowPostD(m,u), Assign(v,u).
FlowPostD(m,v) :- FlowPostD(m,u), param(v,u,_).
FlowPostD(m,v) :- FlowPostD(m,u), return(v,u,_).

FlowPostD(m,v) :- FlowPostD(m,u), Load(v,u,_).
FlowFieldPostD(m,f,o) :- FlowPostD(m,v), Store(u,f,v), FlowD(o,u).
FlowPostD(m,v) :- FlowFieldPostD(m,f,o), FlowD(o,u), Load(v,u,f).
FlowPostD(m,v) :- FlowPreD(o,m), FlowD(o,u), Load(v,u,_).

# A^w_v rules

FlowPrePostD(m1,m2) :- FlowPostD(m1,v), BassignD(v,m2).
FlowPrePostD(m1,m2) :- FlowPreD(o,m1), FlowPreD(o,m2).
FlowPrePostD(m1,m2) :- FlowPostD(m1,v), Store(u,_,v), FlowPostD(m2,u).

FlowFieldAnyPostD(m,o) :- FlowPrePostD(m,mp), FlowPreD(o,mp).

# Full rules

FlowFullPreD(o,m) :- FlowPreD(o,m).
FlowFullPreD(o,m) :- FlowFullPreD(o,mp), FlowPrePostD(mp,m).
FlowNewD(o,v) :- FlowFullPreD(o,m), assignED(m,u), return(v,u,_), HVFilter(v,h), CH(o,h).
