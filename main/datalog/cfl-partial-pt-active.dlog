##################
# Active Partial FLows Relations
##################

###################
# CONFIGURATION
###################

# name=cfl-partial-pt-active-dlog

.include "Z.dom"
.include "M.dom"
.include "C.dom"
.include "V.dom"
.include "U.dom"
.include "H.dom"
.include "F.dom"
.include "I.dom"
.include "CL.dom"

.bddvarorder Z0xZ1_M0_CL0xCL1_C0xC1xC2_V0xV1xV2_U0xU1_F0_I0

###################
# INPUT: TAINT RELATIONS
###################

PtFull(c:C,v:V,o:C)    input
FptFull(o1:C,f:F,o2:C) input

Store(v:V,f:F,u:V) input           # v.f = u

LoadPrimCtxt(c:C,v:U,u:V,f:F) input
LoadStatPrimCtxt(c:C,v:U,f:F) input
StorePrimCtxt(c:C,v:V,f:F,u:U) input
StoreStatPrimCtxt(c:C,f:F,v:U) input

AssignPrimCtxt(c:C,v:U,u:U) input
AssignPrimCCtxt(c:C,v:U,d:C,u:U) input

# Src label
Src2Label(cl:CL) input

# Sink label
Sink2Label(cl:CL) input

# Label label
Label2RefT(c:C,cl:CL,v:V) input
Label2PrimT(c:C,cl:CL,v:U) input

# Sink full label (out labels)
SinkF2RefF(c:C,cl:CL,v:V) input
SinkF2PrimF(c:C,cl:CL,v:U) input

# Transfer
Ref2RefTFull(c:C,v:V,u:V) input
Ref2PrimTFull(c:C,v:V,u:U) input
Prim2RefTFull(c:C,v:U,u:V) input
Prim2PrimTFull(c:C,v:U,u:U) input

# Flow (!)
Ref2RefF(c:C,v:V,u:V) input
Ref2PrimF(c:C,v:V,u:U) input
Prim2RefF(c:C,v:U,u:V) input
Prim2PrimF(c:C,v:U,u:U) input

Obj2RefT(c:C,o:C,v:V) input
Obj2PrimT(c:C,o:C,v:U) input

Label2ObjT(cl:CL,o:C) input

# Sink_full-obj flow
SinkF2Obj(cl:CL,o:C) input

# Sink_full-prim flow
SinkF2Prim(c:C,cl:CL,v:U) input

# Src-sink flow
Src2Sink(src:CL,sink:CL) input

# Label-obj flow
Label2Obj(cl:CL,o:C) input
Label2ObjX(cl:CL,o2:C) input

# Label-prim flow
Label2Prim(c:C,cl:CL,v:U) input
Label2PrimFld(cl:CL,o:C,f:F) input
Label2PrimFldStat(cl:CL,f:F) input

###################
# INPUT: PARTIAL PT RELATIONS
###################

PtPartial(c:C,v:V,o:C)    input
FptPartial(o1:C,f:F,o2:C) input

###################
# INPUT: ACTIVE OBJS AND REFS
###################

ActiveObjTaint(cl:CL,o:C) input
ActivePrimTaint(cl:CL,c:C,v:U) input
ActiveRefTaint(cl:CL,c:C,v:V) input
ActivePrimFldStatTaint(cl:CL,f:F) input

###################
# INPUT: PARTIAL FLOW RELATIONS
###################

Assign(v:V,u:V) input              # v = u
param(u:V,v:V,i:I)  input   # u is the formal parameter, v is actual arg, i is invocation stmt
return(u:V,v:V,i:I) input   # u is the lhs at callsite, v is the return var, i is invocation stmt
Load(v:V,u:V,f:F) input            # v = u.f
CI(c:C,i:I) input # stmt i is the top element in the k-limited callstack c
CC(c:C,d:C) input # there exists i s.t. c++[i] = d

MmethArg(m:M,z:Z,v:V)     input
MmethRet(m:M,z:Z,v:V)     input
MV(m:M,v:V) input
CM(c:C,m:M) input # c is a context of method m

PreFlowsTo(c:C,o:C,v:V) input
PostFlowsTo(c:C,v:V,d:C,u:V) input
MidFlowsTo(c:C,v:V,d:C,u:V) input

typeFilter(v:V,o:C) input   # type wise, v can point-to o

PreFlowsToFull(c:C,o:C,v:V) input
Transfer(v:V,u:V) input

Varg(v:V) input
Vret(v:V) input

pt(c:C,v:V,o:C) input

###################
# INTERMEDIATE: ACTIVE PARTIAL PT
###################

ActivePtPartial(c:C,v:V,o:C) output
ActiveFptPartial(c:C,f:F,o:C) output

###################
# INTERMEDIATE: CONSTRAINED
###################

ActivePtPartialFiltered(c:C,v:V,o:C) output
ActiveObj(o:C) output
ActiveRef(c:C,v:V) output

CPreFlowsToFull(c:C,o:C,v:V) output

CPostFlowsTo(c:C,v:V,w:V) output
CMidFlowsTo(c:C,v:V) output

###################
# OUTPUT: ACTIVE OBJS AND REFS
###################

ActiveRefF(c:C,v:V) output
ActiveRefT(c:C,v:V) output

ActiveVarg(v:V) output
ActiveVret(v:V) output

ActiveTransfer(v:V,u:V) output
ActiveTransferArg(c:C,v:V,u:V,m:M,z1:Z,z2:Z) output
ActiveTransferRet(c:C,v:V,u:V,m:M,z:Z) output
ActiveTransferPre(v:V,u:V) output

ActivePreFlowsTo(c:C,o:C,v:V) output
ActiveMidFlowsTo(c:C,v:V,d:C,u:V) output
ActivePostFlowsTo(c:C,v:V,d:C,u:V) output

###################
# RULES: ACTIVE PARTIAL PT
###################

# Label2Obj, Label2ObjX
ActivePtPartial(c,v,o2) :- ActiveObjTaintLabel(cl,o2), PtPartial(c,v,o2), Obj2RefT(c,o1,v), Label2Obj(cl,o1).
ActivePtPartial(c,u,o) :- ActiveObjTaintLabel(cl,o), PtPartial(c,u,o), Prim2RefTFull(c,v,u), Label2Prim(c,cl,v).
ActivePtPartial(c,v,o2) :- ActiveObjTaintLabel(cl,o2), PtPartial(c,v,o2), Obj2RefT(c,o1,v), Label2PrimFld(cl,o1,0).

ActiveFptPartial(o1,0,o2) :- ActiveObjTaintLabel(cl,o2), FptPartial(o1,0,o2), Label2ObjX(cl,o1).

# Label2Prim, Label2PrimFld
ActivePtPartial(c,v,o) :- ActivePrimTaintLabel(cl,c,u), LoadPrimCtxt(c,u,v,_), PtPartial(c,v,o), Label2ObjT(cl,o).
ActivePtPartial(c,v,o) :- ActivePrimTaintLabel(cl,c,u), LoadPrimCtxt(c,u,v,0), PtPartial(c,v,o), Label2ObjX(cl,o).
ActivePtPartial(c,v,o) :- ActivePrimTaintLabel(cl,c,u), LoadPrimCtxt(c,u,v,f), PtPartial(c,v,o), Label2PrimFld(cl,o,f).
ActivePtPartial(c,u,o) :- ActiveObjTaintLabel(cl,o), PtPartial(c,u,o), StorePrimCtxt(c,u,_,v), Label2Prim(c,cl,v).

# SinkF
ActivePtPartial(c,v,o) :- ActiveObjTaint(cl,o), PtPartial(c,v,o), SinkF2RefF(c,cl,v).
ActivePtPartial(c,u,o) :- ActiveObjTaint(cl,o), PtPartial(c,u,o), Ref2PrimF(c,u,v), Label2Prim(c,cl,v), Sink2Label(cl).

ActivePtPartial(c,u,o2) :- ActiveObjTaint(cl,o2), PtPartial(c,u,o2), Ref2RefF(c,u,v), PtFull(c,v,o1), Label2Obj(cl,o1), Sink2Label(cl).
ActivePtPartial(c,v,o1) :- ActiveObjTaint(cl,o2), PtFull(c,u,o2), Ref2RefF(c,u,v), PtPartial(c,v,o1), Label2Obj(cl,o1), Sink2Label(cl).

ActivePtPartial(c,v,o) :- ActivePrimTaint(cl,c,u), Prim2RefF(c,u,v), PtPartial(c,v,o), Label2Obj(cl,o), Sink2Label(cl).

ActiveFptPartial(o1,f,o2) :- ActiveObjTaint(cl,o2), FptPartial(o1,f,o2), SinkF2Obj(cl,o1).

# Object Annotations
ActivePtPartial(c,v,o) :- ActiveObjTaintLabel(cl,o), PtPartial(c,v,o), Ref2RefTFull(c,v,u), ActiveRefTaintLabel(cl,c,u).
ActivePtPartial(c,v,o) :- ActiveObjTaintLabel(cl,o), PtPartial(c,v,o), Ref2PrimTFull(c,v,u), ActivePrimTaintLabel(cl,c,u).

ActivePtPartial(c,v,o) :- Label2RefT(c,cl,v), PtPartial(c,v,o), ActiveObjTaintLabel(cl,o).

ActiveFptPartial(o2,0,o1) :- ActiveObjTaintLabel(cl,o1), FptPartial(o2,0,o1), Obj2RefT(c,o2,v), ActiveRefTaintLabel(cl,c,v).
ActiveFptPartial(o2,0,o1) :- ActiveObjTaintLabel(cl,o1), FptPartial(o2,0,o1), Obj2PrimT(c,o2,v), ActivePrimTaintLabel(cl,c,v).
ActiveFptPartial(o1,f,o2) :- Label2ObjT(cl,o1), FptPartial(o1,f,o2), ActiveObjTaintLabel(cl,o2).

###################
# OUTPUT: HANDLE FPT
###################

# active partial pt

ActivePtPartial(c,v,o2) :- ActiveFptPartial(o1,f,o2), PtPartial(c,v,o2), Store(u,f,v), PtFull(c,u,o1).
ActivePtPartial(c,u,o1) :- ActiveFptPartial(o1,f,o2), PtFull(c,v,o2), Store(u,f,v), PtPartial(c,u,o1).

###################
# RULES: ACTIVE REF T AND REF F
###################

# o -> v_c -> u_c -> w_d

ActiveObj(o) :- ActivePtPartial(_,v,o), typeFilter(v,o).
ActiveRef(c,v) :- ActivePtPartial(c,v,o), typeFilter(v,o).

CPreFlowsToFull(c,o,v) :- ActiveObj(o), PreFlowsToFull(c,o,v).
CPostFlowsTo(c,u,w) :- ActiveRef(d,w), PostFlowsTo(c,u,d,w).

CMidFlowsTo(c,u) :- ActiveRefF(d,w), MidFlowsTo(c,u,d,w).

ActiveRefF(c,v) :- CPostFlowsTo(c,u,w), Transfer(v,u), CPreFlowsToFull(c,o,v), typeFilter(w,o).
ActiveRefF(c,v) :- CPreFlowsToFull(c,_,v), Transfer(v,u), CMidFlowsTo(c,u).

ActiveRefT(c,u) :- CPostFlowsTo(c,u,w), Transfer(v,u), CPreFlowsToFull(c,o,v), typeFilter(w,o).
ActiveRefT(c,u) :- CPreFlowsToFull(c,_,v), Transfer(v,u), CMidFlowsTo(c,u).

###################
# RULES: ACTIVE VARG, VRET, AND TRANSFER
###################

ActiveVarg(v) :- Varg(v), ActiveRefF(_,v).
ActiveVarg(v) :- Varg(v), ActiveRefT(_,v).
ActiveVret(v) :- Vret(v), ActiveRefF(_,v).
ActiveVret(v) :- Vret(v), ActiveRefT(_,v).

ActiveTransfer(v,u) :- Transfer(v,u), ActiveRefF(c,v), ActiveRefT(c,u).
ActiveTransferArg(c,v,u,m,z1,z2) :- ActiveTransfer(v,u), MmethArg(m,z1,v), MmethArg(m,z2,u), CM(c,m).
ActiveTransferRet(c,v,u,m,z) :- ActiveTransfer(v,u), MmethArg(m,z,v), MmethRet(m,_,u), CM(c,m).
ActiveTransferRet(c,v,u,m,z) :- ActiveTransfer(v,u), MmethArg(m,z,u), MmethRet(m,_,v), CM(c,m).
ActiveTransferPre(v,u) :- ActiveTransfer(v,u), ActivePreFlowsTo(_,_,v).

ActivePreFlowsTo(c,o,v) :- ActiveObj(o), PreFlowsTo(c,o,v), ActiveRefF(c,v).
ActiveMidFlowsTo(c,v,d,u) :- ActiveRefT(c,v), MidFlowsTo(c,v,d,u), ActiveRefF(d,u).
ActivePostFlowsTo(c,v,d,u) :- CPostFlowsTo(c,v,u), ActiveRef(d,u).

