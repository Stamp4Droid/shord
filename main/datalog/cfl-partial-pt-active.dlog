##################
# Active Partial FLows Relations
##################

###################
# CONFIGURATION
###################

# name=cfl-partial-pt-active-dlog

.include "Z.dom"
.include "M.dom"
.include "C.dom"
.include "V.dom"
.include "H.dom"
.include "F.dom"
.include "I.dom"

.bddvarorder Z0xZ1_M0_C0xC1xC2_V0xV1_H0xF0_I0

###################
# INPUT: PARTIAL FLOW RELATIONS
###################

Assign(v:V,u:V) input              # v = u
param(u:V,v:V,i:I)  input   # u is the formal parameter, v is actual arg, i is invocation stmt
return(u:V,v:V,i:I) input   # u is the lhs at callsite, v is the return var, i is invocation stmt
Store(v:V,f:F,u:V) input           # v.f = u
Load(v:V,u:V,f:F) input            # v = u.f
CI(c:C,i:I) input # stmt i is the top element in the k-limited callstack c
CC(c:C,d:C) input # there exists i s.t. c++[i] = d

PreFlowsToA(c:C,o:C,v:V) input
PreFlowsToR(c:C,o:C,v:V) input
PostFlowsToA(c:C,v:V,d:C,u:V) input
PostFlowsToR(c:C,v:V,d:C,u:V) input
MidFlowsToAA(c:C,v:V,d:C,u:V) input
MidFlowsToAR(c:C,v:V,d:C,u:V) input
MidFlowsToRA(c:C,v:V,d:C,u:V) input
MidFlowsToRR(c:C,v:V,d:C,u:V) input

typeFilter(v:V,o:C) input   # type wise, v can point-to o

PreFlowsToFullA(c:C,o:C,v:V) input
PreFlowsToFullR(c:C,o:C,v:V) input
Transfer(c:C,v:V,u:V) input

Varg(v:V,c:C) input
Vret(v:V,c:C) input

pt(c:C,v:V,o:C) input
PtFull(c:C,v:V,o:C) input

###################
# INPUT: ACTIVE REF AND OBJ FROM TAINT
###################

ActiveRef(c:C,v:V) input
ActiveObj(o:C) input

###################
# OUTPUT: ACTIVE OBJS AND REFS
###################

ActiveRef2(c:C,v:V) output
ActiveObj2(o:C) output

ActiveVarg(v:V) output
ActiveVret(v:V) output

###################
# RULES: INPUT
###################

ActiveRef2(c,v) :- ActiveRef(c,v).
ActiveObj2(o) :- ActiveObj(o).

###################
# RULES: ACTIVE VARG AND VRET
###################

ActiveVarg(v) :- Varg(v,c), ActiveRef2(c,v).
ActiveVret(v) :- Vret(v,c), ActiveRef2(c,v).

###################
# RULES: PARTIAL FLOWS
###################

# 1) o -> v_c
# 2) o -> v_c -> u_c -> w_d
ActiveRef2(c,u) :- pt(c,v,o), Store(u,_,v), PostFlowsToA(d,w,c,u), ActiveRef2(d,w), ActiveObj2(o).
ActiveRef2(c,u) :- pt(c,v,o), Store(u,_,v), PostFlowsToR(d,w,c,u), ActiveRef2(d,w), ActiveObj2(o).

# 3) o1 -> v_c -> u_c -> o2 -> w_c
ActiveObj2(o2) :- pt(c,v,o1), Store(u,_,v), pt(c,u,o2), PreFlowsToA(c,o2,w), ActiveRef2(c,w), ActiveObj2(o1).
ActiveObj2(o2) :- pt(c,v,o1), Store(u,_,v), pt(c,u,o2), PreFlowsToR(c,o2,w), ActiveRef2(c,w), ActiveObj2(o1).

# 2a) v_c -> u_d -> w_d
ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), Assign(w,u), ActiveRef2(c,v), ActiveRef2(d,w).
ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), Assign(w,u), ActiveRef2(c,v), ActiveRef2(d,w).

# 2b) v_c -> u_d -> w_b
ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), param(w,u,i), CC(d,b), CI(b,i), ActiveRef2(c,v), ActiveRef2(b,w).
ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), return(w,u,i), CC(b,d), CI(d,i), ActiveRef2(c,v), ActiveRef2(b,w).
ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), param(w,u,i), CC(d,b), CI(b,i), ActiveRef2(c,v), ActiveRef2(b,w).
ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), return(w,u,i), CC(b,d), CI(d,i), ActiveRef2(c,v), ActiveRef2(b,w).

# 3) v_c -> u_d -> w_d -> o -> x_b -> y_b
ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), Store(w,f,u), pt(d,w,o), pt(b,x,o), Load(y,x,f), ActiveRef2(c,v), ActiveRef2(b,y).
ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), Store(w,f,u), pt(d,w,o), pt(b,x,o), Load(y,x,f), ActiveRef2(c,v), ActiveRef2(b,y).

# 4) v_c -> o -> u_d -> w_d
ActiveObj2(o) :- PreFlowsToA(c,o,v), pt(d,u,o), Load(w,u,_), ActiveRef2(c,v), ActiveRef2(d,w).
ActiveObj2(o) :- PreFlowsToR(c,o,v), pt(d,u,o), Load(w,u,_), ActiveRef2(c,v), ActiveRef2(d,w).

# 5) v_c -> u_d -> w_d
ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), Load(w,u,_), ActiveRef2(c,v), ActiveRef2(d,w).
ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), Load(w,u,_), ActiveRef2(c,v), ActiveRef2(d,w).

# 1) v_c -> u_d
# 2) v_c -> u_d -> w_d -> x_b
ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), Store(w,_,u), PostFlowsToA(b,x,d,w), ActiveRef2(c,v), ActiveRef2(b,x).
ActiveRef2(d,w) :- PostFlowsToA(c,v,d,u), Store(w,_,u), PostFlowsToA(b,x,d,w), ActiveRef2(c,v), ActiveRef2(b,x).

ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), Store(w,_,u), PostFlowsToR(b,x,d,w), ActiveRef2(c,v), ActiveRef2(b,x).
ActiveRef2(d,w) :- PostFlowsToA(c,v,d,u), Store(w,_,u), PostFlowsToR(b,x,d,w), ActiveRef2(c,v), ActiveRef2(b,x).

ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), Store(w,_,u), PostFlowsToA(b,x,d,w), ActiveRef2(c,v), ActiveRef2(b,x).
ActiveRef2(d,w) :- PostFlowsToR(c,v,d,u), Store(w,_,u), PostFlowsToA(b,x,d,w), ActiveRef2(c,v), ActiveRef2(b,x).

ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), Store(w,_,u), PostFlowsToR(b,x,d,w), ActiveRef2(c,v), ActiveRef2(b,x).
ActiveRef2(d,w) :- PostFlowsToR(c,v,d,u), Store(w,_,u), PostFlowsToR(b,x,d,w), ActiveRef2(c,v), ActiveRef2(b,x).

# 3) v_c -> u_d -> w_d -> o -> x_b
ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToA(b,o,x), ActiveRef2(c,v), ActiveRef2(b,x).
ActiveObj2(o) :- PostFlowsToA(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToA(b,o,x), ActiveRef2(c,v), ActiveRef2(b,x).

ActiveRef2(d,u) :- PostFlowsToA(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToR(b,o,x), ActiveRef2(c,v), ActiveRef2(b,x).
ActiveObj2(o) :- PostFlowsToA(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToR(b,o,x), ActiveRef2(c,v), ActiveRef2(b,x).

ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToA(b,o,x), ActiveRef2(c,v), ActiveRef2(b,x).
ActiveObj2(o) :- PostFlowsToR(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToA(b,o,x), ActiveRef2(c,v), ActiveRef2(b,x).

ActiveRef2(d,u) :- PostFlowsToR(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToR(b,o,x), ActiveRef2(c,v), ActiveRef2(b,x).
ActiveObj2(o) :- PostFlowsToR(c,v,d,u), Store(w,_,u), pt(d,w,o), PreFlowsToR(b,o,x), ActiveRef2(c,v), ActiveRef2(b,x).

# 4) v_c -> o -> u_d
ActiveObj2(o) :- PreFlowsToA(c,o,v), PreFlowsToA(d,o,u), ActiveRef2(c,v), ActiveRef2(d,u).
ActiveObj2(o) :- PreFlowsToA(c,o,v), PreFlowsToR(d,o,u), ActiveRef2(c,v), ActiveRef2(d,u).
ActiveObj2(o) :- PreFlowsToR(c,o,v), PreFlowsToA(d,o,u), ActiveRef2(c,v), ActiveRef2(d,u).
ActiveObj2(o) :- PreFlowsToR(c,o,v), PreFlowsToR(d,o,u), ActiveRef2(c,v), ActiveRef2(d,u).

###################
# RULES: FULL FLOWS
###################

# full flows

# o -> v_c -> u_c -> w_d
ActiveRef2(c,v) :- PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAA(c,u,d,w), ActiveObj2(o), ActiveRef2(d,w).
ActiveRef2(c,u) :- PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAA(c,u,d,w), ActiveObj2(o), ActiveRef2(d,w).

ActiveRef2(c,v) :- PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAR(c,u,d,w), ActiveObj2(o), ActiveRef2(d,w).
ActiveRef2(c,u) :- PreFlowsToA(c,o,v), Transfer(c,v,u), MidFlowsToAR(c,u,d,w), ActiveObj2(o), ActiveRef2(d,w).

ActiveRef2(c,v) :- PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRA(c,u,d,w), ActiveObj2(o), ActiveRef2(d,w).
ActiveRef2(c,u) :- PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRA(c,u,d,w), ActiveObj2(o), ActiveRef2(d,w).

ActiveRef2(c,v) :- PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRR(c,u,d,w), ActiveObj2(o), ActiveRef2(d,w).
ActiveRef2(c,u) :- PreFlowsToR(c,o,v), Transfer(c,v,u), MidFlowsToRR(c,u,d,w), ActiveObj2(o), ActiveRef2(d,w).

###################
# RULES: OUTPUT
###################

# o -> v_c -> u_c -> w_d
ActiveRef2(c,v) :- PreFlowsToFullA(c,o,v), Transfer(c,v,u), PostFlowsToA(c,u,d,w), typeFilter(w,o), ActiveObj2(o), ActiveRef2(d,w).
ActiveRef2(c,v) :- PreFlowsToFullA(c,o,v), Transfer(c,v,u), PostFlowsToR(c,u,d,w), typeFilter(w,o), ActiveObj2(o), ActiveRef2(d,w).
ActiveRef2(c,v) :- PreFlowsToFullR(c,o,v), Transfer(c,v,u), PostFlowsToA(c,u,d,w), typeFilter(w,o), ActiveObj2(o), ActiveRef2(d,w).
ActiveRef2(c,v) :- PreFlowsToFullR(c,o,v), Transfer(c,v,u), PostFlowsToR(c,u,d,w), typeFilter(w,o), ActiveObj2(o), ActiveRef2(d,w).

# o2 -> v_c -> u_c -> o1
ActiveRef2(c,v) :- PtFull(c,v,o2), Store(u,_,v), PtFull(c,u,o1), ActiveObj2(o1), ActiveObj2(o2).
ActiveRef2(c,u) :- PtFull(c,v,o2), Store(u,_,v), PtFull(c,u,o1), ActiveObj2(o1), ActiveObj2(o2).
