##################
# Active Partial FLows Relations
##################

###################
# CONFIGURATION
###################

# name=cfl-partial-pt-active-dlog

.include "Z.dom"
.include "M.dom"
.include "C.dom"
.include "V.dom"
.include "H.dom"
.include "F.dom"
.include "I.dom"

.bddvarorder C0xC1xC2_V0xV1xV2_F0_I0

###################
# INPUT: PARTIAL FLOW RELATIONS
###################

Assign(v:V,u:V) input              # v = u
param(u:V,v:V,i:I)  input   # u is the formal parameter, v is actual arg, i is invocation stmt
return(u:V,v:V,i:I) input   # u is the lhs at callsite, v is the return var, i is invocation stmt
Store(v:V,f:F,u:V) input           # v.f = u
Load(v:V,u:V,f:F) input            # v = u.f
CI(c:C,i:I) input # stmt i is the top element in the k-limited callstack c
CC(c:C,d:C) input # there exists i s.t. c++[i] = d

PreFlowsToA(c:C,o:C,v:V) input
PreFlowsToR(c:C,o:C,v:V) input
PostFlowsToA(c:C,v:V,d:C,u:V) input
PostFlowsToR(c:C,v:V,d:C,u:V) input
MidFlowsToAA(c:C,v:V,d:C,u:V) input
MidFlowsToAR(c:C,v:V,d:C,u:V) input
MidFlowsToRA(c:C,v:V,d:C,u:V) input
MidFlowsToRR(c:C,v:V,d:C,u:V) input

typeFilter(v:V,o:C) input   # type wise, v can point-to o

PreFlowsToFullA(c:C,o:C,v:V) input
PreFlowsToFullR(c:C,o:C,v:V) input
Transfer(v:V,u:V) input

Varg(v:V,c:C) input
Vret(v:V,c:C) input

pt(c:C,v:V,o:C) input

###################
# INPUT: ACTIVE REF AND OBJ FROM TAINT
###################

ActiveRef(c:C,v:V) input
ActiveObj(o:C) input

###################
# INTERMEDIATE: CONSTRAINED
###################

CPreFlowsToFullA(c:C,o:C,v:V) output
CPreFlowsToFullR(c:C,o:C,v:V) output

CPostFlowsToA(c:C,v:V,w:V) output
CPostFlowsToR(c:C,v:V,w:V) output

###################
# OUTPUT: ACTIVE OBJS AND REFS
###################

#ActiveRef2(c:C,v:V) output

ActiveRefA(c:C,v:V) output
ActiveRefR(c:C,v:V) output
ActiveRefAP(c:C,v:V) output
ActiveRefRP(c:C,v:V) output

ActiveVarg(v:V) output
ActiveVret(v:V) output

ActiveTransfer(v:V,u:V) output
ActiveTypeFilter(o:C,v:V) output
ActivePreFlowsToA(c:C,o:C,v:V) output
ActivePreFlowsToR(c:C,o:C,v:V) output
ActiveMidFlowsToAA(c:C,v:V,d:C,u:V) output
ActiveMidFlowsToAR(c:C,v:V,d:C,u:V) output
ActiveMidFlowsToRA(c:C,v:V,d:C,u:V) output
ActiveMidFlowsToRR(c:C,v:V,d:C,u:V) output
ActivePostFlowsToA(c:C,v:V,d:C,u:V) output
ActivePostFlowsToR(c:C,v:V,d:C,u:V) output

###################
# RULES: ACTIVE VARG, VRET, AND TRANSFER
###################

#ActiveRef2(c,v) :- ActiveRef(c,v).

#ActiveVarg(v) :- Varg(v,c), ActiveRefA(c,v).
#ActiveVarg(v) :- Varg(v,c), ActiveRefAP(c,v).
#ActiveVret(v) :- Vret(v,c), ActiveRefR(c,v).
#ActiveVret(v) :- Vret(v,c), ActiveRefRP(c,v).

#ActiveTransfer(v,u) :- Transfer(c,v,u), ActiveRefA(c,v), ActiveRefAP(c,u).
#ActiveTransfer(v,u) :- Transfer(c,v,u), ActiveRefA(c,v), ActiveRefRP(c,u).
#ActiveTransfer(v,u) :- Transfer(c,v,u), ActiveRefR(c,v), ActiveRefAP(c,u).
#ActiveTransfer(v,u) :- Transfer(c,v,u), ActiveRefR(c,v), ActiveRefRP(c,u).

#ActiveTypeFilter(o,v) :- ActiveObj(o), ActiveRef(_,v).

#ActivePreFlowsToA(c,o,v) :- PreFlowsToA(c,o,v), ActiveObj(o), ActiveRefA(c,v).
#ActivePreFlowsToR(c,o,v) :- PreFlowsToA(c,o,v), ActiveObj(o), ActiveRefR(c,v).

#ActiveMidFlowsToAA(c,v,d,u) :- MidFlowsToAA(c,v,d,u), ActiveRefAP(c,v), ActiveRefA(d,u).
#ActiveMidFlowsToAR(c,v,d,u) :- MidFlowsToAR(c,v,d,u), ActiveRefAP(c,v), ActiveRefR(d,u).
#ActiveMidFlowsToRA(c,v,d,u) :- MidFlowsToRA(c,v,d,u), ActiveRefRP(c,v), ActiveRefA(d,u).
#ActiveMidFlowsToRR(c,v,d,u) :- MidFlowsToRR(c,v,d,u), ActiveRefRP(c,v), ActiveRefR(d,u).

#ActivePostFlowsToA(c,v,d,u) :- PostFlowsToA(c,v,d,u), ActiveRef2(c,v), ActiveRef(d,u).
#ActivePostFlowsToR(c,v,d,u) :- PostFlowsToR(c,v,d,u), ActiveRef2(c,v), ActiveRef(d,u).

###################
# RULES: OUTPUT
###################

# o -> v_c -> u_c -> w_d
# ActiveRef2 denotes endpoints of PreFlowsToFullA

CPreFlowsToFullA(c,o,v) :- ActiveObj(o), PreFlowsToFullA(c,o,v).
CPreFlowsToFullR(c,o,v) :- ActiveObj(o), PreFlowsToFullR(c,o,v).

CPostFlowsToA(c,u,w) :- PostFlowsToA(c,u,d,w), ActiveRef(d,w).
CPostFlowsToR(c,u,w) :- PostFlowsToR(c,u,d,w), ActiveRef(d,w).

ActiveRefA(c,v) :- CPostFlowsToA(c,u,w), Transfer(v,u), CPreFlowsToFullA(c,o,v), typeFilter(w,o).
ActiveRefA(c,v) :- CPostFlowsToR(c,u,w), Transfer(v,u), CPreFlowsToFullA(c,o,v), typeFilter(w,o).
ActiveRefR(c,v) :- CPostFlowsToA(c,u,w), Transfer(v,u), CPreFlowsToFullR(c,o,v), typeFilter(w,o).
ActiveRefR(c,v) :- CPostFlowsToR(c,u,w), Transfer(v,u), CPreFlowsToFullR(c,o,v), typeFilter(w,o).

ActiveRefA(c,v) :- CPreFlowsToFullA(c,_,v), Transfer(v,u), MidFlowsToAA(c,u,_,_).
ActiveRefA(c,v) :- CPreFlowsToFullR(c,_,v), Transfer(v,u), MidFlowsToRA(c,u,_,_).
ActiveRefR(c,v) :- CPreFlowsToFullA(c,_,v), Transfer(v,u), MidFlowsToAR(c,u,_,_).
ActiveRefR(c,v) :- CPreFlowsToFullR(c,_,v), Transfer(v,u), MidFlowsToRR(c,u,_,_).

ActiveRefAP(c,u) :- CPostFlowsToA(c,u,w), Transfer(v,u), CPreFlowsToFullA(c,o,v), typeFilter(w,o).
ActiveRefAP(c,u) :- CPostFlowsToA(c,u,w), Transfer(v,u), CPreFlowsToFullR(c,o,v), typeFilter(w,o).
ActiveRefRP(c,u) :- CPostFlowsToR(c,u,w), Transfer(v,u), CPreFlowsToFullA(c,o,v), typeFilter(w,o).
ActiveRefRP(c,u) :- CPostFlowsToR(c,u,w), Transfer(v,u), CPreFlowsToFullR(c,o,v), typeFilter(w,o).

#ActiveRefAP(c,u) :- PreFlowsToFullA(c,o,v), Transfer(v,u), MidFlowsToAA(c,u,d,w), ActiveObj(o), ActiveRefA(d,w).
#ActiveRefAP(c,u) :- PreFlowsToFullR(c,o,v), Transfer(v,u), MidFlowsToRA(c,u,d,w), ActiveObj(o), ActiveRefR(d,w).
#ActiveRefRP(c,u) :- PreFlowsToFullA(c,o,v), Transfer(v,u), MidFlowsToAR(c,u,d,w), ActiveObj(o), ActiveRefA(d,w).
#ActiveRefRP(c,u) :- PreFlowsToFullR(c,o,v), Transfer(v,u), MidFlowsToRR(c,u,d,w), ActiveObj(o), ActiveRefR(d,w).

#ActiveRefA(c,u) :- PreFlowsToFullA(c,o,v), Transfer(v,u), ActiveObj(o).
#ActiveRefA(c,u) :- PreFlowsToFullA(c,o,v), Transfer(v,u), ActiveObj(o).
#ActiveRefR(c,u) :- PreFlowsToFullR(c,o,v), Transfer(v,u), ActiveObj(o).
#ActiveRefR(c,u) :- PreFlowsToFullR(c,o,v), Transfer(v,u), ActiveObj(o).
