#ICCG Construction
##################
# name=iccg-dlog

.include "M.dom"
.include "I.dom"
.include "T.dom"
.include "Z.dom"
.include "V.dom"
.include "C.dom"
.include "H.dom"
.include "S.dom"

.bddvarorder M0xM1_I0_Z0_V0_C0xC1_H0_S0_T0_T1

IinvkArg(i:I,n:Z,v:V) input  # v is the nth args of the method m in invocation i.
pt(c:C,v:V,o:C)    input  # in context c, v points to o.
MI(m:M,i:I) input         # stmt i belongs to method m.
CM(c:C,m:M) input         # c is a context of method m.
CI(c:C,i:I) input         # stmt i is the top element in the k-limited callstack c
CC(c:C,d:C) input         # there exists i s.t. c++[i] = d, c is old ctx, d is new ctx. 

CH(o:C,h:H) input         # contextâ€™ified abstract location o corresponds to new stmt h
HT(h:H,t:T) input         # heap h point to Type t.

StatIM(i:I,m:M) input     # i statically invokes m. 
SpecIM(i:I,m:M) input     # i special invoke m. 
VirtIM(i:I,m:M) input     # i virtually invokes m. 

SubSig(m:M,s:S) input     # s is subsignature of m.
Dispatch(t:T,s:S,m:M) input     # t.m has subsig s.


DI(c:C,i:I) output  # invocation i has context c in method.
DIC(d:C,i:I,c:C) output  # 
CICM(d:C,i:I,c:C,m:M)   output  # i in cotext d calls method m in context c.

###################
#    RULES
###################

DI(c,i) :- CM(c,m), MI(m,i).
DIC(c,i,d) :- CI(d,i), CC(c,d).

CICM(d,i,c,m) :- StatIM(i,m), DI(d,i), DIC(d,i,c).
CICM(d,i,c,m) :- SpecIM(i,m), DI(d,i), DIC(d,i,c).
CICM(d,i,c,m2) :- VirtIM(i,m1), IinvkArg(i,0,v), DI(d,i), pt(d,v,o), CH(o,h), HT(h,t), SubSig(m1,s), Dispatch(t,s,m2), DIC(d,i,c).
