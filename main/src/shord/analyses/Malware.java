package shord.analyses;

import shord.program.Program;

import shord.project.analyses.JavaAnalysis;
import shord.project.analyses.ProgramRel;
import shord.project.ClassicProject;

import chord.project.Chord;

import java.util.List;
import java.util.ArrayList;

/**
  * Given an app, deciding its family.
  **/

@Chord(name="malware-java")

public class Malware extends JavaAnalysis
{
	public void run() {
        List<String> family = new ArrayList<String>();
	    ProgramRel relAdrd = (ProgramRel) ClassicProject.g().getTrgt("ADRD");
	    ProgramRel relAnserverBot = (ProgramRel) ClassicProject.g().getTrgt("AnserverBot");
	    ProgramRel relBaseBridge = (ProgramRel) ClassicProject.g().getTrgt("BaseBridge");
	    ProgramRel relBeanBot = (ProgramRel) ClassicProject.g().getTrgt("BeanBot");
	    ProgramRel relBgserv = (ProgramRel) ClassicProject.g().getTrgt("Bgserv");
	    ProgramRel relCoinPirate = (ProgramRel) ClassicProject.g().getTrgt("CoinPirate");
	    ProgramRel relDroidCoupon = (ProgramRel) ClassicProject.g().getTrgt("DroidCoupon");
	    ProgramRel relDroidDream = (ProgramRel) ClassicProject.g().getTrgt("DroidDream");
	    ProgramRel relDroidDreamLight = (ProgramRel) ClassicProject.g().getTrgt("DroidDreamLight");
	    ProgramRel relDroidKf1 = (ProgramRel) ClassicProject.g().getTrgt("DroidKungFu1");
	    ProgramRel relDroidKf2 = (ProgramRel) ClassicProject.g().getTrgt("DroidKungFu2");
	    ProgramRel relDroidKf3 = (ProgramRel) ClassicProject.g().getTrgt("DroidKungFu3");
	    ProgramRel relDroidKf4 = (ProgramRel) ClassicProject.g().getTrgt("DroidKungFu4");
	    ProgramRel relGeinimi = (ProgramRel) ClassicProject.g().getTrgt("Geinimi");
	    ProgramRel relGM = (ProgramRel) ClassicProject.g().getTrgt("GingerMaster");
	    ProgramRel relGoldDream= (ProgramRel) ClassicProject.g().getTrgt("GoldDream");
	    ProgramRel relPJapps = (ProgramRel) ClassicProject.g().getTrgt("PJapps");
	    ProgramRel relJSMS = (ProgramRel) ClassicProject.g().getTrgt("jSMSHider");

		relAdrd.load();
        if(relAdrd.size() > 0)
            family.add("ADRD");

		relAnserverBot.load();
        if(relAnserverBot.size() > 0)
            family.add("AnserverBot");

		relBaseBridge.load();
        if(relBaseBridge.size() > 0)
            family.add("BaseBridge");

		relBeanBot.load();
        if(relBeanBot.size() > 0)
            family.add("BeanBot");
	    
		relBgserv.load();
        if(relBgserv.size() > 0)
            family.add("Bgserv");

		relCoinPirate.load();
        if(relCoinPirate.size() > 0)
            family.add("CoinPirate");

		relDroidCoupon.load();
        if(relDroidCoupon.size() > 0)
            family.add("DroidCoupon");

		relDroidDream.load();
        if(relDroidDream.size() > 0)
            family.add("DroidDream");

		relDroidDreamLight.load();
        if(relDroidDreamLight.size() > 0)
            family.add("DroidDreamLight");

		relDroidKf1.load();
        if(relDroidKf1.size() > 0)
            family.add("DroidKungFu1");

		relDroidKf2.load();
        if(relDroidKf2.size() > 0)
            family.add("DroidKungFu2");

		relDroidKf3.load();
        if(relDroidKf3.size() > 0)
            family.add("DroidKungFu3");


		relDroidKf4.load();
        if(relDroidKf4.size() > 0)
            family.add("DroidKungFu4");

		relGeinimi.load();
        if(relGeinimi.size() > 0)
            family.add("Geinimi");

		relGM.load();
        if(relGM.size() > 0)
            family.add("GingerMaster");

		relGoldDream.load();
        if(relGoldDream.size() > 0)
            family.add("GoldDream");

		relPJapps.load();
        if(relPJapps.size() > 0)
            family.add("Pjapps");

		relJSMS.load();
        if(relJSMS.size() > 0)
            family.add("jSMSHider");
        ///////////////
        relAdrd.close();
        relAnserverBot.close();
        relBaseBridge.close();
        relBeanBot.close();
        relBgserv.close();
        relCoinPirate.close();
        relDroidCoupon.close();
        relDroidDream.close();
        relDroidDreamLight.close();
        relDroidKf1.close();
        relDroidKf2.close();
        relDroidKf3.close();
        relDroidKf4.close();
        relGeinimi.close();
        relGM.close();
        relGoldDream.close();
        relPJapps.close();
        relJSMS.close();
        String malStr = family.toString();
        malStr = malStr.replaceAll("\\s+","");
        System.out.println("-----------Malware family=: " + malStr);
	}

}
