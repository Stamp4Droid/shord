# Field-sensitive, k-CFA-based, heap-flow-based, taint-flow-based taint
# analysis.

# Taint flow analysis (e.g. T2), except uses points-to from BDDBDDB

# Not handling:
# - Nested passthrough taint
# - ...

# Points-to rules
R1[f] :: cs_refStore[f] _flowsTo

# Basic taint propagation rules
Src2Obj :: cs_srcRefFlow _flowsTo

R4[f] :: cs_primStore[f] _flowsTo
R5[f] :: flowsTo cs_primLoad[f]
R6 :: R4[f] R5[f]

Src2Prim :: cs_srcPrimFlow
          | Src2Prim cs_primAssign
	  | Src2Prim cs_primAssignArg
	  | Src2Prim cs_primAssignRet
          | Src2Prim R6
	  | Src2Obj R5[*]

Obj2Sink :: flowsTo cs_refSinkFlow

# Passthrough handling
Src2Ref :: Src2Obj flowsTo

Src2Obj :: Src2Ref cs_refRefFlow _flowsTo
	 | Src2Ref cs_passThroughStub _flowsTo
         | Src2Prim cs_primRefFlow _flowsTo
	 | Src2Prim cs_primRefFlowStub _flowsTo

Src2Prim :: Src2Prim cs_primPrimFlow
	  | Src2Prim cs_primPassThroughStub
          | Src2Ref cs_refPrimFlow
	  | Src2Ref cs_refPrimFlowStub

# Nested taint rules
# o tainted => o.* tainted
InstFldPt :: _R1[*] _flowsTo
Src2Obj :: Src2Obj InstFldPt

# o escapes => o.* escapes
Obj2Sink :: _InstFldPt Obj2Sink

Src2Sink :: Src2Prim R4[*] Obj2Sink
          | Src2Obj Obj2Sink
          | Src2Prim cs_primSinkFlow

.output Src2Sink
.weights cs_passThroughStub 1 cs_primRefFlowStub 1 cs_primPassThroughStub 1 cs_refPrimFlowStub 1
