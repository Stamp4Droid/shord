{ActiveTransferArg;<java.lang.Object: void <init>()>;0;0}#0
{RefArg2PrimRetTStub;<android.location.Location: float getAccuracy()>;0;null}#0
{ActiveTransferArg;<android.app.Service: boolean onUnbind(android.content.Intent)>;1;0}#0
{ActiveTransferArg;<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>;1;0}#0
{ActiveTransferRet;<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>;2;null}#0
{ActiveTransferArg;<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>;1;2}#0
{RefArg2RefArgTStub;<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>;3;1}#0
{ActiveTransferArg;<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>;4;1}#0
{ActiveTransferArg;<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>;0;1}#0
{RefArg2PrimRetTStub;<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[])>;1;null}#0
{ActiveTransferRet;<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>;0;null}#0
{ActiveTransferRet;<android.test.mock.MockPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>;1;null}#0
{RefArg2RefArgTStub;<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>;1;2}#0
{PrimArg2RefArgTStub;<android.content.res.AssetManager$AssetInputStream: int read(byte[],int,int)>;3;1}#0
{RefArg2RefArgTStub;<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>;0;2}#0
{ActiveTransferRet;<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>;1;null}#0
{ActiveTransferRet;<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)>;0;null}#0
{ActiveTransferArg;<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>;0;2}#0
{PrimArg2RefArgTStub;<java.io.FilterInputStream: int read(byte[],int,int)>;3;0}#0
{ActiveTransferArg;<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>;1;0}#0
{RefArg2RefArgTStub;<java.io.BufferedOutputStream: void write(byte[],int,int)>;1;0}#0
{PrimArg2RefArgTStub;<java.util.zip.InflaterInputStream: int read(byte[],int,int)>;2;1}#0
{RefArg2RefArgTStub;<java.io.BufferedOutputStream: void write(byte[],int,int)>;0;1}#0
{ActiveTransferArg;<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>;1;2}#0
{ActiveTransferRet;<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>;0;null}#0
{Ref2RefRetTStub;<java.lang.String: java.lang.String concat(java.lang.String)>;0;null}#1
{RefArg2PrimRetTStub;<java.net.URI: int getPort()>;0;null}#0
{ActiveTransferRet;<android.test.mock.MockPackageManager: java.util.List getInstalledApplications(int)>;0;null}#0
{ActiveTransferArg;<android.test.mock.MockPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>;1;0}#0
{RefArg2PrimRetTStub;<java.util.zip.ZipInputStream: int read(byte[],int,int)>;1;null}#0
{PrimArg2RefArgTStub;<java.io.FilterInputStream: int read(byte[],int,int)>;3;1}#0
{RefArg2RefArgTStub;<java.util.HashMap: boolean containsKey(java.lang.Object)>;0;1}#0
{ActiveTransferArg;<android.content.Intent: android.content.Intent setAction(java.lang.String)>;0;1}#0
{RefArg2RefArgTStub;<java.util.HashMap: boolean containsKey(java.lang.Object)>;1;0}#0
{RefArg2RefArgTStub;<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>;1;2}#0
{ActiveTransferRet;<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>;0;null}#0
{ActiveTransferArg;<java.net.Socket: void bind(java.net.SocketAddress)>;1;0}#0
{RefArg2RefArgTStub;<android.content.UriMatcher: int match(android.net.Uri)>;1;0}#0
{ActiveTransferRet;<android.content.Intent: android.content.Intent setAction(java.lang.String)>;1;null}#0
{RefArg2RefArgTStub;<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>;0;1}#0
{RefArg2RefArgTStub;<java.lang.String: int indexOf(java.lang.String)>;0;1}#0
{RefArg2PrimRetTStub;<java.lang.String: int indexOf(java.lang.String,int)>;0;null}#0
{ActiveTransferRet;<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>;0;null}#0
{ActiveTransferRet;<android.content.Intent: android.content.Intent setAction(java.lang.String)>;0;null}#0
{ActiveTransferArg;<android.app.Service: void onRebind(android.content.Intent)>;1;0}#0
{ActiveTransferArg;<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>;0;2}#0
{Ref2RefRetTStub;<android.location.Location: java.lang.String toString()>;0;null}#1
{ActiveTransferRet;<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>;2;null}#0
{RefArg2PrimRetTStub;<java.io.PushbackInputStream: int read(byte[],int,int)>;1;null}#0
{RefArg2RefArgTStub;<android.app.Activity: void startActivity(android.content.Intent)>;0;1}#0
{ActiveTransferRet;<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>;1;null}#0
{RefArg2RefArgTStub;<java.util.Vector: boolean contains(java.lang.Object)>;0;1}#0
{ActiveTransferRet;<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>;0;null}#0
{PrimArg2RefArgTStub;<java.util.zip.GZIPInputStream: int read(byte[],int,int)>;2;1}#0
{RefArg2PrimRetTStub;<android.content.res.AssetFileDescriptor$AutoCloseInputStream: int read(byte[],int,int)>;1;null}#0
{ActiveTransferArg;<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValue(java.lang.String,java.lang.Object)>;0;2}#0
{RefArg2RefArgTStub;<org.apache.http.message.AbstractHttpMessage: void setHeader(java.lang.String,java.lang.String)>;0;2}#0
{PrimArg2RefArgTStub;<java.lang.String: int indexOf(java.lang.String,int)>;2;0}#0
{RefArg2RefArgTStub;<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>;0;1}#0
{ActiveTransferArg;<android.app.Service: void onStart(android.content.Intent,int)>;1;0}#0
{ActiveTransferArg;<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>;0;2}#0
{ActiveTransferArg;<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>;1;2}#0
{ActiveTransferRet;<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>;0;null}#0
{ActiveTransferArg;<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>;1;0}#0
{RefArg2RefArgTStub;<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>;2;4}#0
{PrimArg2RefArgTStub;<java.util.zip.ZipInputStream: int read(byte[],int,int)>;3;1}#0
{RefArg2RefArgTStub;<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>;1;0}#0
{Ref2RefArgTStub;<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>;2;0}#0
{Ref2RefRetTStub;<java.lang.String: java.lang.String concat(java.lang.String)>;1;null}#1
{ActiveTransferRet;<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>;0;null}#0
{ActiveTransferArg;<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>;2;0}#0
{ActiveTransferRet;<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>;0;null}#0
{RefArg2RefArgTStub;<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>;1;0}#0
{RefArg2RefArgTStub;<java.lang.String: boolean contains(java.lang.CharSequence)>;0;1}#0
{ActiveTransferArg;<android.app.Service: int onStartCommand(android.content.Intent,int,int)>;1;0}#0
{RefArg2PrimRetTStub;<android.location.Location: long getTime()>;0;null}#0
{ActiveTransferArg;<android.content.ContentValues: void put(java.lang.String,java.lang.String)>;0;2}#0
{ActiveTransferRet;<android.test.mock.MockPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>;0;null}#0
{RefArg2RefArgTStub;<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>;0;1}#0
{RefArg2RefArgTStub;<java.util.Vector: boolean remove(java.lang.Object)>;0;1}#0
{ActiveTransferRet;<android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>;0;null}#0
{ActiveTransferRet;<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValue(java.lang.String,java.lang.Object)>;0;null}#0
{ActiveTransferRet;<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>;0;null}#0
{ActiveTransferArg;<android.widget.VideoView: void setVideoURI(android.net.Uri)>;1;0}#0
{RefArg2RefArgTStub;<java.util.TreeSet: boolean add(java.lang.Object)>;0;1}#0
{RefArg2RefArgTStub;<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>;0;2}#0
{RefArg2RefArgTStub;<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>;1;2}#0
{ActiveTransferArg;<android.content.ContentValues: void put(java.lang.String,java.lang.String)>;2;0}#0
{PrimArg2RefArgTStub;<java.util.zip.InflaterInputStream: int read(byte[],int,int)>;3;1}#0
{ActiveTransferRet;<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>;0;null}#0
{RefArg2RefArgTStub;<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>;4;2}#0
{RefArg2RefArgTStub;<java.util.ArrayList: boolean addAll(java.util.Collection)>;1;0}#0
{RefArg2RefArgTStub;<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>;1;0}#0
{RefArg2PrimRetTStub;<android.content.res.AssetManager$AssetInputStream: int read(byte[],int,int)>;1;null}#0
{RefArg2RefArgTStub;<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>;1;2}#0
{RefArg2RefArgTStub;<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>;0;1}#0
{RefArg2RefArgTStub;<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>;0;1}#0
{RefArg2RefArgTStub;<android.media.MediaPlayer: void setDataSource(java.lang.String)>;0;1}#0
{RefArg2RefArgTStub;<android.content.ContentValues: void put(java.lang.String,java.lang.String)>;0;2}#0
{Ref2RefArgTStub;<java.util.ArrayList: boolean add(java.lang.Object)>;1;0}#1
{ActiveTransferRet;<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>;1;null}#0
{ActiveTransferArg;<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>;1;0}#0
{ActiveTransferArg;<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>;2;0}#0
{RefArg2RefArgTStub;<java.util.jar.Attributes: java.lang.Object put(java.lang.Object,java.lang.Object)>;2;1}#0
{RefArg2RefArgTStub;<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>;2;1}#0
{ActiveTransferArg;<java.util.HashSet: boolean contains(java.lang.Object)>;1;0}#0
{RefArg2RefArgTStub;<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>;2;1}#0
{RefArg2RefArgTStub;<android.media.MediaPlayer: void setDataSource(java.lang.String)>;1;0}#0
{RefArg2RefArgTStub;<java.util.ArrayList: boolean addAll(java.util.Collection)>;0;1}#0
{RefArg2RefArgTStub;<java.util.Vector: boolean remove(java.lang.Object)>;1;0}#0
{RefArg2PrimRetTStub;<java.util.zip.GZIPInputStream: int read(byte[],int,int)>;1;null}#0
{ActiveTransferRet;<android.test.mock.MockPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>;0;null}#0
{RefArg2RefArgTStub;<android.test.mock.MockPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>;1;0}#0
{Ref2RefRetTStub;<java.util.ArrayList: java.lang.Object get(int)>;0;null}#1
{ActiveTransferArg;<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>;3;0}#0
{PrimArg2RefArgTStub;<java.util.zip.ZipInputStream: int read(byte[],int,int)>;2;1}#0
{ActiveTransferArg;<android.content.ContextWrapper: boolean stopService(android.content.Intent)>;1;0}#0
{ActiveTransferArg;<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>;1;0}#0
{ActiveTransferRet;<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>;2;null}#0
{RefArg2RefArgTStub;<org.apache.http.client.methods.HttpRequestBase: void setURI(java.net.URI)>;1;0}#0
{RefArg2RefArgTStub;<android.content.UriMatcher: int match(android.net.Uri)>;0;1}#0
{ActiveTransferArg;<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>;2;0}#0
{Ref2RefArgTStub;<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>;1;0}#1
{RefArg2RefArgTStub;<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>;1;2}#0
{ActiveTransferArg;<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>;1;2}#0
{RefArg2RefArgTStub;<android.widget.TextView: void setText(java.lang.CharSequence)>;0;1}#0
{ActiveTransferArg;<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>;2;0}#0
{ActiveTransferArg;<android.app.Activity: void startActivity(android.content.Intent)>;1;0}#0
{RefArg2PrimRetTStub;<java.util.zip.InflaterInputStream: int read(byte[],int,int)>;1;null}#0
{ActiveTransferArg;<org.apache.http.message.AbstractHttpMessage: void addHeader(java.lang.String,java.lang.String)>;0;1}#0
{RefArg2RefArgTStub;<android.content.ContentValues: void put(java.lang.String,java.lang.String)>;2;0}#0
{RefArg2PrimRetTStub;<java.io.FilterInputStream: int read(byte[],int,int)>;1;null}#0
{RefArg2RefArgTStub;<java.io.RandomAccessFile: void writeUTF(java.lang.String)>;0;1}#0
{PrimArg2RefArgTStub;<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>;1;0}#0
{ActiveTransferArg;<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>;0;2}#0
{PrimArg2RefArgTStub;<java.io.FilterInputStream: int read(byte[],int,int)>;2;1}#0
{RefArg2RefArgTStub;<java.io.RandomAccessFile: void writeUTF(java.lang.String)>;1;0}#0
{RefArg2RefArgTStub;<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>;1;0}#0
{PrimArg2RefArgTStub;<java.io.FilterInputStream: int read(byte[],int,int)>;2;0}#0
{PrimArg2RefArgTStub;<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>;1;2}#0
{RefArg2PrimRetTStub;<java.io.BufferedInputStream: int read(byte[],int,int)>;1;null}#0
{RefArg2RefArgTStub;<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>;1;0}#0
{RefArg2RefArgTStub;<org.apache.http.message.AbstractHttpMessage: void setHeader(java.lang.String,java.lang.String)>;2;0}#0
{RefArg2RefArgTStub;<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>;2;1}#0
{RefArg2RefArgTStub;<java.util.Vector: boolean contains(java.lang.Object)>;1;0}#0
{RefArg2RefArgTStub;<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>;2;1}#0
{RefArg2RefArgTStub;<android.widget.TextView: void setText(java.lang.CharSequence)>;1;0}#0
{ActiveTransferRet;<java.net.InetSocketAddress: java.lang.String toString()>;0;null}#0
{RefArg2PrimRetTStub;<android.content.res.AssetManager$AssetInputStream: int read(byte[])>;1;null}#0
{RefArg2RefArgTStub;<android.test.mock.MockPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>;0;1}#0
{RefArg2PrimRetTStub;<javax.crypto.CipherInputStream: int read(byte[],int,int)>;1;null}#0
{RefArg2RefArgTStub;<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>;2;0}#0
{PrimArg2RefArgTStub;<android.content.res.AssetManager$AssetInputStream: int read(byte[],int,int)>;2;1}#0
{ActiveTransferArg;<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>;2;0}#0
{RefArg2RefArgTStub;<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>;1;2}#0
{RefArg2RefArgTStub;<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>;0;2}#0
{PrimArg2RefArgTStub;<java.util.zip.GZIPInputStream: int read(byte[],int,int)>;3;1}#0
{RefArg2RefArgTStub;<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>;1;0}#0
{ActiveTransferRet;<java.util.HashSet: java.util.Iterator iterator()>;0;null}#0
{RefArg2RefArgTStub;<java.util.TreeSet: boolean add(java.lang.Object)>;1;0}#0
{RefArg2RefArgTStub;<java.util.Hashtable: boolean containsKey(java.lang.Object)>;0;1}#0
{ActiveTransferRet;<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>;0;null}#0
{RefArg2RefArgTStub;<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>;1;2}#0
{ActiveTransferRet;<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>;2;null}#0
{ActiveTransferArg;<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>;0;1}#0

