public abstract class java.io.OutputStream extends java.lang.Object implements java.io.Closeable, java.io.Flushable
{

    public void <init>()
    {
        java.io.OutputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.OutputStream;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    public void close() throws java.io.IOException
    {
        java.io.OutputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.OutputStream;
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream r0;
        java.lang.RuntimeException $r1;

        r0 := @this: java.io.OutputStream;
        $r1 = new java.lang.RuntimeException;
        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");
        throw $r1;
    }

    public void write(byte[]) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] r1;

        r0 := @this: java.io.OutputStream;
        r1 := @parameter0: byte[];
        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: java.io.OutputStream;
        r1 := @parameter0: byte[];
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        return;
    }

    public abstract void write(int) throws java.io.IOException;
}
