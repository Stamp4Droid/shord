     [java] CG#<com.run.runningapp.RunActivity: void onCreate(android.os.Bundle)>#<com.run.runningapp.Variables: void <clinit>()>
     [java] CG#<com.run.runningapp.RunActivity: void onCreate(android.os.Bundle)>#<com.run.runningapp.RunActivity: void onResume()>
     [java] CG#<com.run.runningapp.MainMenu: void onClickLoginComplete(android.view.View)>#<com.run.runningapp.MainMenu: void setupEverything()>
     [java] CG#<com.run.runningapp.MainMenu: void onClickLoginComplete(android.view.View)>#<com.run.runningapp.MainMenu: void startRunActivity(android.view.View)>
     [java] CG#<com.run.runningapp.MainMenu: void onClickLoginComplete(android.view.View)>#<com.run.runningapp.MainMenu: void saveLogin(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
     [java] CG#<com.run.Databases.RunpointsDataSource: void <init>(android.content.Context)>#<com.run.Databases.MySQLiteHelper: void <init>(android.content.Context)>
     [java] CG#<com.run.runningapp.RunningService: void <init>()>#<com.run.runningapp.RunningService$MyBinder: void <init>(com.run.runningapp.RunningService)>
     [java] CG#<com.run.runningapp.RunActivity: void showStatsArea()>#<com.run.Databases.RunpointsDataSource: void <init>(android.content.Context)>
     [java] CG#<com.run.runningapp.RunActivity: void showStatsArea()>#<com.run.Databases.RunpointsDataSource: java.util.List getAllRunpoints()>
     [java] CG#<com.run.runningapp.RunActivity: void showStatsArea()>#<com.run.Databases.RunpointsDataSource: void close()>
     [java] CG#<com.run.runningapp.RunActivity: void showStatsArea()>#<com.run.Databases.RunpointsDataSource: void open()>
     [java] CG#<com.run.runningapp.RunActivity: void showStatsArea()>#<com.run.Databases.Runpoint: java.lang.String toString()>
     [java] CG#<com.run.runningapp.RunActivity: void updateInitialUI()>#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>
     [java] CG#<com.run.runningapp.RunActivity: void updateInitialUI()>#<com.run.runningapp.MainMenu: void startRunActivity(android.view.View)>
     [java] CG#<com.run.runningapp.RunActivity: void <clinit>()>#<com.run.runningapp.RunActivity: void <init>()>
     [java] CG#<com.run.runningapp.RunActivity: boolean onCreateOptionsMenu(android.view.Menu)>#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: void onPostExecute(java.lang.Object)>
     [java] CG#<com.run.runningapp.RunActivity: boolean onCreateOptionsMenu(android.view.Menu)>#<com.run.Databases.Runpoint: java.lang.String toString()>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void onResume()>#<com.run.Databases.Run: java.lang.String toString()>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void onResume()>#<com.run.Databases.RunsDataSource: void close()>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void onResume()>#<com.run.Databases.RunsDataSource: java.util.List getAllRuns()>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void onResume()>#<com.run.Databases.RunsDataSource: void open()>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void onResume()>#<com.run.Databases.RunsDataSource: void <init>(android.content.Context)>
     [java] CG#<com.run.runningapp.MainMenu: void onCreate(android.os.Bundle)>#<com.run.runningapp.MainMenu: void onClickLoginComplete(android.view.View)>
     [java] CG#<com.run.runningapp.RunningService$1: void onLocationChanged(android.location.Location)>#<com.run.Databases.RunpointsDataSource: void createRunpoint(long,double,double,java.lang.Long)>
     [java] CG#<com.run.runningapp.RunningService$1: void onLocationChanged(android.location.Location)>#<com.run.Databases.RunpointsDataSource: void <init>(android.content.Context)>
     [java] CG#<com.run.runningapp.RunningService$1: void onLocationChanged(android.location.Location)>#<com.run.runningapp.RunActivity: void updateUI()>
     [java] CG#<com.run.runningapp.RunningService$1: void onLocationChanged(android.location.Location)>#<com.run.Databases.RunpointsDataSource: void close()>
     [java] CG#<com.run.runningapp.RunningService$1: void onLocationChanged(android.location.Location)>#<com.run.Databases.RunpointsDataSource: void open()>
     [java] CG#<com.run.runningapp.MainMenu: void startPreviousRunsActivity(android.view.View)>#<com.run.runningapp.PreviousRunsActivity: void <init>()>
     [java] CG#<com.run.runningapp.NFC: void <init>()>#<com.run.runningapp.NFC: void onCreate(android.os.Bundle)>
     [java] CG#<com.run.runningapp.RunActivity: void <init>()>#<com.run.runningapp.RunActivity$2: void <init>(com.run.runningapp.RunActivity)>
     [java] CG#<com.run.runningapp.RunActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>#<com.run.runningapp.RunningService$MyBinder: com.run.runningapp.RunningService getService()>
     [java] CG#<com.run.runningapp.RunActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>#<com.run.runningapp.MyStartServiceReceiver: void <init>()>
     [java] CG#<com.run.runningapp.RunActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>#<com.run.runningapp.RunActivity: com.run.runningapp.RunningService access$002(com.run.runningapp.RunActivity,com.run.runningapp.RunningService)>
     [java] CG#<com.run.runningapp.RunActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>#<com.run.runningapp.RunningService: int onStartCommand(android.content.Intent,int,int)>
     [java] CG#<com.run.runningapp.NFC: void setupNFC()>#<com.run.runningapp.NFC: void onResume()>
     [java] CG#<com.run.runningapp.NFC: void setupNFC()>#<com.run.runningapp.NFC: void toast(java.lang.String)>
     [java] CG#<com.run.Databases.RunpointsDataSource: com.run.Databases.Runpoint cursorToRunpoint(android.database.Cursor)>#<com.run.Databases.Runpoint: void <init>()>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.runningapp.RunActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.runningapp.RunningService: void <init>()>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.Databases.RunsDataSource: void close()>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.runningapp.RunActivity: void showStatsArea()>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.runningapp.MyStartServiceReceiver: void <init>()>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.Databases.RunsDataSource: com.run.Databases.Run createRun(long,java.lang.String,java.lang.String)>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.runningapp.RunActivity: void doBindService()>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.Databases.RunsDataSource: void open()>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.Databases.Runpoint: java.lang.String toString()>
     [java] CG#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>#<com.run.Databases.RunsDataSource: void <init>(android.content.Context)>
     [java] CG#<com.run.runningapp.RunActivity$1: void onLocationChanged(android.location.Location)>#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: void <init>(com.run.runningapp.RunActivity)>
     [java] CG#<com.run.runningapp.RunActivity$1: void onLocationChanged(android.location.Location)>#<com.run.runningapp.RunActivity: boolean onCreateOptionsMenu(android.view.Menu)>
     [java] CG#<com.run.runningapp.RunActivity$1: void onLocationChanged(android.location.Location)>#<com.run.Databases.Runpoint: java.lang.String toString()>
     [java] CG#<com.run.runningapp.RunActivity: void onResume()>#<com.run.Databases.RunsDataSource: com.run.Databases.Run getRun(long)>
     [java] CG#<com.run.runningapp.RunActivity: void onResume()>#<com.run.Databases.RunsDataSource: void close()>
     [java] CG#<com.run.runningapp.RunActivity: void onResume()>#<com.run.runningapp.RunActivity: void showStatsArea()>
     [java] CG#<com.run.runningapp.RunActivity: void onResume()>#<com.run.runningapp.RunActivity$1: void onLocationChanged(android.location.Location)>
     [java] CG#<com.run.runningapp.RunActivity: void onResume()>#<com.run.runningapp.RunActivity$1: void <init>(com.run.runningapp.RunActivity)>
     [java] CG#<com.run.runningapp.RunActivity: void onResume()>#<com.run.Databases.RunsDataSource: void open()>
     [java] CG#<com.run.runningapp.RunActivity: void onResume()>#<com.run.Databases.RunsDataSource: void <init>(android.content.Context)>
     [java] CG#<com.run.runningapp.MainMenu$2: void onClick(android.view.View)>#<com.run.runningapp.RunActivity: void <init>()>
     [java] CG#<com.run.runningapp.MainMenu$2: void onClick(android.view.View)>#<com.run.runningapp.RunActivity: void <clinit>()>
     [java] CG#<com.run.runningapp.MainMenu$2: void onClick(android.view.View)>#<com.run.runningapp.g: void <clinit>()>
     [java] CG#<com.run.runningapp.MainMenu: void startRunActivity(android.view.View)>#<com.run.runningapp.MainMenu$2: void <init>(com.run.runningapp.MainMenu,android.app.Dialog,android.content.Context)>
     [java] CG#<com.run.runningapp.MainMenu: void startRunActivity(android.view.View)>#<com.run.runningapp.MainMenu$2: void onClick(android.view.View)>
     [java] CG#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: void onPostExecute(android.graphics.Bitmap)>#<com.run.runningapp.RunActivity: void updateInitialUI()>
     [java] CG#<com.run.Databases.RunsDataSource: void <init>(android.content.Context)>#<com.run.Databases.MySQLiteHelper: void <init>(android.content.Context)>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void <init>()>#<com.run.runningapp.PreviousRunsActivity: void onCreate(android.os.Bundle)>
     [java] CG#<com.run.Databases.RunsDataSource: com.run.Databases.Run cursorToRun(android.database.Cursor)>#<com.run.Databases.Run: void <init>()>
     [java] CG#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: void onPostExecute(java.lang.Object)>#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: void onPostExecute(android.graphics.Bitmap)>
     [java] CG#<com.run.runningapp.RunActivity: void shareRun(android.view.View)>#<com.run.runningapp.RunActivity: void onResume()>
     [java] CG#<com.run.runningapp.RunningService$MyBinder: void <init>(com.run.runningapp.RunningService)>#<com.run.runningapp.RunningService: android.os.IBinder onBind(android.content.Intent)>
     [java] CG#<com.run.runningapp.MainMenu$1: void onClick(android.view.View)>#<com.run.runningapp.NFC: void <init>()>
     [java] CG#<com.run.runningapp.MyStartServiceReceiver: void <init>()>#<com.run.runningapp.MyStartServiceReceiver: void onReceive(android.content.Context,android.content.Intent)>
     [java] CG#<com.run.runningapp.NFC: void onPause()>#<com.run.runningapp.MainMenu: void startPreviousRunsActivity(android.view.View)>
     [java] CG#<com.run.runningapp.RunActivity$2: void <init>(com.run.runningapp.RunActivity)>#<com.run.runningapp.RunActivity: void onCreate(android.os.Bundle)>
     [java] CG#<com.run.Databases.RunsDataSource: com.run.Databases.Run createRun(long,java.lang.String,java.lang.String)>#<com.run.Databases.RunsDataSource: com.run.Databases.Run cursorToRun(android.database.Cursor)>
     [java] CG#<com.run.Databases.RunsDataSource: java.util.List getAllRuns()>#<com.run.Databases.RunsDataSource: com.run.Databases.Run cursorToRun(android.database.Cursor)>
     [java] CG#<com.run.runningapp.RunningService: int onStartCommand(android.content.Intent,int,int)>#<com.run.runningapp.RunningService$1: void <init>(com.run.runningapp.RunningService)>
     [java] CG#<com.run.runningapp.RunningService: int onStartCommand(android.content.Intent,int,int)>#<com.run.runningapp.RunningService$1: void onLocationChanged(android.location.Location)>
     [java] CG#<com.run.Databases.RunsDataSource: void open()>#<com.run.Databases.MySQLiteHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void onCreate(android.os.Bundle)>#<com.run.runningapp.PreviousRunsActivity$1: void <init>(com.run.runningapp.PreviousRunsActivity)>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void onCreate(android.os.Bundle)>#<com.run.runningapp.PreviousRunsActivity$2: void <init>(com.run.runningapp.PreviousRunsActivity,android.content.Context)>
     [java] CG#<com.run.runningapp.PreviousRunsActivity: void onCreate(android.os.Bundle)>#<com.run.runningapp.PreviousRunsActivity: void onResume()>
     [java] CG#<com.run.Databases.Runpoint: java.lang.String toString()>#<com.run.runningapp.MainMenu: void startPreviousRunsActivity(android.view.View)>
     [java] CG#<com.run.Databases.Runpoint: java.lang.String toString()>#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: void onPostExecute(java.lang.Object)>
     [java] CG#<com.run.Databases.Runpoint: java.lang.String toString()>#<com.run.runningapp.RunActivity: void shareRun(android.view.View)>
     [java] CG#<com.run.Databases.Runpoint: java.lang.String toString()>#<com.run.runningapp.MainMenu$1: void onClick(android.view.View)>
     [java] CG#<com.run.Databases.Runpoint: java.lang.String toString()>#<com.run.runningapp.RunActivity: boolean onCreateOptionsMenu(android.view.Menu)>
     [java] CG#<com.run.Databases.Runpoint: java.lang.String toString()>#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>
     [java] CG#<com.run.Databases.Runpoint: java.lang.String toString()>#<com.run.runningapp.PreviousRunsActivity: void onResume()>
     [java] CG#<com.run.Databases.Runpoint: java.lang.String toString()>#<com.run.Databases.Runpoint: java.lang.String toString()>
     [java] CG#<com.run.runningapp.MainMenu: void <init>()>#<com.run.runningapp.MainMenu: void onCreate(android.os.Bundle)>
     [java] CG#<com.run.runningapp.NFC: void onResume()>#<com.run.runningapp.NFC: void onPause()>
     [java] CG#<com.run.runningapp.MainMenu: void setupEverything()>#<com.run.runningapp.MainMenu$1: void <init>(com.run.runningapp.MainMenu)>
     [java] CG#<com.run.runningapp.MainMenu: void setupEverything()>#<com.run.runningapp.MainMenu: java.lang.String getContentName(android.content.ContentResolver,android.net.Uri)>
     [java] CG#<com.run.Databases.RunsDataSource: com.run.Databases.Run getRun(long)>#<com.run.Databases.RunsDataSource: com.run.Databases.Run cursorToRun(android.database.Cursor)>
     [java] CG#<com.run.runningapp.PreviousRunsActivity$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>#<com.run.runningapp.RunActivity: void <init>()>
     [java] CG#<com.run.Databases.RunpointsDataSource: java.util.List getAllRunpoints()>#<com.run.Databases.RunpointsDataSource: com.run.Databases.Runpoint cursorToRunpoint(android.database.Cursor)>
     [java] CG#<com.run.runningapp.MyStartServiceReceiver: void onReceive(android.content.Context,android.content.Intent)>#<com.run.runningapp.RunActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
     [java] CG#<com.run.runningapp.MyStartServiceReceiver: void onReceive(android.content.Context,android.content.Intent)>#<com.run.runningapp.RunningService: int onStartCommand(android.content.Intent,int,int)>
     [java] CG#<com.run.runningapp.NFC: void onCreate(android.os.Bundle)>#<com.run.runningapp.NFC: void setupNFC()>
     [java] CG#<com.run.runningapp.NFC: void onCreate(android.os.Bundle)>#<com.run.runningapp.NFC: void setupList()>
     [java] CG#<com.run.runningapp.RunActivity: void updateUI()>#<com.run.runningapp.MyStartServiceReceiver: void <init>()>
     [java] CG#<com.run.runningapp.RunActivity: void updateUI()>#<com.run.runningapp.RunActivity: void startStopRun(android.view.View)>
     [java] CG#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: java.lang.Object doInBackground(java.lang.Object[])>#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: android.graphics.Bitmap doInBackground(java.lang.Void[])>
     [java] CG#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: java.lang.Object doInBackground(java.lang.Object[])>#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: android.graphics.Bitmap doInBackground(java.lang.Void[])>
     [java] CG#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: java.lang.Object doInBackground(java.lang.Object[])>#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: android.graphics.Bitmap doInBackground(java.lang.Void[])>
     [java] CG#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: java.lang.Object doInBackground(java.lang.Object[])>#<com.run.runningapp.RunActivity$RetrieveWeatherInfoTask: android.graphics.Bitmap doInBackground(java.lang.Void[])>
