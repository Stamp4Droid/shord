<?xml version="1.0" encoding="UTF-8"?>
<project name="STAMP-Apk">

  <target name="-analyze-apk">
	<unjar src="${stamp.dir}/bin/api-${apilevel}/stamp.android.jar" 
		   dest="${stamp.out.dir}">
	  <patternset> 
		<include name="stamp_annotations.txt"/>
	  </patternset>
	</unjar>

	<!-- Run android-apktool to decompile the manifest and resource xml files -->
	<java classname="brut.apktool.Main" 
		  maxmemory="${stamp.maxheap}"
		  fork="true"
		  failonerror="true">
	  <jvmarg value="-ea"/>
	  <classpath>
		<pathelement location="${stamp.dir}/lib/apktool-cli-1.5.3-SNAPSHOT.jar"/>
      </classpath>
	  <arg value="d"/>
	  <arg value="--frame-path"/>
	  <arg value="${stamp.dir}"/>
	  <arg value="-s"/>
	  <arg value="${apk}"/>
	  <arg value="${stamp.out.dir}/apktool-out"/>
	</java>

    <!-- Generate harness. -->
    <java classname="stamp.harnessgen.Main"
	  maxmemory="${stamp.maxheap}"
	  fork="true"
	  failonerror="true">
      <jvmarg value="-ea"/>
      <classpath>
		<pathelement location="${stamp.dir}/bin/stamp.main.jar"/>
		<!--pathelement location="${stamp.dir}/lib/AXMLPrinter2.jar"/-->
		<pathelement location="${stamp.dir}/lib/apktool-cli-1.5.3-SNAPSHOT.jar"/>
		<pathelement location="${stamp.dir}/lib/soot.jar"/>
      </classpath>
      <arg value="${driver.dir}"/>
      <arg value="${apk}"/>
	  <arg value="${stamp.dir}/bin/api-${apilevel}/stamp.android.jar"/>
	  <arg value="${stamp.out.dir}/apktool-out"/>
    </java>


    <!-- Configure remaining Chord settings. -->
    <property name="stamp.analyses"
	      value="inject-annot,base-java,annot-java,contexts-java,pre-dlog,typefilter-dlog,pt-dlog,taint-dlog,post-java,jcflsolver"/>

    <!-- Run Chord. -->
    <java classname="shord.project.Boot" fork="true" failonerror="true">
      <jvmarg value="-ea"/>
      <sysproperty key="chord.work.dir" file="${stamp.out.dir}"/>
      <sysproperty key="chord.main.class" value="edu.stanford.stamp.harness.Main"/>
      <sysproperty key="chord.class.path" path="${apk}:${driver.dir}"/>
      <sysproperty key="chord.std.java.analysis.path" path="${stamp.dir}/bin/stamp.main.jar:${stamp.dir}/scanner/stamp.scanner.jar"/>
      <sysproperty key="chord.std.dlog.analysis.path" path="${stamp.dir}/bin/stamp.main.jar"/>
      <sysproperty key="chord.run.analyses" value="${stamp.analyses}"/>
      <sysproperty key="chord.std.scope.exclude" value=""/>
      <sysproperty key="chord.ext.scope.exclude" value=""/>
      <sysproperty key="chord.std.check.exclude" value=""/>
      <sysproperty key="chord.ext.check.exclude" value=""/>
      <sysproperty key="chord.verbose" value="${chord.verbose}"/>
      <sysproperty key="chord.print.rels" value="${stamp.printrels}"/>
      <sysproperty key="chord.max.heap" value="${chord.max.heap}"/>
      <sysproperty key="chord.bddbddb.max.heap" value="${chord.bddbddb.max.heap}"/>
      <sysproperty key="stamp.dir" value="${stamp.dir}"/>
      <sysproperty key="stamp.out.dir" value="${stamp.out.dir}"/>
	  <sysproperty key="stamp.input.type" value="${stamp.input.type}"/>
	  <sysproperty key="stamp.android.jar" value="${stamp.dir}/bin/api-${apilevel}/stamp.android.jar"/>
      <classpath>
		<pathelement location="${stamp.dir}/bin/stamp.main.jar"/>
		<pathelement location="${stamp.dir}/lib/soot.jar"/>
		<!--pathelement location="/local/mysoot/soot-github/lib/soot-develop.jar"/-->
		<pathelement location="${stamp.dir}/lib/commons-lang3-3.1.jar"/>
		<pathelement location="${stamp.dir}/lib/stamp.chord.jar"/>
      </classpath>
    </java>

	<!-- run the postprocessing python script-->
	<exec executable="python" failonerror="true">
	  <arg value="${stamp.dir}/scripts/testApkJar.py"/>
	  <arg value="-c"/>
	  <arg value="${stamp.dir}/scripts/srcClass.xml"/>
	  <arg value="-k"/>
	  <arg value="${stamp.dir}/scripts/sinkClass.xml"/>
	  <arg value="-r"/>
	  <arg value="${stamp.out.dir}/results"/>
	</exec>

  </target>

</project>
